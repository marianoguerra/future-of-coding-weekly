🧑‍🏫 Live Programming for the Classroom 🤖 LLM-focused canvas 💡 Software in Natural Language

# Our Work

🎥 [DB48X v0.7.5 quick update](https://www.youtube.com/watch?v=cd4gXl9Z78g&amp;lc=UgzL4at29mLqlN7F6U94AaABAg) via **Christophe de Dinechin**

[🧵 conversation](https://history.futureofcoding.org/history/weekly/2024/05/W2/share-your-work.html#2024-05-07T09:25:22.459Z)

![Youtube Thumbnail](https://img.youtube.com/vi/cd4gXl9Z78g/hqdefault.jpg)

The most powerful scientific calculator in the world just got one tiny step closer towards 1.0. 

🖌️ [Fig](https://fig.sonnet.io/) via **Rafał Pastuszak**

[🧵 conversation](https://history.futureofcoding.org/history/weekly/2024/05/W2/share-your-work.html#2024-05-07T10:42:51.956Z)

Hej! I made a drawing app where every pixel has a lifespan and eventually dies, check it out here: [fig.sonnet.io](https://fig.sonnet.io)



(also it has hackable, programmable brushes and a trippy geocities-eque gradients)



Motivated by a dead fig tree in my garden, not associated with the exquisite dead fish above, and partially inspired by this poem by my brother’s 3yo daughter:



 _Little ducklings walked_ 

 _then they fell_ 

 _and they died._ 



(something tells me she’ll turn out to be a goth like her uncle)



[untested.sonnet.io/Fig](https://untested.sonnet.io/Fig)

>Nothing lasts forever, so let's draw just for the fun of it!

💬 [Cole Lawrence](https://github.com/colelawrence)

[🧵 conversation](https://history.futureofcoding.org/history/weekly/2024/05/W2/share-your-work.html#2024-05-10T21:37:46.910Z)

I’m making an AI pipeline REPL directly into “Forethink,” and I just put in live previewing, so you can observe individual executions 🙂

I think this will slowly evolve depending on the features we need to build. It’s nice to build purposefully and not need to worry about being too generalizable or pretty.

🎥 [2024-05-10-Forethink-placeholder-resolution-for-single-execution](http://history.futureofcoding.org/history/msg_files/F07/F072SKJDECE.mp4)

# Devlog Together

🎥 [Quality of life improvements to code-flow-canvas](https://youtu.be/K-956F6Vwps) via [Maikel van de Lisdonk](https://www.devhelpr.com/)

[🧵 conversation](https://history.futureofcoding.org/history/weekly/2024/05/W2/devlog-together.html#2024-05-12T14:22:52.169Z)

![Youtube Thumbnail](https://img.youtube.com/vi/K-956F6Vwps/hqdefault.jpg)

I've made some very nice UX improvements to the visual programming system that I am working on: it's now possible to replace a node with compatible node-types without hassle. When a node is selected, compatible node-types are shown in a dropdown. This helps especially when doing more creative work when creating a shader/gl flow for example and getting more feeling on what the impact is of certain mathematical operations (in the video [youtu.be/K-956F6Vwps](https://youtu.be/K-956F6Vwps) I change a multiply node to an arctan calculation).



Another improvement is being able to insert a node into an existing connection.. also taking compatibility into account. This speeds up the creation process of flows in general.



Under the hood I've also made a nice improvement: I can now use jsx components using vanilla DOM without the use of react or other libraries. This is a nice DX improvement when developing my project.

# Reading Together

📝 [some wandering notes](https://www.petemillspaugh.com/a-small-matter-of-programming) via **Pete Millspaugh**

[🧵 conversation](https://history.futureofcoding.org/history/weekly/2024/05/W2/reading-together.html#2024-05-08T19:11:51.574Z)

^I finished the book a while back and just got around to jotting down [some wandering notes](https://www.petemillspaugh.com/a-small-matter-of-programming).



Would anyone be interested in doing a zoom book club discussion? Slack threads per chapter are nice for participation across time zones, but I prefer the format of reading then chatting about the whole book in one sitting

# Thinking Together

📝 [Banning the use of if Then Else](https://guitarvydas.github.io/2024/05/02/Banning-the-Use-of-IF-THEN-ELSE.html) via [Paul Tarvydas](https://guitarvydas.github.io/2021/09/23/Manifesto.html)

[🧵 conversation](https://history.futureofcoding.org/history/weekly/2024/05/W2/thinking-together.html#2024-05-07T03:09:04.765Z)

Thinking about banning the use of IF-THEN-ELSE... 

🎥 [Bootstrapping Research & Dynamicland, Dec 2019](https://www.youtube.com/watch?v=eJm44LJDU44) via **JP Posma**

[🧵 conversation](https://history.futureofcoding.org/history/weekly/2024/05/W2/thinking-together.html#2024-05-08T05:12:51.715Z)

![Youtube Thumbnail](https://img.youtube.com/vi/eJm44LJDU44/hqdefault.jpg)

The best Bret Victor talk you've never seen

💬 [Andreas S](https://twitter.com/curious_reader)

[🧵 conversation](https://history.futureofcoding.org/history/weekly/2024/05/W2/thinking-together.html#2024-05-08T14:57:10.786Z)

Hello Future of Coding!

I'm looking for something which I would describe in the following way. There was a few years ago a article on hackernews where someone showed a kind of dynamic state transition visualization. One could setup multiple nodes and avalue flow from one node to the next but there would be also a flow back to the original node. So my question would be does anyone know what I refer to? What was the name of the diagram. I tried to search for dynamic state transition diagram but it is very scary how bad search engines are these days. So the Name of the diagram , the hackernews article or related reousces would be most welcome. Thank you 🙂

# Content

🧑‍🏫 [Seymour: Live Programming for the Classroom](https://harc.github.io/seymour-live2017/) via **Nilesh Trivedi**

[🧵 conversation](https://history.futureofcoding.org/history/weekly/2024/05/W2/linking-together.html#2024-05-07T07:33:32.837Z)

![image.png](http://history.futureofcoding.org/history/msg_files/F07/F07232XK8JJ.png)


💻 [github.com/dmotz/trystero](https://github.com/dmotz/trystero) via **Nilesh Trivedi**

[🧵 conversation](https://history.futureofcoding.org/history/weekly/2024/05/W2/linking-together.html#2024-05-07T23:07:19.030Z)

This seems clever! WebRTC matchmaking over BitTorrent, Nostr, MQTT, IPFS, and Firebase - removing the need for centralized signaling servers for multiplayer real-time webapps.

# 🤖

🎥 [Hunch.tools winning demo at Latent Space's AI UX event in SF](https://youtu.be/tpEfLAsyO28) via **Greg Bylenok**

[🧵 conversation](https://history.futureofcoding.org/history/weekly/2024/05/W2/of-ai.html#2024-05-06T13:16:45.125Z)

![Youtube Thumbnail](https://img.youtube.com/vi/tpEfLAsyO28/hqdefault.jpg)

Couple of links from some recent digital wanderings:



Hunch Tools LLM-focused canvas, from a recent AI/UX meetup

💡 [GitHub Next | SpecLang](https://githubnext.com/projects/speclang/) via **Greg Bylenok**

[🧵 conversation](https://history.futureofcoding.org/history/weekly/2024/05/W2/of-ai.html#2024-05-06T13:18:45.325Z)

Second link: SpecLang from Github Next, which  _"is an attempt at lifting the developer experience to a higher level of abstraction, closer to how we conceptually think about our programs"_ 



(Github Next is worth exploring and they appear to be doing quite a bit of FoC-related work)



----------

👨🏽‍💻 By 🐘 [@marianoguerra@hachyderm.io](https://hachyderm.io/@marianoguerra) 🐦 [@warianoguerra](https://twitter.com/warianoguerra)

💬 Not a member yet? Check the [Future of Coding Community](https://futureofcoding.org/)

✉️ Not subscribed yet? [Subscribe to the Newsletter](https://newsletter.futureofcoding.org/join/) / [Archive](https://newsletter.futureofcoding.org/archive.html) / [RSS](https://history.futureofcoding.org/newsletter/rss.xml)

🎙️ Prefer podcasts? check the [Future of Coding Podcast](https://futureofcoding.org/episodes/)
