[
    {
        "text": "Now that I have a nice design for a text editor widget, I've been putting it through its paces, particularly for ideas like syntax highlighting and something I call \"syntax geometry\". Here's a kinda whimsical toy where '+' flips the direction of writing from horizontal to vertical and _vice versa._ I only had to put this rule in in one place, and all my support for editing, moving and clicking on the screen to position the cursor continues to work.\n\n(I did need to generalize a couple of things to get to this point.)\n\nCan anyone think of potential uses for syntax geometry?",
        "files": [
            {
                "id": "F07KM0JEVNX",
                "created": 1725335655,
                "timestamp": 1725335655,
                "name": "syntax-geometry.webm",
                "title": "syntax-geometry.webm",
                "mimetype": "video/webm",
                "filetype": "webm",
                "pretty_type": "WebM",
                "user": "UCUSW7WVD",
                "user_team": "T5TCAFTA9",
                "editable": false,
                "size": 96628,
                "mode": "hosted",
                "is_external": false,
                "external_type": "",
                "is_public": true,
                "public_url_shared": false,
                "display_as_bot": false,
                "username": "",
                "transcription": {
                    "status": "none"
                },
                "url_private": "https://files.slack.com/files-pri/T5TCAFTA9-F07KM0JEVNX/syntax-geometry.webm",
                "url_private_download": "https://files.slack.com/files-pri/T5TCAFTA9-F07KM0JEVNX/download/syntax-geometry.webm",
                "hls": "https://files.slack.com/files-tmb/T5TCAFTA9-F07KM0JEVNX-c24cbd866d/file.m3u8?_xcb=563dd",
                "hls_embed": "data:application/vnd.apple.mpegurl;base64,I0VYVE0zVQojRVhULVgtVkVSU0lPTjozCiNFWFQtWC1JTkRFUEVOREVOVC1TRUdNRU5UUwojRVhULVgtU1RSRUFNLUlORjpCQU5EV0lEVEg9MTc3Mjk0LEFWRVJBR0UtQkFORFdJRFRIPTE3MTI4NCxDT0RFQ1M9ImF2YzEuNjQwMDFmLG1wNGEuNDAuNSIsUkVTT0xVVElPTj05NjB4NzIwLEZSQU1FLVJBVEU9MjkuOTcwCmRhdGE6YXBwbGljYXRpb24vdm5kLmFwcGxlLm1wZWd1cmw7YmFzZTY0LEkwVllWRTB6VlFvalJWaFVMVmd0VmtWU1UwbFBUam96Q2lORldGUXRXQzFVUVZKSFJWUkVWVkpCVkVsUFRqbzNDaU5GV0ZRdFdDMU5SVVJKUVMxVFJWRlZSVTVEUlRveENpTkZXRlF0V0MxUVRFRlpURWxUVkMxVVdWQkZPbFpQUkFvalJWaFVTVTVHT2pZdU1EQTJMQXBvZEhSd2N6b3ZMMlpwYkdWekxuTnNZV05yTG1OdmJTOW1hV3hsY3kxMGJXSXZWRFZVUTBGR1ZFRTVMVVl3TjB0Tk1FcEZWazVZTFdNeU5HTmlaRGcyTm1RdlptbHNaVjlJWHpJMk5GOHhNamd3ZURjeU1GOHpOVEF3UzBKUVUxODNVVlpDVWw4d01EQXdNUzUwY3dvalJWaFVTVTVHT2pZdU1EQTJMQXBvZEhSd2N6b3ZMMlpwYkdWekxuTnNZV05yTG1OdmJTOW1hV3hsY3kxMGJXSXZWRFZVUTBGR1ZFRTVMVVl3TjB0Tk1FcEZWazVZTFdNeU5HTmlaRGcyTm1RdlptbHNaVjlJWHpJMk5GOHhNamd3ZURjeU1GOHpOVEF3UzBKUVUxODNVVlpDVWw4d01EQXdNaTUwY3dvalJWaFVTVTVHT2pZdU1EQTJMQXBvZEhSd2N6b3ZMMlpwYkdWekxuTnNZV05yTG1OdmJTOW1hV3hsY3kxMGJXSXZWRFZVUTBGR1ZFRTVMVVl3TjB0Tk1FcEZWazVZTFdNeU5HTmlaRGcyTm1RdlptbHNaVjlJWHpJMk5GOHhNamd3ZURjeU1GOHpOVEF3UzBKUVUxODNVVlpDVWw4d01EQXdNeTUwY3dvalJWaFVTVTVHT2pZdU1EQTJMQXBvZEhSd2N6b3ZMMlpwYkdWekxuTnNZV05yTG1OdmJTOW1hV3hsY3kxMGJXSXZWRFZVUTBGR1ZFRTVMVVl3TjB0Tk1FcEZWazVZTFdNeU5HTmlaRGcyTm1RdlptbHNaVjlJWHpJMk5GOHhNamd3ZURjeU1GOHpOVEF3UzBKUVUxODNVVlpDVWw4d01EQXdOQzUwY3dvalJWaFVTVTVHT2pBdU9ETTBMQXBvZEhSd2N6b3ZMMlpwYkdWekxuTnNZV05yTG1OdmJTOW1hV3hsY3kxMGJXSXZWRFZVUTBGR1ZFRTVMVVl3TjB0Tk1FcEZWazVZTFdNeU5HTmlaRGcyTm1RdlptbHNaVjlJWHpJMk5GOHhNamd3ZURjeU1GOHpOVEF3UzBKUVUxODNVVlpDVWw4d01EQXdOUzUwY3dvalJWaFVMVmd0UlU1RVRFbFRWQW89Cg==",
                "mp4_low": "https://files.slack.com/files-tmb/T5TCAFTA9-F07KM0JEVNX-c24cbd866d/file_trans.mp4",
                "duration_ms": 24858,
                "media_display_type": "video",
                "thumb_video": "https://files.slack.com/files-tmb/T5TCAFTA9-F07KM0JEVNX-c24cbd866d/syntax-geometry_thumb_video.jpeg",
                "thumb_video_w": 640,
                "thumb_video_h": 480,
                "permalink": "https://futureofcoding.slack.com/files/UCUSW7WVD/F07KM0JEVNX/syntax-geometry.webm",
                "permalink_public": "https://slack-files.com/T5TCAFTA9-F07KM0JEVNX-8e8e9315ed",
                "is_starred": false,
                "has_rich_preview": false,
                "file_access": "visible"
            }
        ],
        "upload": false,
        "user": "UCUSW7WVD",
        "display_as_bot": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "coFdj",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Now that I have a nice design for a text editor widget, I've been putting it through its paces, particularly for ideas like syntax highlighting and something I call \"syntax geometry\". Here's a kinda whimsical toy where '+' flips the direction of writing from horizontal to vertical and "
                            },
                            {
                                "type": "text",
                                "text": "vice versa.",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " I only had to put this rule in in one place, and all my support for editing, moving and clicking on the screen to position the cursor continues to work.\n\n(I did need to generalize a couple of things to get to this point.)\n\nCan anyone think of potential uses for syntax geometry?"
                            }
                        ]
                    }
                ]
            }
        ],
        "subtype": "thread_broadcast",
        "root": {
            "user": "UCUSW7WVD",
            "type": "message",
            "ts": "1721674673.632369",
            "edited": {
                "user": "UCUSW7WVD",
                "ts": "1721712570.000000"
            },
            "client_msg_id": "eca42edf-b786-48cf-9cd0-8f0a827da9f0",
            "text": "For the past month I've been doing something very unnatural for myself: \"throwing the first one away.\" Going back and rewriting an aspect of a working program just to improve one property of the _code_ rather than the behavior: eliminating all derived data structures and re-deriving everything all the time in a performant way.\n\nThe result is a simpler API that seems applicable to pixel-based editors that use proportional fonts. Basically the problem is: as you do line-wrapping on a screen, how do you deal with interactive operations like clicking at a pixel coordinate or pressing the down arrow (which might result in a scroll). These primitives seem to make the implementation fairly self-evident: <https://git.sr.ht/~akkartik/lines2.love/tree/main/item/move.lua#L11-28|https://git.sr.ht/~akkartik/lines2.love/tree/main/item/move.lua#L11-28>",
            "team": "T5TCAFTA9",
            "thread_ts": "1721674673.632369",
            "reply_count": 9,
            "reply_users_count": 5,
            "latest_reply": "1725431176.793149",
            "reply_users": [
                "UCUSW7WVD",
                "UC2A2ARPT",
                "UJBAJNFLK",
                "UBN9AFS0N",
                "UGWUJUZHT"
            ],
            "is_locked": false,
            "subscribed": true,
            "last_read": "1725431176.793149",
            "blocks": [
                {
                    "type": "rich_text",
                    "block_id": "tRfk9",
                    "elements": [
                        {
                            "type": "rich_text_section",
                            "elements": [
                                {
                                    "type": "text",
                                    "text": "For the past month I've been doing something very unnatural for myself: \"throwing the first one away.\" Going back and rewriting an aspect of a working program just to improve one property of the "
                                },
                                {
                                    "type": "text",
                                    "text": "code",
                                    "style": {
                                        "italic": true
                                    }
                                },
                                {
                                    "type": "text",
                                    "text": " rather than the behavior: eliminating all derived data structures and re-deriving everything all the time in a performant way.\n\nThe result is a simpler API that seems applicable to pixel-based editors that use proportional fonts. Basically the problem is: as you do line-wrapping on a screen, how do you deal with interactive operations like clicking at a pixel coordinate or pressing the down arrow (which might result in a scroll). These primitives seem to make the implementation fairly self-evident: "
                                },
                                {
                                    "type": "link",
                                    "url": "https://git.sr.ht/~akkartik/lines2.love/tree/main/item/move.lua#L11-28",
                                    "text": "https://git.sr.ht/~akkartik/lines2.love/tree/main/item/move.lua#L11-28"
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        "type": "message",
        "ts": "1725335659.871449",
        "client_msg_id": "735c09ab-ae1e-4cb6-b234-2b4b73a2d214",
        "thread_ts": "1721674673.632369",
        "parent_user_id": "UCUSW7WVD",
        "reactions": [
            {
                "name": "cake",
                "users": [
                    "U023V63MF6V",
                    "U013ZLJARC7",
                    "U02QC0PPER3"
                ],
                "count": 3
            }
        ]
    }
]