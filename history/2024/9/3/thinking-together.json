[
    {
        "user": "U0378MDUG1Y",
        "type": "message",
        "ts": "1725332746.830489",
        "edited": {
            "user": "U0378MDUG1Y",
            "ts": "1725332900.000000"
        },
        "client_msg_id": "587B44D8-BB20-443F-838C-6295D2034343",
        "text": "What are ways we can make computation more squishy with soft-body physics? Most visual notations are overwhelmingly rigid and structured!\n\n<https://m.youtube.com/watch?si=VpS2zmWQgoVUkvid&v=3OmkehAJoyo&feature=youtu.be|https://m.youtube.com/watch?si=VpS2zmWQgoVUkvid&v=3OmkehAJoyo&feature=youtu.be>",
        "team": "T5TCAFTA9",
        "thread_ts": "1725332746.830489",
        "reply_count": 11,
        "reply_users_count": 4,
        "latest_reply": "1725804737.801289",
        "reply_users": [
            "UC2A2ARPT",
            "UJBAJNFLK",
            "U0378MDUG1Y",
            "U02QC0PPER3"
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "TLBm0",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "What are ways we can make computation more squishy with soft-body physics? Most visual notations are overwhelmingly rigid and structured!\n\n"
                            },
                            {
                                "type": "link",
                                "url": "https://m.youtube.com/watch?si=VpS2zmWQgoVUkvid&v=3OmkehAJoyo&feature=youtu.be",
                                "text": "https://m.youtube.com/watch?si=VpS2zmWQgoVUkvid&v=3OmkehAJoyo&feature=youtu.be"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1725342025.849529",
        "client_msg_id": "54A67FE0-E301-4561-B3E4-BBFDC5F2935E",
        "text": "Great question. What could physical squishiness allow a computer to communicate to a programmer, or vice versa? Could the degree of softness mean something? Could interacting with a soft thing allow you to express something that you couldn't if that thing were hard? Might the softness just change the way it _feels_ to do computation, so that the difference isn't some technical capability but rather a change of mindset or mood?\n\nIn other words, where does the softness go?",
        "team": "T5TCAFTA9",
        "thread_ts": "1725332746.830489",
        "parent_user_id": "U0378MDUG1Y",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "+L+u6",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Great question"
                            },
                            {
                                "type": "text",
                                "text": "."
                            },
                            {
                                "type": "text",
                                "text": " What could physical squishiness allow a computer to communicate to a programmer, or vice versa? Could the degree of softness mean something? Could interacting with a soft thing allow you to express something that you couldn't if that thing were hard? Might the softness just change the way it "
                            },
                            {
                                "type": "text",
                                "text": "feels ",
                                "style": {
                                    "bold": false,
                                    "italic": true,
                                    "strike": false
                                }
                            },
                            {
                                "type": "text",
                                "text": "to do computation, so that the difference isn't some technical capability but rather a change of mindset or mood?\n\nIn other words, where does the softness go?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJBAJNFLK",
        "type": "message",
        "ts": "1725344880.610389",
        "client_msg_id": "78a64dc4-0a49-4b5d-8b01-bfa2c6376c38",
        "text": "In other words: is the squishiness essential or incidental? Would its purpose survive high-resolution discretization?",
        "team": "T5TCAFTA9",
        "thread_ts": "1725332746.830489",
        "parent_user_id": "U0378MDUG1Y",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "G3+X5",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "In other words: is the squishiness essential or incidental? Would its purpose survive high-resolution discretization?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1725373205.908939",
        "client_msg_id": "39D80F60-9A29-45AD-98B1-1DA875125720",
        "text": "Can you explain what you mean by \"high resolution discretization\", Konrad? Is this a reference to the character grid in textual code?",
        "team": "T5TCAFTA9",
        "thread_ts": "1725332746.830489",
        "parent_user_id": "U0378MDUG1Y",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "z3PmF",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Can you explain what you mean by \"high resolution discretization\", Konrad? Is this a reference to the character grid in textual code?"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U0378MDUG1Y"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U0378MDUG1Y",
        "type": "message",
        "ts": "1725392977.335299",
        "client_msg_id": "6A6EC460-7278-4597-8099-67E04C059073",
        "text": "Ya the reason I asked is because i really struggle to think of ways it can be essential to the computation (except in games and physics simulations). ",
        "team": "T5TCAFTA9",
        "thread_ts": "1725332746.830489",
        "parent_user_id": "U0378MDUG1Y",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "STrv0",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Ya the reason I asked is because i really struggle to think of ways it can be essential to the computation (except in games and physics simulations). "
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U0378MDUG1Y",
        "type": "message",
        "ts": "1725393027.432929",
        "client_msg_id": "82C4774C-57A8-445B-804B-1D77AE8F98E5",
        "text": "I like the idea of representing memory in a squishy way",
        "team": "T5TCAFTA9",
        "thread_ts": "1725332746.830489",
        "parent_user_id": "U0378MDUG1Y",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "gyGrK",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I like the idea of representing memory in a squishy way"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U0378MDUG1Y",
        "type": "message",
        "ts": "1725393071.539539",
        "client_msg_id": "78F2BBB3-58A2-4043-B37B-00BF6EE86603",
        "text": "Tightly packed areas of memory fighting for space and squishing and morphing together as they shrink and grow",
        "team": "T5TCAFTA9",
        "thread_ts": "1725332746.830489",
        "parent_user_id": "U0378MDUG1Y",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "285rV",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Tightly packed areas of memory fighting for space and squishing and morphing together as they shrink and grow"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U0378MDUG1Y",
        "type": "message",
        "ts": "1725399978.929129",
        "client_msg_id": "75B3E1C2-1AD4-4990-B075-78996D851C2F",
        "text": "For the squishiness to be meaningful for computation it would have to happen through collision between objects and/or the space the objects take up?",
        "team": "T5TCAFTA9",
        "thread_ts": "1725332746.830489",
        "parent_user_id": "U0378MDUG1Y",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "nDwWZ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "For the squishiness to be meaningful for computation it would have to happen through collision between objects and/or the space the objects take up?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U0378MDUG1Y",
        "type": "message",
        "ts": "1725400083.220899",
        "client_msg_id": "23C79C11-1148-40A2-81E5-3763D24B1B9F",
        "text": "Imagine a function that balloons as it does more computation and must stop when it is squeezed out of space to grow",
        "team": "T5TCAFTA9",
        "thread_ts": "1725332746.830489",
        "parent_user_id": "U0378MDUG1Y",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "fTWfJ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Imagine a function that balloons as it does more computation and must stop when it is squeezed out of space to grow"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1725415683.261259",
        "client_msg_id": "9AD64471-D258-41AF-B5D3-F9828493A62E",
        "text": "Another approach would be to take an existing visual programming approach and think about making parts of it soft. Like, if you have node-wire, and the wire gets wrapped around some nodes and it kinda squeezes them a bit.",
        "team": "T5TCAFTA9",
        "thread_ts": "1725332746.830489",
        "parent_user_id": "U0378MDUG1Y",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "BrPxQ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Another approach would be to take an existing visual programming approach and think about making parts of it soft"
                            },
                            {
                                "type": "text",
                                "text": "."
                            },
                            {
                                "type": "text",
                                "text": " Like, if you have node-wire, and the wire gets wrapped around some nodes and it kinda squeezes them a bit."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJBAJNFLK",
        "type": "message",
        "ts": "1725429212.638039",
        "client_msg_id": "16b7b8e0-7ce8-406c-9a03-7b69037f8017",
        "text": "The essence of digital/computing technology when interfacing to the real world is (1) projecting continuous quantities to discrete ones and (2) imposing context-free laws of change or transformation. Squishiness is about adapting to context. That's not naturally part of formal systems, it has to be imposed as a condition.",
        "team": "T5TCAFTA9",
        "thread_ts": "1725332746.830489",
        "parent_user_id": "U0378MDUG1Y",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "FXVnU",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The essence of digital/computing technology when interfacing to the real world is (1) projecting continuous quantities to discrete ones and (2) imposing context-free laws of change or transformation. Squishiness is about adapting to context. That's not naturally part of formal systems, it has to be imposed as a condition."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U02QC0PPER3",
        "type": "message",
        "ts": "1725804737.801289",
        "client_msg_id": "c7ac6e60-6b14-4c37-9425-a107800c42ce",
        "text": "&gt; Tightly packed areas of memory fighting for space and squishing and morphing together as they shrink and grow\n\u2022 B-trees are a bit squishy/sticky in how nodes get joined/split.  So are all structures with _amortization_?  But that's a well-encapsulated property, hardly observable.\n\u2022 Cuckoo hashes get harder to insert into (more pushing stuff around) as they fill up.  That's observable as a slow-down (like regular hash tables) but still correct.  Well, unlike regular hash tables at some point the guarantee that you only need to check N places really breaks down, but I suppose then you resize and re-hash the whole thing, so the effect is \"slow down with amortized resize\" similar to regular hashes.\n\u2022 Bloom filters get _less precise_ as they fill up.  Now that's really observable to the user.  So do other \"sketch\" structures.  But frequently they're used behind some other fallback (e.g. cache miss=&gt;do the network request) that reduce the observable imprecision to observable slowdown.\nSo in all those, squishiness might come handy to visualize algorithm _internals_, but doesn't map to anything desirable in the final product of computation?\n\nSpeaking of visualizations, spring-model layouts are handy for evolving graphs (e.g. <https://gource.io/>) and are also promising for real-time \"collaboration\" between automated + human-moved layout, because mechanics are intuitive and predictable to our brain.",
        "team": "T5TCAFTA9",
        "thread_ts": "1725332746.830489",
        "parent_user_id": "U0378MDUG1Y",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ATCrU",
                "elements": [
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Tightly packed areas of memory fighting for space and squishing and morphing together as they shrink and grow"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "B-trees are a bit squishy/sticky in how nodes get joined/split.  So are all structures with "
                                    },
                                    {
                                        "type": "text",
                                        "text": "amortization",
                                        "style": {
                                            "italic": true
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "text": "?  But that's a well-encapsulated property, hardly observable."
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Cuckoo hashes get harder to insert into (more pushing stuff around) as they fill up.  That's observable as a slow-down (like regular hash tables) but still correct.  Well, unlike regular hash tables at some point the guarantee that you only need to check N places really breaks down, but I suppose then you resize and re-hash the whole thing, so the effect is \"slow down with amortized resize\" similar to regular hashes."
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Bloom filters get "
                                    },
                                    {
                                        "type": "text",
                                        "text": "less precise",
                                        "style": {
                                            "italic": true
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "text": " as they fill up.  Now that's really observable to the user.  So do other \"sketch\" structures.  But frequently they're used behind some other fallback (e.g. cache miss=>do the network request) that reduce the observable imprecision to observable slowdown."
                                    }
                                ]
                            }
                        ],
                        "style": "bullet",
                        "indent": 0,
                        "border": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nSo in all those, squishiness might come handy to visualize algorithm "
                            },
                            {
                                "type": "text",
                                "text": "internals",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ", but doesn't map to anything desirable in the final product of computation?\n\nSpeaking of visualizations, spring-model layouts are handy for evolving graphs (e.g. "
                            },
                            {
                                "type": "link",
                                "url": "https://gource.io/"
                            },
                            {
                                "type": "text",
                                "text": ") and are also promising for real-time \"collaboration\" between automated + human-moved layout, because mechanics are intuitive and predictable to our brain."
                            }
                        ]
                    }
                ]
            }
        ]
    }
]