[
    {
        "text": "Today I've added some rudimentary styling syntax to my notebook.\n\nIt looks like I care about always making the styling very transparent, so it's possible in principle to guess what characters one needs to type to copy the look of something one sees on screen. So the style directives will never be hidden.",
        "files": [
            {
                "id": "F07N9ELF5NE",
                "created": 1726811384,
                "timestamp": 1726811384,
                "name": "style.webm",
                "title": "style.webm",
                "mimetype": "video/webm",
                "filetype": "webm",
                "pretty_type": "WebM",
                "user": "UCUSW7WVD",
                "user_team": "T5TCAFTA9",
                "editable": false,
                "size": 3469368,
                "mode": "hosted",
                "is_external": false,
                "external_type": "",
                "is_public": true,
                "public_url_shared": false,
                "display_as_bot": false,
                "username": "",
                "transcription": {
                    "status": "none"
                },
                "url_private": "https://files.slack.com/files-pri/T5TCAFTA9-F07N9ELF5NE/style.webm",
                "url_private_download": "https://files.slack.com/files-pri/T5TCAFTA9-F07N9ELF5NE/download/style.webm",
                "hls": "https://files.slack.com/files-tmb/T5TCAFTA9-F07N9ELF5NE-afe7d0f325/file.m3u8?_xcb=5700a",
                "hls_embed": "data:application/vnd.apple.mpegurl;base64,I0VYVE0zVQojRVhULVgtVkVSU0lPTjozCiNFWFQtWC1JTkRFUEVOREVOVC1TRUdNRU5UUwojRVhULVgtU1RSRUFNLUlORjpCQU5EV0lEVEg9NDkxMzE2LEFWRVJBR0UtQkFORFdJRFRIPTQxOTczOSxDT0RFQ1M9ImF2YzEuNjQwMDFmLG1wNGEuNDAuNSIsUkVTT0xVVElPTj0xMjgweDcyMCxGUkFNRS1SQVRFPTI5Ljk3MApkYXRhOmFwcGxpY2F0aW9uL3ZuZC5hcHBsZS5tcGVndXJsO2Jhc2U2NCxJMFZZVkUwelZRb2pSVmhVTFZndFZrVlNVMGxQVGpvekNpTkZXRlF0V0MxVVFWSkhSVlJFVlZKQlZFbFBUam8zQ2lORldGUXRXQzFOUlVSSlFTMVRSVkZWUlU1RFJUb3hDaU5GV0ZRdFdDMVFURUZaVEVsVFZDMVVXVkJGT2xaUFJBb2pSVmhVU1U1R09qWXVNREEyTEFwb2RIUndjem92TDJacGJHVnpMbk5zWVdOckxtTnZiUzltYVd4bGN5MTBiV0l2VkRWVVEwRkdWRUU1TFVZd04wNDVSVXhHTlU1RkxXRm1aVGRrTUdZek1qVXZabWxzWlY5SVh6STJORjh4TWpnd2VEY3lNRjh6TlRBd1MwSlFVMTgzVVZaQ1VsOHdNREF3TVM1MGN3b2pSVmhVU1U1R09qWXVNREEyTEFwb2RIUndjem92TDJacGJHVnpMbk5zWVdOckxtTnZiUzltYVd4bGN5MTBiV0l2VkRWVVEwRkdWRUU1TFVZd04wNDVSVXhHTlU1RkxXRm1aVGRrTUdZek1qVXZabWxzWlY5SVh6STJORjh4TWpnd2VEY3lNRjh6TlRBd1MwSlFVMTgzVVZaQ1VsOHdNREF3TWk1MGN3b2pSVmhVU1U1R09qWXVNREEyTEFwb2RIUndjem92TDJacGJHVnpMbk5zWVdOckxtTnZiUzltYVd4bGN5MTBiV0l2VkRWVVEwRkdWRUU1TFVZd04wNDVSVXhHTlU1RkxXRm1aVGRrTUdZek1qVXZabWxzWlY5SVh6STJORjh4TWpnd2VEY3lNRjh6TlRBd1MwSlFVMTgzVVZaQ1VsOHdNREF3TXk1MGN3b2pSVmhVU1U1R09qWXVNREEyTEFwb2RIUndjem92TDJacGJHVnpMbk5zWVdOckxtTnZiUzltYVd4bGN5MTBiV0l2VkRWVVEwRkdWRUU1TFVZd04wNDVSVXhHTlU1RkxXRm1aVGRrTUdZek1qVXZabWxzWlY5SVh6STJORjh4TWpnd2VEY3lNRjh6TlRBd1MwSlFVMTgzVVZaQ1VsOHdNREF3TkM1MGN3b2pSVmhVU1U1R09qWXVNREEyTEFwb2RIUndjem92TDJacGJHVnpMbk5zWVdOckxtTnZiUzltYVd4bGN5MTBiV0l2VkRWVVEwRkdWRUU1TFVZd04wNDVSVXhHTlU1RkxXRm1aVGRrTUdZek1qVXZabWxzWlY5SVh6STJORjh4TWpnd2VEY3lNRjh6TlRBd1MwSlFVMTgzVVZaQ1VsOHdNREF3TlM1MGN3b2pSVmhVU1U1R09qWXVNREEyTEFwb2RIUndjem92TDJacGJHVnpMbk5zWVdOckxtTnZiUzltYVd4bGN5MTBiV0l2VkRWVVEwRkdWRUU1TFVZd04wNDVSVXhHTlU1RkxXRm1aVGRrTUdZek1qVXZabWxzWlY5SVh6STJORjh4TWpnd2VEY3lNRjh6TlRBd1MwSlFVMTgzVVZaQ1VsOHdNREF3Tmk1MGN3b2pSVmhVU1U1R09qWXVNREEyTEFwb2RIUndjem92TDJacGJHVnpMbk5zWVdOckxtTnZiUzltYVd4bGN5MTBiV0l2VkRWVVEwRkdWRUU1TFVZd04wNDVSVXhHTlU1RkxXRm1aVGRrTUdZek1qVXZabWxzWlY5SVh6STJORjh4TWpnd2VEY3lNRjh6TlRBd1MwSlFVMTgzVVZaQ1VsOHdNREF3Tnk1MGN3b2pSVmhVU1U1R09qWXVNREEyTEFwb2RIUndjem92TDJacGJHVnpMbk5zWVdOckxtTnZiUzltYVd4bGN5MTBiV0l2VkRWVVEwRkdWRUU1TFVZd04wNDVSVXhHTlU1RkxXRm1aVGRrTUdZek1qVXZabWxzWlY5SVh6STJORjh4TWpnd2VEY3lNRjh6TlRBd1MwSlFVMTgzVVZaQ1VsOHdNREF3T0M1MGN3b2pSVmhVU1U1R09qWXVNREEyTEFwb2RIUndjem92TDJacGJHVnpMbk5zWVdOckxtTnZiUzltYVd4bGN5MTBiV0l2VkRWVVEwRkdWRUU1TFVZd04wNDVSVXhHTlU1RkxXRm1aVGRrTUdZek1qVXZabWxzWlY5SVh6STJORjh4TWpnd2VEY3lNRjh6TlRBd1MwSlFVMTgzVVZaQ1VsOHdNREF3T1M1MGN3b2pSVmhVU1U1R09qWXVNREEyTEFwb2RIUndjem92TDJacGJHVnpMbk5zWVdOckxtTnZiUzltYVd4bGN5MTBiV0l2VkRWVVEwRkdWRUU1TFVZd04wNDVSVXhHTlU1RkxXRm1aVGRrTUdZek1qVXZabWxzWlY5SVh6STJORjh4TWpnd2VEY3lNRjh6TlRBd1MwSlFVMTgzVVZaQ1VsOHdNREF4TUM1MGN3b2pSVmhVU1U1R09qWXVNREEyTEFwb2RIUndjem92TDJacGJHVnpMbk5zWVdOckxtTnZiUzltYVd4bGN5MTBiV0l2VkRWVVEwRkdWRUU1TFVZd04wNDVSVXhHTlU1RkxXRm1aVGRrTUdZek1qVXZabWxzWlY5SVh6STJORjh4TWpnd2VEY3lNRjh6TlRBd1MwSlFVMTgzVVZaQ1VsOHdNREF4TVM1MGN3b2pSVmhVU1U1R09qWXVNREEyTEFwb2RIUndjem92TDJacGJHVnpMbk5zWVdOckxtTnZiUzltYVd4bGN5MTBiV0l2VkRWVVEwRkdWRUU1TFVZd04wNDVSVXhHTlU1RkxXRm1aVGRrTUdZek1qVXZabWxzWlY5SVh6STJORjh4TWpnd2VEY3lNRjh6TlRBd1MwSlFVMTgzVVZaQ1VsOHdNREF4TWk1MGN3b2pSVmhVU1U1R09qVXVPVGN6TEFwb2RIUndjem92TDJacGJHVnpMbk5zWVdOckxtTnZiUzltYVd4bGN5MTBiV0l2VkRWVVEwRkdWRUU1TFVZd04wNDVSVXhHTlU1RkxXRm1aVGRrTUdZek1qVXZabWxzWlY5SVh6STJORjh4TWpnd2VEY3lNRjh6TlRBd1MwSlFVMTgzVVZaQ1VsOHdNREF4TXk1MGN3b2pSVmhVTFZndFJVNUVURWxUVkFvPQo=",
                "mp4_low": "https://files.slack.com/files-tmb/T5TCAFTA9-F07N9ELF5NE-afe7d0f325/file_trans.mp4",
                "duration_ms": 78044,
                "media_display_type": "video",
                "thumb_video": "https://files.slack.com/files-tmb/T5TCAFTA9-F07N9ELF5NE-afe7d0f325/style_thumb_video.jpeg",
                "thumb_video_w": 1280,
                "thumb_video_h": 720,
                "permalink": "https://futureofcoding.slack.com/files/UCUSW7WVD/F07N9ELF5NE/style.webm",
                "permalink_public": "https://slack-files.com/T5TCAFTA9-F07N9ELF5NE-2b579768d7",
                "is_starred": false,
                "has_rich_preview": false,
                "file_access": "visible"
            }
        ],
        "upload": false,
        "user": "UCUSW7WVD",
        "display_as_bot": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "yNt5V",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Today I've added some rudimentary styling syntax to my notebook.\n\nIt looks like I care about always making the styling very transparent, so it's possible in principle to guess what characters one needs to type to copy the look of something one sees on screen. So the style directives will never be hidden."
                            }
                        ]
                    }
                ]
            }
        ],
        "type": "message",
        "ts": "1726811395.937989",
        "client_msg_id": "edae31a2-0325-4d1c-9c81-0227fc8d333d",
        "thread_ts": "1726811395.937989",
        "reply_count": 2,
        "reply_users_count": 2,
        "latest_reply": "1726823842.580059",
        "reply_users": [
            "UJBAJNFLK",
            "UGWUJUZHT"
        ],
        "is_locked": false,
        "subscribed": false
    },
    {
        "user": "UJBAJNFLK",
        "type": "message",
        "ts": "1726815528.838629",
        "client_msg_id": "2dcc2b9c-1fdd-47de-8227-0da2cc5eca90",
        "text": "The notebook pages in Glamorous Toolkit use a slightly more sophisticated method, which I like: full markup is shown only when the cursor is near it. Elsewhere you only see the rendered markup. No visual clutter, and yet all markup at your fingertips.",
        "team": "T5TCAFTA9",
        "thread_ts": "1726811395.937989",
        "parent_user_id": "UCUSW7WVD",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "uKstn",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The notebook pages in Glamorous Toolkit use a slightly more sophisticated method, which I like: full markup is shown only when the cursor is near it. Elsewhere you only see the rendered markup. No visual clutter, and yet all markup at your fingertips."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UCUSW7WVD"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UGWUJUZHT",
        "type": "message",
        "ts": "1726823842.580059",
        "client_msg_id": "0bb947dc-647d-45d6-8698-096cc2b4b6cf",
        "text": "The current Obsidian editor does something like that, too.\n\nAs a user, when writing a long essay, I occasionally find this behaviour disconcerting - the appearance on the screen changes so dramatically that it is disconcerting. I feel \"not in control\".\n\nThe older Obsidian editor had two modes (1) writing and (2) reading. That felt clumsy. I guess that I could enable that behaviour with some option, but, I never do.\n\nEmacs md-mode shows a hint of the styling, e.g. `_abc_` is displayed with abc italicized but leaving the underscores visible and taking up space that doesn't appear in the final rendering in a browser.\n\nTraditional WYSIWYG editors like Microsoft Word and Apple Pages make formatting characters invisible, but, show formatting details in a property box off to the side (where you're not looking) while binding formatting operations to certain keystrokes, e.g. command-I for italic.\n\nPlantUML uses two side-by-side Siamese Twin windows - a writing window and a preview window. Our \"Slider\" app in the Handmade Jam (last year?) did that (two windows), too.\n\nA freebie \"user-friendly\" LaTeX editor (LyX) tries to straddle both views at once - like the new Obsidian editor - but, I find myself not using it.\n\nThus far, as a user, I find all of the above choices evil. I tend to favour WYSIWYG, but, wonder if the two-window approach would be better if the tool made the windows entirely separate instead of being bolted together.\n\nI find translucency intriguing (<https://futureofcoding.slack.com/archives/C5T9GPWFL/p1726773202938769>), but haven't used a word processing editor that contains it.\n\nCurrently, I use the lesser of two evils. I switched from using Obsidian (out-of-human-control formatting) to using Pages (WYSIWYG with a property box at the side). My frequency of swearing hasn't decreased, but the target of swearing has moved.",
        "team": "T5TCAFTA9",
        "thread_ts": "1726811395.937989",
        "parent_user_id": "UCUSW7WVD",
        "attachments": [
            {
                "from_url": "https://futureofcoding.slack.com/archives/C5T9GPWFL/p1726773202938769",
                "ts": "1726773202.938769",
                "author_id": "U0378MDUG1Y",
                "channel_id": "C5T9GPWFL",
                "channel_team": "T5TCAFTA9",
                "is_msg_unfurl": true,
                "message_blocks": [
                    {
                        "team": "T5TCAFTA9",
                        "channel": "C5T9GPWFL",
                        "ts": "1726773202.938769",
                        "message": {
                            "blocks": [
                                {
                                    "type": "rich_text",
                                    "block_id": "A7u+p",
                                    "elements": [
                                        {
                                            "type": "rich_text_section",
                                            "elements": [
                                                {
                                                    "type": "text",
                                                    "text": "I like this metaphor of translucent software both as a callback to the translucent hardware aesthetic of the 2000s, but also to progressively display the underlying mechanisms of software "
                                                },
                                                {
                                                    "type": "text",
                                                    "text": "if",
                                                    "style": {
                                                        "bold": false,
                                                        "italic": true,
                                                        "strike": false
                                                    }
                                                },
                                                {
                                                    "type": "text",
                                                    "text": " you want to see it.\n\n"
                                                },
                                                {
                                                    "type": "link",
                                                    "url": "https://x.com/lesliexin/status/1836643348490187183",
                                                    "text": "https://x.com/lesliexin/status/1836643348490187183"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                ],
                "id": 1,
                "original_url": "https://futureofcoding.slack.com/archives/C5T9GPWFL/p1726773202938769",
                "fallback": "[September 19th, 2024 12:13 PM] chris.shank.23: I like this metaphor of translucent software both as a callback to the translucent hardware aesthetic of the 2000s, but also to progressively display the underlying mechanisms of software _if_ you want to see it.\n\n<https://x.com/lesliexin/status/1836643348490187183|https://x.com/lesliexin/status/1836643348490187183>",
                "text": "I like this metaphor of translucent software both as a callback to the translucent hardware aesthetic of the 2000s, but also to progressively display the underlying mechanisms of software _if_ you want to see it.\n\n<https://x.com/lesliexin/status/1836643348490187183|https://x.com/lesliexin/status/1836643348490187183>",
                "author_name": "Christopher Shank",
                "author_link": "https://futureofcoding.slack.com/team/U0378MDUG1Y",
                "author_icon": "https://avatars.slack-edge.com/2022-03-23/3286745266387_1092a4f970985ebc8d2b_48.png",
                "author_subname": "Christopher Shank",
                "mrkdwn_in": [
                    "text"
                ],
                "footer": "Slack Conversation"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "PQTua",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The current Obsidian editor does something like that, too.\n\nAs a user, when writing a long essay, I occasionally find this behaviour disconcerting - the appearance on the screen changes so dramatically that it is disconcerting. I feel \"not in control\".\n\nThe older Obsidian editor had two modes (1) writing and (2) reading. That felt clumsy. I guess that I could enable that behaviour with some option, but, I never do.\n\nEmacs md-mode shows a hint of the styling, e.g. "
                            },
                            {
                                "type": "text",
                                "text": "_abc_",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " is displayed with abc italicized but leaving the underscores visible and taking up space that doesn't appear in the final rendering in a browser.\n\nTraditional WYSIWYG editors like Microsoft Word and Apple Pages make formatting characters invisible, but, show formatting details in a property box off to the side (where you're not looking) while binding formatting operations to certain keystrokes, e.g. command-I for italic.\n\nPlantUML uses two side-by-side Siamese Twin windows - a writing window and a preview window. Our \"Slider\" app in the Handmade Jam (last year?) did that (two windows), too.\n\nA freebie \"user-friendly\" LaTeX editor (LyX) tries to straddle both views at once - like the new Obsidian editor - but, I find myself not using it.\n\nThus far, as a user, I find all of the above choices evil. I tend to favour WYSIWYG, but, wonder if the two-window approach would be better if the tool made the windows entirely separate instead of being bolted together.\n\nI find translucency intriguing ("
                            },
                            {
                                "type": "link",
                                "url": "https://futureofcoding.slack.com/archives/C5T9GPWFL/p1726773202938769"
                            },
                            {
                                "type": "text",
                                "text": "), but haven't used a word processing editor that contains it.\n\nCurrently, I use the lesser of two evils. I switched from using Obsidian (out-of-human-control formatting) to using Pages (WYSIWYG with a property box at the side). My frequency of swearing hasn't decreased, but the target of swearing has moved."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UCUSW7WVD"
                ],
                "count": 1
            }
        ]
    }
]