[
    {
        "user": "U06MCTWJKSR",
        "type": "message",
        "ts": "1727049812.369579",
        "edited": {
            "user": "U06MCTWJKSR",
            "ts": "1727049901.000000"
        },
        "client_msg_id": "dd61a974-344d-4c4b-a25b-d48e9ee4db62",
        "text": "I have lots of functions that map sets of inputs to values - depending on some rules (if branches). Now I want to enumerate all the rules/code paths; it will help me to analyse, optimise, explain, understand.\nThis can't be new, I guess it should be a thing that's feasible in any functional programming language. Maybe there is a name for this? Or a tool that does this?\nI'm thinking about writing something, but it seems like a typechecker like tsc would have a lot of related logic, and if I can I'll experiment using some other friendly tool first. Any tips/references please shout, thanks!",
        "team": "T5TCAFTA9",
        "thread_ts": "1727049812.369579",
        "reply_count": 3,
        "reply_users_count": 3,
        "latest_reply": "1727217934.562469",
        "reply_users": [
            "UK3LH8CF5",
            "U01AD80KMLK",
            "U06MCTWJKSR"
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "PQSkv",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I have lots of functions that map sets of inputs to values - depending on some rules (if branches). Now I want to enumerate all the rules/code paths; it will help me to analyse, optimise, explain, understand.\nThis can't be new, I guess it should be a thing that's feasible in any functional programming language. Maybe there is a name for this? Or a tool that does this?\nI'm thinking about writing something, but it seems like a typechecker like tsc would have a lot of related logic, and if I can I'll experiment using some other friendly tool first. Any tips/references please shout, thanks!"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UK3LH8CF5",
        "type": "message",
        "ts": "1727064565.261959",
        "client_msg_id": "DB78A12E-E6E0-4090-AB8A-338DC6C2BBAD",
        "text": "What you are talking about sounds either like building a control flow graph. Or doing abstract interpretation. Unclear if either those exactly fit what you want to do. But might be some useful starting points. ",
        "team": "T5TCAFTA9",
        "thread_ts": "1727049812.369579",
        "parent_user_id": "U06MCTWJKSR",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "la4Ee",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "What you are talking about sounds either like building a control flow graph"
                            },
                            {
                                "type": "text",
                                "text": "."
                            },
                            {
                                "type": "text",
                                "text": " Or doing abstract interpretation"
                            },
                            {
                                "type": "text",
                                "text": "."
                            },
                            {
                                "type": "text",
                                "text": " Unclear if either those exactly fit what you want to do"
                            },
                            {
                                "type": "text",
                                "text": "."
                            },
                            {
                                "type": "text",
                                "text": " But might be some useful starting points"
                            },
                            {
                                "type": "text",
                                "text": "."
                            },
                            {
                                "type": "text",
                                "text": " "
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heavy_plus_sign",
                "users": [
                    "U013ZLJARC7"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U03U0SCU5LH",
        "type": "message",
        "ts": "1727073095.141339",
        "client_msg_id": "ef3dbd7a-c48c-42f6-8f5d-23be56b7abaf",
        "text": "Should code completion preselect in the dropdown?\nFor example, if I write \"object.l\", this opens a dropdown with \"length\". Should the length be selected, so pressing \"enter\", inserts it directly or should I first need to press \"down arrow\"?\nIn visual studio, it is not preselect if I write a function, but does preselect for members. Is there some common approach?",
        "team": "T5TCAFTA9",
        "thread_ts": "1727073095.141339",
        "reply_count": 2,
        "reply_users_count": 2,
        "latest_reply": "1727147725.976049",
        "reply_users": [
            "U01AD80KMLK",
            "U03U0SCU5LH"
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "2aqU6",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Should code completion preselect in the dropdown?\nFor example, if I write \"object.l\", this opens a dropdown with \"length\". Should the length be selected, so pressing \"enter\", inserts it directly or should I first need to press \"down arrow\"?\nIn visual studio, it is not preselect if I write a function, but does preselect for members. Is there some common approach?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U04BQN4K3AP",
        "type": "message",
        "ts": "1727077286.414899",
        "client_msg_id": "cb807daa-577d-4ed0-bd35-80c6cb9b77de",
        "text": "Not sure if this is the right place to post this and whether this is interesting to this group, but I gave a short presentation last week about the *future of programming systems* and curious what you think about it. I wrote it down in a blog post here: <https://blog.waleson.com/2024/09/the-future-of-programming-systems-four.html>\n\nThere are four thoughts that I think will shape the future:\n\u2022 Software development systems have a lot of vestigial parts (left-overs from the way it evolved)\n\u2022 Understanding is crucial to development, and with the right mediums we can understand the subject much faster\n\u2022 Most software platforms developed bottom-up, from the silicon, instead of focusing on the needs of the people\n\u2022 Software is truly different from other technologies in the freedom it gives us, so we can and should invent new abstractions that make things simpler than they are now\nThis isn't in the post, but I think that in the future we'll see:\n\u2022 Great integration between design tools, version control, IDEs, databases, monitoring &amp; logging systems.\n\u2022 High-level concepts as first class systems in the programming systems. Simple examples are an email or phone number type as a database primitive, instead of strings.\n\u2022 Better reasoning / business logic rules so that IDEs can give feedback on \"you are not allowed to store PII in this database\".\nThis way all stakeholders can collaborate and the system can check correctness much better, and we require less discipline/in-depth knowledge from the team members.\n\nI suspect most of these ideas have come by in this community already, but still curious what you think!",
        "team": "T5TCAFTA9",
        "thread_ts": "1727077286.414899",
        "reply_count": 6,
        "reply_users_count": 3,
        "latest_reply": "1727175371.544699",
        "reply_users": [
            "UJBAJNFLK",
            "U04BQN4K3AP",
            "U0123H7JRDM"
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "gRwjq",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Not sure if this is the right place to post this and whether this is interesting to this group, but I gave a short presentation last week about the "
                            },
                            {
                                "type": "text",
                                "text": "future of programming systems",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " and curious what you think about it. I wrote it down in a blog post here: "
                            },
                            {
                                "type": "link",
                                "url": "https://blog.waleson.com/2024/09/the-future-of-programming-systems-four.html"
                            },
                            {
                                "type": "text",
                                "text": "\n\nThere are four thoughts that I think will shape the future:\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Software development systems have a lot of vestigial parts (left-overs from the way it evolved)"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Understanding is crucial to development, and with the right mediums we can understand the subject much faster"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Most software platforms developed bottom-up, from the silicon, instead of focusing on the needs of the people"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Software is truly different from other technologies in the freedom it gives us, so we can and should invent new abstractions that make things simpler than they are now"
                                    }
                                ]
                            }
                        ],
                        "style": "bullet",
                        "indent": 0,
                        "border": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nThis isn't in the post, but I think that in the future we'll see:\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Great integration between design tools, version control, IDEs, databases, monitoring & logging systems."
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "High-level concepts as first class systems in the programming systems. Simple examples are an email or phone number type as a database primitive, instead of strings."
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Better reasoning / business logic rules so that IDEs can give feedback on \"you are not allowed to store PII in this database\"."
                                    }
                                ]
                            }
                        ],
                        "style": "bullet",
                        "indent": 0,
                        "border": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nThis way all stakeholders can collaborate and the system can check correctness much better, and we require less discipline/in-depth knowledge from the team members.\n\nI suspect most of these ideas have come by in this community already, but still curious what you think!"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U01AD80KMLK",
        "type": "message",
        "ts": "1727106723.175299",
        "client_msg_id": "7fc9fb0e-17ca-43a2-ad5d-63cc595fc9ff",
        "text": "Or it could be content-addressable code, such as in Unison? Where you can hash the paths inside each function, in order to find overlaps?",
        "team": "T5TCAFTA9",
        "thread_ts": "1727049812.369579",
        "parent_user_id": "U06MCTWJKSR",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "RIJPU",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Or it could be content-addressable code, such as in Unison? Where you can hash the paths inside each function, in order to find overlaps?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U01AD80KMLK",
        "type": "message",
        "ts": "1727106803.795339",
        "client_msg_id": "10244110-b925-411d-a878-5ca557778699",
        "text": "I am used to tab for completion, and to not preselect, but I haven't used a standard IDE for a long time -- one reason is because they annoy me a lot with their completion flows :smile:",
        "team": "T5TCAFTA9",
        "thread_ts": "1727073095.141339",
        "parent_user_id": "U03U0SCU5LH",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "srbVb",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I am used to tab for completion, and to not preselect, but I haven't used a standard IDE for a long time -- one reason is because they annoy me a lot with their completion flows "
                            },
                            {
                                "type": "emoji",
                                "name": "smile",
                                "unicode": "1f604"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U03U0SCU5LH",
        "type": "message",
        "ts": "1727147725.976049",
        "client_msg_id": "df3f08b1-eff2-4c1f-b008-e4bc3cc60aae",
        "text": "See, that's the thing. I feel like pre select is great 90% of the time, but if it isn't, it's *really* irritating.",
        "team": "T5TCAFTA9",
        "thread_ts": "1727073095.141339",
        "parent_user_id": "U03U0SCU5LH",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "r5hSO",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "See, that's the thing. I feel like pre select is great 90% of the time, but if it isn't, it's "
                            },
                            {
                                "type": "text",
                                "text": "really",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " irritating."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heavy_plus_sign",
                "users": [
                    "U01AD80KMLK"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UJBAJNFLK",
        "type": "message",
        "ts": "1727158379.866259",
        "client_msg_id": "67aabc7e-67af-4567-ae48-5a8c3dd6bbff",
        "text": "I hope your predictions will become true!\n\nOne obstacle I see is the widespread belief in \"software\" and \"programming\" as universal abstractions. Human-friendly environments will have to be domain-specific. As a researcher working on protein dynamics, I have no use for your \"phone number\" entity, but I have lots of others that even my colleagues in neighboring domains would have no use for.\n\nDomain-specific tools would necessarily need to a fragmentation of the software professions, and I suspect that is something many people don't want to happen.",
        "team": "T5TCAFTA9",
        "thread_ts": "1727077286.414899",
        "parent_user_id": "U04BQN4K3AP",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Bwph5",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I hope your predictions will become true!\n\nOne obstacle I see is the widespread belief in \"software\" and \"programming\" as universal abstractions. Human-friendly environments will have to be domain-specific. As a researcher working on protein dynamics, I have no use for your \"phone number\" entity, but I have lots of others that even my colleagues in neighboring domains would have no use for.\n\nDomain-specific tools would necessarily need to a fragmentation of the software professions, and I suspect that is something many people don't want to happen."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U04BQN4K3AP",
        "type": "message",
        "ts": "1727164166.880259",
        "client_msg_id": "6dd8259f-f83f-4a69-84eb-f88dc09b5f93",
        "text": "Right, thanks for that! I'm a bit too focused on the web applications field so good to get other perspectives.\n\nSo the best known programming tools have universal adoption and hence offer the lowest common denominator in terms of concepts. This makes sense, the most powerful systems I've seen were indeed focused on making one kind of application.",
        "team": "T5TCAFTA9",
        "thread_ts": "1727077286.414899",
        "parent_user_id": "U04BQN4K3AP",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "5+UaN",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Right, thanks for that! I'm a bit too focused on the web applications field so good to get other perspectives.\n\nSo the best known programming tools have universal adoption and hence offer the lowest common denominator in terms of concepts. This makes sense, the most powerful systems I've seen were indeed focused on making one kind of application."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U04BQN4K3AP",
        "type": "message",
        "ts": "1727164647.819399",
        "client_msg_id": "49cae896-6776-4e26-b225-63f826b01312",
        "text": "So maybe a programming system with pluggable concepts and rules could be a thing. But that smells like over-engineering :wink:\n\nMaybe best to start with a niche and just build an amazingly integrated system there, so that productivity can go 10x. After that we figure out how to offer something similar to other niches.",
        "team": "T5TCAFTA9",
        "thread_ts": "1727077286.414899",
        "parent_user_id": "U04BQN4K3AP",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "srNN8",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "So maybe a programming system with pluggable concepts and rules could be a thing. But that smells like over-engineering "
                            },
                            {
                                "type": "emoji",
                                "name": "wink",
                                "unicode": "1f609"
                            },
                            {
                                "type": "text",
                                "text": "\n\nMaybe best to start with a niche and just build an amazingly integrated system there, so that productivity can go 10x. After that we figure out how to offer something similar to other niches."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U0123H7JRDM",
        "type": "message",
        "ts": "1727168391.400269",
        "client_msg_id": "E9B529FC-871C-4348-BBD2-E7AAF6D3C1CF",
        "text": "Will you give this presentation again or a similar presentation in Zeist? I live nearby (Doorn) and would love to join a presentation in real live if possible :grinning: ",
        "team": "T5TCAFTA9",
        "thread_ts": "1727077286.414899",
        "parent_user_id": "U04BQN4K3AP",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "iI4Yo",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Will you give this presentation again or a similar presentation in Zeist? I live nearby (Doorn) and would love to join a presentation in real live if possible "
                            },
                            {
                                "type": "emoji",
                                "name": "grinning",
                                "unicode": "1f600"
                            },
                            {
                                "type": "text",
                                "text": " "
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U04BQN4K3AP",
        "type": "message",
        "ts": "1727168743.350109",
        "client_msg_id": "bef685e1-17fd-4a52-aac4-55129bb45a69",
        "text": "Hah, nice! Nothing planned, but if you find a place where this presentation is welcome let me know!",
        "team": "T5TCAFTA9",
        "thread_ts": "1727077286.414899",
        "parent_user_id": "U04BQN4K3AP",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "wKaU6",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Hah, nice! Nothing planned, but if you find a place where this presentation is welcome let me know!"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJBAJNFLK",
        "type": "message",
        "ts": "1727175371.544699",
        "client_msg_id": "56562fbd-eddc-4b3f-9927-6e3c888e1e73",
        "text": "Plugin architecture or not, that's an implementation detail. If you want to be human-friendly, you have to start from how humans think and work, and develop tools that support them. Once you have done this for ten domains, you can look for shared aspects, a common infrastructure, and other low-level stuff. I see today's main problem in that we work the other way round: we start from tech stacks and have software specialists develop apps for users who are not expected to understand or modify these appls.",
        "team": "T5TCAFTA9",
        "thread_ts": "1727077286.414899",
        "parent_user_id": "U04BQN4K3AP",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "f/lgH",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Plugin architecture or not, that's an implementation detail. If you want to be human-friendly, you have to start from how humans think and work, and develop tools that support them. Once you have done this for ten domains, you can look for shared aspects, a common infrastructure, and other low-level stuff. I see today's main problem in that we work the other way round: we start from tech stacks and have software specialists develop apps for users who are not expected to understand or modify these appls."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "clap",
                "users": [
                    "U04BQN4K3AP"
                ],
                "count": 1
            },
            {
                "name": "+1",
                "users": [
                    "UGWUJUZHT"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U06MCTWJKSR",
        "type": "message",
        "ts": "1727217934.562469",
        "client_msg_id": "2030b659-a126-4c04-a919-dbcaee2f82e2",
        "text": "Hm, this might be quite interesting in Unison!\nWell, a control flow graph is what I need. Apparently there's a big market for proprietary graphing tools along these lines, but for FP an extremely simple one should work. Seems like I'll need to make something myself, but at least I'll learn some things first and give it some context.\nThanks to you both!",
        "team": "T5TCAFTA9",
        "thread_ts": "1727049812.369579",
        "parent_user_id": "U06MCTWJKSR",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "JjRnN",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Hm, this might be quite interesting in Unison!\nWell, a control flow graph is what I need. Apparently there's a big market for proprietary graphing tools along these lines, but for FP an extremely simple one should work. Seems like I'll need to make something myself, but at least I'll learn some things first and give it some context.\nThanks to you both!"
                            }
                        ]
                    }
                ]
            }
        ]
    }
]