[
    {
        "user": "UGWUJUZHT",
        "type": "message",
        "ts": "1727140652.150989",
        "client_msg_id": "8bda9aca-889d-4354-8043-8bfdb5faf120",
        "text": "Functional Programming Is Letting Us Down\n\n<https://open.substack.com/pub/programmingsimplicity/p/functional-programming-is-letting?r=1egdky&amp;utm_campaign=post&amp;utm_medium=web&amp;showWelcomeOnShare=true>",
        "team": "T5TCAFTA9",
        "thread_ts": "1727140652.150989",
        "reply_count": 9,
        "reply_users_count": 3,
        "latest_reply": "1727337584.335639",
        "reply_users": [
            "U01AD80KMLK",
            "UJBAJNFLK",
            "UGWUJUZHT"
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "flMVJ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Functional Programming Is Letting Us Down\n\n"
                            },
                            {
                                "type": "link",
                                "url": "https://open.substack.com/pub/programmingsimplicity/p/functional-programming-is-letting?r=1egdky&utm_campaign=post&utm_medium=web&showWelcomeOnShare=true"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U01AD80KMLK",
        "type": "message",
        "ts": "1727157711.589569",
        "client_msg_id": "3e590f6f-ade2-4d74-b432-c42aae21fe5d",
        "text": "Is this a PDF published through a substack?",
        "team": "T5TCAFTA9",
        "thread_ts": "1727140652.150989",
        "parent_user_id": "UGWUJUZHT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "QrPJS",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Is this a PDF published through a substack?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJBAJNFLK",
        "type": "message",
        "ts": "1727158642.101889",
        "client_msg_id": "68d59f98-41d5-4692-938b-090da53d629d",
        "text": "&gt; The fact that we have pushed the function-based paradigm this far is not a testame_g_nt to functional thinking, but, is a testament to the tenacity of the human spirit. Humans will find workarounds for their inadequate tools, even if it takes them 50+ years.\nTrue but only part of the story. There has to be inertia in technology if you want it to be useful. For stuff that lots of people depend on, you can't just pull the plug and start from scratch every couple of years.\n\nFor that reason, the only possibility I see for your ideas to become reality is as a _generalization_ of today's function-based systems. Future systems must allow today's software to remain usable, and then open up new ways that can be explored incrementally.",
        "team": "T5TCAFTA9",
        "thread_ts": "1727140652.150989",
        "parent_user_id": "UGWUJUZHT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "8Yu66",
                "elements": [
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The fact that we have pushed the function-based paradigm this far is not a testame"
                            },
                            {
                                "type": "text",
                                "text": "g",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "nt to functional thinking, but, is a testament to the tenacity of the human spirit. Humans will find workarounds for their inadequate tools, even if it takes them 50+ years."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nTrue but only part of the story. There has to be inertia in technology if you want it to be useful. For stuff that lots of people depend on, you can't just pull the plug and start from scratch every couple of years.\n\nFor that reason, the only possibility I see for your ideas to become reality is as a "
                            },
                            {
                                "type": "text",
                                "text": "generalization",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " of today's function-based systems. Future systems must allow today's software to remain usable, and then open up new ways that can be explored incrementally."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UGWUJUZHT",
        "type": "message",
        "ts": "1727171399.620839",
        "client_msg_id": "a5a0b9b3-f503-4b25-9907-9080d88cdbdc",
        "text": "<@U01AD80KMLK> I'm not sure how to answer your question. This is a PDF created with Apple Pages. Lately, I've been using substack for blogging, but writing in Apple Pages (before that, I was blogging on github, then Obsidian (from which I have since escaped)). I've discovered that dragging a Pages document that contains footnotes and images into substack is a very manual mega-project. Subtstack allows me to drag'n'drop PDF files directly into a post, but, readers must download the PDF to view it. Github allows me to \"embed\" PDFs in a frame that makes them kinda visible, whereas substack doesn't do this. I am back to considering whether I should re-consider the use of leanpub or gumroad or ???).",
        "team": "T5TCAFTA9",
        "thread_ts": "1727140652.150989",
        "parent_user_id": "UGWUJUZHT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "GKx/i",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U01AD80KMLK"
                            },
                            {
                                "type": "text",
                                "text": " I'm not sure how to answer your question. This is a PDF created with Apple Pages. Lately, I've been using substack for blogging, but writing in Apple Pages (before that, I was blogging on github, then Obsidian (from which I have since escaped)). I've discovered that dragging a Pages document that contains footnotes and images into substack is a very manual mega-project. Subtstack allows me to drag'n'drop PDF files directly into a post, but, readers must download the PDF to view it. Github allows me to \"embed\" PDFs in a frame that makes them kinda visible, whereas substack doesn't do this. I am back to considering whether I should re-consider the use of leanpub or gumroad or ???)."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U01AD80KMLK"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UGWUJUZHT",
        "type": "message",
        "ts": "1727174715.656089",
        "client_msg_id": "8462f2ae-afdf-49bb-b26a-ffb2da702fb0",
        "text": "<@UJBAJNFLK>\n&gt; ... There has to be inertia in technology if you want it to be useful. \nInertia only gets you so far. I claim that it is *impossible* to express asynchronous concurrency using a function-based paradigm. You can chip away at trying to get there incrementally, but you reach an asymptote that you can only get closer to, but, never arrive at.\n\nI claim that we're witnessing this phenomenon *right now*.\n\nThe real questions are: (1) is it impossible to express asynchronous concurrency using a function-based paradigm, and, (2) is it really true that the crop of problems that we face are rife with asynchronous concurrency?\n\nIf (1) and (2) are true, then continuing to push on the function-based paradigm is futile and a waste of time. Take the wins from thinking that way and move on. No need to wipe out what we've already achieved. Just stop beating our heads against the wall of what cannot be achieved in the future.\n\nAlpha-beta pruning. If the going gets tough, find a way to make it be less tough. If you end up in a corner, don't keep pushing deeper into the corner.\n\n&gt; \n&gt; For stuff that lots of people depend on, you can't just pull the plug and start from scratch every couple of years.\nDid I actually say that I recommend pulling the plug? I hope not. In fact, all of my experiments with this stuff are based on existing technologies, like Odin, Python, <http://draw.io|draw.io>.\n\nConcurrency is easy (even the asynchronous kind). 5-year olds, without PhDs, understand hard realtime and written notation for expressing hard realtime (piano lessons and music notation). If concurrency using a specific paradigm looks not-easy, that's a tell. If you need to keep inventing workarounds to keep pushing a belief system, that's a tell. If you espouse an edict that contradicts reality, that's a tell (e.g. \"no mutation\" violates the basic premise of CPUs bolted to RAM ; e.g. \"control flow is data\" is patently untrue (the data that control flow *interprets* is data, but the *interpreter* is not data (CPUs are interpreters, albeit very fast ones))). When the tells pile up, maybe it's time to reconsider whether forging ahead on only one path continues to be reasonable.\n\n&gt; For that reason, the only possibility I see for your ideas to become reality is as a _generalization_\nThere's something that I disagree with. The answers will not come from further *generalization* but from further *specialization*. Our current software development workflows are based on the idea of *generalization*. If you insist on incrementally developing something, how about incrementally developing a way to allow *specializations* to co-exist and to be composed into functioning code? (hint: I'm playing with and blogging about how to use existing languages as *assemblers* for new languages)\n\n[I view, correctly or incorrectly, \"Moldable Development\" as another idea for how to insert specialization into our workflows.]\n\n&gt; Future systems must allow today's software to remain usable, \nAgreed.\n\n&gt; and then open up new ways that can be explored incrementally.\nYou, also, need to be able to tell if you're at a dead-end and when to stop wasting your time.\n\nRemembering and understanding how hardware works might offer up new ways to create new things. OTOH, pure research is, indeed, worthwhile. IMO, pushing on the functional paradigm has transmogrified into pure research into only *one* way to use ReprEMs (reprogrammable electronic machines - formerly known as \"computers\"). I wish to point out that there are many other vectors for pure research into the use of ReprEMs , that remain to be low-hanging fruit and might lead to more fruitful and cost-effective approaches to using ReprEMs.",
        "team": "T5TCAFTA9",
        "thread_ts": "1727140652.150989",
        "parent_user_id": "UGWUJUZHT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "8Pbo9",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UJBAJNFLK"
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "... There has to be inertia in technology if you want it to be useful. "
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nInertia only gets you so far. I claim that it is "
                            },
                            {
                                "type": "text",
                                "text": "impossible",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " to express asynchronous concurrency using a function-based paradigm. You can chip away at trying to get there incrementally, but you reach an asymptote that you can only get closer to, but, never arrive at.\n\nI claim that we're witnessing this phenomenon "
                            },
                            {
                                "type": "text",
                                "text": "right now",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ".\n\nThe real questions are: (1) is it impossible to express asynchronous concurrency using a function-based paradigm, and, (2) is it really true that the crop of problems that we face are rife with asynchronous concurrency?\n\nIf (1) and (2) are true, then continuing to push on the function-based paradigm is futile and a waste of time. Take the wins from thinking that way and move on. No need to wipe out what we've already achieved. Just stop beating our heads against the wall of what cannot be achieved in the future.\n\nAlpha-beta pruning. If the going gets tough, find a way to make it be less tough. If you end up in a corner, don't keep pushing deeper into the corner.\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nFor stuff that lots of people depend on, you can't just pull the plug and start from scratch every couple of years."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nDid I actually say that I recommend pulling the plug? I hope not. In fact, all of my experiments with this stuff are based on existing technologies, like Odin, Python, "
                            },
                            {
                                "type": "link",
                                "url": "http://draw.io",
                                "text": "draw.io"
                            },
                            {
                                "type": "text",
                                "text": ".\n\nConcurrency is easy (even the asynchronous kind). 5-year olds, without PhDs, understand hard realtime and written notation for expressing hard realtime (piano lessons and music notation). If concurrency using a specific paradigm looks not-easy, that's a tell. If you need to keep inventing workarounds to keep pushing a belief system, that's a tell. If you espouse an edict that contradicts reality, that's a tell (e.g. \"no mutation\" violates the basic premise of CPUs bolted to RAM ; e.g. \"control flow is data\" is patently untrue (the data that control flow "
                            },
                            {
                                "type": "text",
                                "text": "interprets",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " is data, but the "
                            },
                            {
                                "type": "text",
                                "text": "interpreter",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " is not data (CPUs are interpreters, albeit very fast ones))). When the tells pile up, maybe it's time to reconsider whether forging ahead on only one path continues to be reasonable.\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "For that reason, the only possibility I see for your ideas to become reality is as a "
                            },
                            {
                                "type": "text",
                                "text": "generalization",
                                "style": {
                                    "italic": true
                                }
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nThere's something that I disagree with. The answers will not come from further "
                            },
                            {
                                "type": "text",
                                "text": "generalization",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " but from further "
                            },
                            {
                                "type": "text",
                                "text": "specialization",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ". Our current software development workflows are based on the idea of "
                            },
                            {
                                "type": "text",
                                "text": "generalization",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ". If you insist on incrementally developing something, how about incrementally developing a way to allow "
                            },
                            {
                                "type": "text",
                                "text": "specializations",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " to co-exist and to be composed into functioning code? (hint: I'm playing with and blogging about how to use existing languages as "
                            },
                            {
                                "type": "text",
                                "text": "assemblers",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " for new languages)\n\n[I view, correctly or incorrectly, \"Moldable Development\" as another idea for how to insert specialization into our workflows.]\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Future systems must allow today's software to remain usable, "
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nAgreed.\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "and then open up new ways that can be explored incrementally."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nYou, also, need to be able to tell if you're at a dead-end and when to stop wasting your time.\n\nRemembering and understanding how hardware works might offer up new ways to create new things. OTOH, pure research is, indeed, worthwhile. IMO, pushing on the functional paradigm has transmogrified into pure research into only "
                            },
                            {
                                "type": "text",
                                "text": "one",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " way to use ReprEMs (reprogrammable electronic machines - formerly known as \"computers\"). I wish to point out that there are many other vectors for pure research into the use of ReprEMs , that remain to be low-hanging fruit and might lead to more fruitful and cost-effective approaches to using ReprEMs."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U01AD80KMLK",
        "type": "message",
        "ts": "1727175780.682899",
        "client_msg_id": "ad0f437c-a349-4801-9e71-9d9dc4422bdd",
        "text": "<@UGWUJUZHT> thanks for the explanation! It's a pity Apple Pages doesn't allow for a more webby export format, such as HTML",
        "team": "T5TCAFTA9",
        "thread_ts": "1727140652.150989",
        "parent_user_id": "UGWUJUZHT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Eb/oi",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UGWUJUZHT"
                            },
                            {
                                "type": "text",
                                "text": " thanks for the explanation! It's a pity Apple Pages doesn't allow for a more webby export format, such as HTML"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UGWUJUZHT",
        "type": "message",
        "ts": "1727181108.571749",
        "edited": {
            "user": "UGWUJUZHT",
            "ts": "1727181880.000000"
        },
        "client_msg_id": "6b01ab77-9c8f-46db-9a7d-e1b4b3d9992f",
        "text": "Firstly, it's substack - there appears to be no API for pumping stuff into it. I can't even drag'n'drop markdown into it. You have to use their editor, and manually enter text. Apple Pages can already export to epub and to .docx. The problem is that substack doesn't grok those formats. substack does partly grok Apple Pages format, but not footnotes and diagrams/images/screenshots (I haven't found anything yet that makes inclusion of .png / .svg easy and visible. Obsidian does, but it's paywalled, with unpleasant repercussions if you stop paying (ask me how I know :slightly_smiling_face:). Github is close but no cigar). Substack's appeal is its distribution and other non-technical things. If substack would allow me to pump markdown or leanpub's markua at it, I would probably be happier. I continue to root around for solutions. I'm always open to suggestions to things that let me spend time building software instead of spending time writing about it. <@U01AD80KMLK>",
        "team": "T5TCAFTA9",
        "thread_ts": "1727140652.150989",
        "parent_user_id": "UGWUJUZHT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "xqBzB",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Firstly, it's substack - there appears to be no API for pumping stuff into it. I can't even drag'n'drop markdown into it. You have to use their editor, and manually enter text. Apple Pages can already export to epub and to .docx. The problem is that substack doesn't grok those formats. substack does partly grok Apple Pages format, but not footnotes and diagrams/images/screenshots (I haven't found anything yet that makes inclusion of .png / .svg easy and visible. Obsidian does, but it's paywalled, with unpleasant repercussions if you stop paying (ask me how I know "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            },
                            {
                                "type": "text",
                                "text": "). Github is close but no cigar). Substack's appeal is its distribution and other non-technical things. If substack would allow me to pump markdown or leanpub's markua at it, I would probably be happier. I continue to root around for solutions. I'm always open to suggestions to things that let me spend time building software instead of spending time writing about it. "
                            },
                            {
                                "type": "user",
                                "user_id": "U01AD80KMLK"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U01AD80KMLK"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UJBAJNFLK",
        "type": "message",
        "ts": "1727242639.436099",
        "client_msg_id": "c3793ffc-6aca-40ba-bf80-214f32544b59",
        "text": "<@UGWUJUZHT> I actually agree with much of what you say! The only point we seem to disagree on is the role of inertia.\n\n&gt; Inertia only gets you so far.\nThe role of inertia is to keep the rate of change in society at a level that society can absorb by adapting. So yes, it's an obstacle to innovation. But if you insist in innovating faster, the society will just ignore your work. Which is what is happening to most of us here (also for other reasons of course).\n\nA \"dead end\" for innovation may well be what non-tech people are happy with. I doubt that's the case for today's IT, but that's another story. You don't want to get stuck in a dead end when doing research, but then research is a minority activity anyway, and will always remain one. As a researcher myself, I mostly share your point of view. But I also understand the majority of non-researchers who just want to tweak mainstream stuff to get a job done.\n\nMy choice of \"generalization\" was not the best one. The idea is that your new stuff and the old stuff must live in a single technological realm in which application-oriented people can move around with ease. Your new high-concurrency computers must be usable as coprocessors for commodity machines at first.",
        "team": "T5TCAFTA9",
        "thread_ts": "1727140652.150989",
        "parent_user_id": "UGWUJUZHT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "CpuR1",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UGWUJUZHT"
                            },
                            {
                                "type": "text",
                                "text": " I actually agree with much of what you say! The only point we seem to disagree on is the role of inertia.\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Inertia only gets you so far."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The role of inertia is to keep the rate of change in society at a level that society can absorb by adapting. So yes, it's an obstacle to innovation. But if you insist in innovating faster, the society will just ignore your work. Which is what is happening to most of us here (also for other reasons of course).\n\nA \"dead end\" for innovation may well be what non-tech people are happy with. I doubt that's the case for today's IT, but that's another story. You don't want to get stuck in a dead end when doing research, but then research is a minority activity anyway, and will always remain one. As a researcher myself, I mostly share your point of view. But I also understand the majority of non-researchers who just want to tweak mainstream stuff to get a job done.\n\nMy choice of \"generalization\" was not the best one. The idea is that your new stuff and the old stuff must live in a single technological realm in which application-oriented people can move around with ease. Your new high-concurrency computers must be usable as coprocessors for commodity machines at first."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UGWUJUZHT",
        "type": "message",
        "ts": "1727316771.426419",
        "client_msg_id": "3d2119b9-1693-423e-abcb-a18d3c5a62c1",
        "text": "<@UJBAJNFLK> I'm enjoying this conversation and thank you for taking the time to read and comment.\n\n1) I disagree with your disagreement. It appears that we disagree on deep-down beliefs, inertia is just a second order effect.\n2) End-users don't care if developers use assembler or Haskell. It appears that most of my comments regard developers and practical application of programming research. Does that clarification of perspective change the thrust of this thread?\n3) It seems to me that compute-ing is unduly influencing practical aspects of programming (while end-users just don't care).\n\n Extended comments can be found in...<https://programmingsimplicity.substack.com/p/beliefs-that-adversely-affect-the?r=1egdky>",
        "team": "T5TCAFTA9",
        "thread_ts": "1727140652.150989",
        "parent_user_id": "UGWUJUZHT",
        "attachments": [
            {
                "from_url": "https://programmingsimplicity.substack.com/p/beliefs-that-adversely-affect-the?r=1egdky",
                "service_icon": "https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F9bf28261-3dbc-4931-99f3-57bb47beeb02%2Fapple-touch-icon-57x57.png",
                "thumb_url": "https://substackcdn.com/image/fetch/w_1200,h_600,c_fill,f_jpg,q_auto:good,fl_progressive:steep,g_auto/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F9d69eba9-d5d3-4387-a046-9b881b00bd45_131x131.png",
                "thumb_width": 131,
                "thumb_height": 131,
                "id": 1,
                "original_url": "https://programmingsimplicity.substack.com/p/beliefs-that-adversely-affect-the?r=1egdky",
                "fallback": "Beliefs That Adversely Affect the State of Programming",
                "text": "2024-09-25",
                "title": "Beliefs That Adversely Affect the State of Programming",
                "title_link": "https://programmingsimplicity.substack.com/p/beliefs-that-adversely-affect-the?r=1egdky",
                "service_name": "programmingsimplicity.substack.com"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "2m8N8",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UJBAJNFLK"
                            },
                            {
                                "type": "text",
                                "text": " I'm enjoying this conversation and thank you for taking the time to read and comment.\n\n1) I disagree with your disagreement. It appears that we disagree on deep-down beliefs, inertia is just a second order effect.\n2) End-users don't care if developers use assembler or Haskell. It appears that most of my comments regard developers and practical application of programming research. Does that clarification of perspective change the thrust of this thread?\n3) It seems to me that compute-ing is unduly influencing practical aspects of programming (while end-users just don't care).\n\n Extended comments can be found in..."
                            },
                            {
                                "type": "link",
                                "url": "https://programmingsimplicity.substack.com/p/beliefs-that-adversely-affect-the?r=1egdky"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJBAJNFLK",
        "type": "message",
        "ts": "1727337584.335639",
        "client_msg_id": "61a4d628-4978-46a7-a42f-a25cfe0cdf8e",
        "text": "<@UGWUJUZHT> Maybe I am misinterpreting something. I read your text as a call for a technological revolution, from new chips to new software stacks. If you stay on today's commodity hardware and only change the programming toolchains, then it's indeed only developers that are concerned.",
        "team": "T5TCAFTA9",
        "thread_ts": "1727140652.150989",
        "parent_user_id": "UGWUJUZHT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "V1Cdm",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UGWUJUZHT"
                            },
                            {
                                "type": "text",
                                "text": " Maybe I am misinterpreting something. I read your text as a call for a technological revolution, from new chips to new software stacks. If you stay on today's commodity hardware and only change the programming toolchains, then it's indeed only developers that are concerned."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "thinking_face",
                "users": [
                    "UGWUJUZHT"
                ],
                "count": 1
            }
        ]
    }
]