[
    {
        "text": "Very initial draft of a notebook UI.\n\nThere are 2 kinds of lines here:\n\u2022 Regular lines are prose, but you can also insert named blanks into them using the syntax `[value|name]`, which renders vertically across 2 lines. You can't nest blanks within blanks. These lines can wrap, but a single blank can't wrap across multiple lines on screen.\n\u2022 Indented lines (though the indentation is currently subtle) are code. They can render fractions using the syntax `(a/b)` as I showed before. (Not sure I'll keep this in the long term.) You can nest fractions within fractions. These lines don't support wrapping.\nPlanned:\n\u2022 synchronizing blanks with the same name\n\u2022 using code in indented lines to compute derived names without values inline.\nInspirations:\n\u2022 Kragen Sitaker's _<https://www.mail-archive.com/kragen-tol@canonical.org/msg00058.html|bicicleta>_\n\u2022 <@U6KQ2S410>'s <https://vimeo.com/451278506|Subtext 1> (<https://futureofcoding.slack.com/archives/C5U3SEW6A/p1724970991598089|previously>)",
        "files": [
            {
                "id": "F07MTARRBPX",
                "created": 1726630447,
                "timestamp": 1726630447,
                "name": "20240917-notebook.png",
                "title": "20240917-notebook.png",
                "mimetype": "image/png",
                "filetype": "png",
                "pretty_type": "PNG",
                "user": "UCUSW7WVD",
                "user_team": "T5TCAFTA9",
                "editable": false,
                "size": 193568,
                "mode": "hosted",
                "is_external": false,
                "external_type": "",
                "is_public": true,
                "public_url_shared": false,
                "display_as_bot": false,
                "username": "",
                "url_private": "https://files.slack.com/files-pri/T5TCAFTA9-F07MTARRBPX/20240917-notebook.png",
                "url_private_download": "https://files.slack.com/files-pri/T5TCAFTA9-F07MTARRBPX/download/20240917-notebook.png",
                "media_display_type": "unknown",
                "thumb_64": "https://files.slack.com/files-tmb/T5TCAFTA9-F07MTARRBPX-26ae80ac02/20240917-notebook_64.png",
                "thumb_80": "https://files.slack.com/files-tmb/T5TCAFTA9-F07MTARRBPX-26ae80ac02/20240917-notebook_80.png",
                "thumb_360": "https://files.slack.com/files-tmb/T5TCAFTA9-F07MTARRBPX-26ae80ac02/20240917-notebook_360.png",
                "thumb_360_w": 360,
                "thumb_360_h": 179,
                "thumb_480": "https://files.slack.com/files-tmb/T5TCAFTA9-F07MTARRBPX-26ae80ac02/20240917-notebook_480.png",
                "thumb_480_w": 480,
                "thumb_480_h": 239,
                "thumb_160": "https://files.slack.com/files-tmb/T5TCAFTA9-F07MTARRBPX-26ae80ac02/20240917-notebook_160.png",
                "thumb_720": "https://files.slack.com/files-tmb/T5TCAFTA9-F07MTARRBPX-26ae80ac02/20240917-notebook_720.png",
                "thumb_720_w": 720,
                "thumb_720_h": 358,
                "thumb_800": "https://files.slack.com/files-tmb/T5TCAFTA9-F07MTARRBPX-26ae80ac02/20240917-notebook_800.png",
                "thumb_800_w": 800,
                "thumb_800_h": 398,
                "thumb_960": "https://files.slack.com/files-tmb/T5TCAFTA9-F07MTARRBPX-26ae80ac02/20240917-notebook_960.png",
                "thumb_960_w": 960,
                "thumb_960_h": 478,
                "thumb_1024": "https://files.slack.com/files-tmb/T5TCAFTA9-F07MTARRBPX-26ae80ac02/20240917-notebook_1024.png",
                "thumb_1024_w": 1024,
                "thumb_1024_h": 510,
                "original_w": 1918,
                "original_h": 955,
                "thumb_tiny": "AwAXADDQP4Uoz2xRQPbmgA5ox7fpS80c0AGPaijmjmgBD1oBJ9Kaev405etADqKKKACiiigD/9k=",
                "permalink": "https://futureofcoding.slack.com/files/UCUSW7WVD/F07MTARRBPX/20240917-notebook.png",
                "permalink_public": "https://slack-files.com/T5TCAFTA9-F07MTARRBPX-fba6fce875",
                "is_starred": false,
                "has_rich_preview": false,
                "file_access": "visible"
            }
        ],
        "upload": false,
        "user": "UCUSW7WVD",
        "display_as_bot": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ng6Jn",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Very initial draft of a notebook UI.\n\nThere are 2 kinds of lines here:\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Regular lines are prose, but you can also insert named blanks into them using the syntax "
                                    },
                                    {
                                        "type": "text",
                                        "text": "[value|name]",
                                        "style": {
                                            "code": true
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "text": ", which renders vertically across 2 lines. You can't nest blanks within blanks. These lines can wrap, but a single blank can't wrap across multiple lines on screen."
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Indented lines (though the indentation is currently subtle) are code. They can render fractions using the syntax "
                                    },
                                    {
                                        "type": "text",
                                        "text": "(a/b)",
                                        "style": {
                                            "code": true
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "text": " as I showed before. (Not sure I'll keep this in the long term.) You can nest fractions within fractions. These lines don't support wrapping."
                                    }
                                ]
                            }
                        ],
                        "style": "bullet",
                        "indent": 0,
                        "border": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nPlanned:\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "synchronizing blanks with the same name"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "using code in indented lines to compute derived names without values inline."
                                    }
                                ]
                            }
                        ],
                        "style": "bullet",
                        "indent": 0,
                        "border": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nInspirations:\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Kragen Sitaker's "
                                    },
                                    {
                                        "type": "link",
                                        "url": "https://www.mail-archive.com/kragen-tol@canonical.org/msg00058.html",
                                        "text": "bicicleta",
                                        "style": {
                                            "italic": true
                                        }
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "user",
                                        "user_id": "U6KQ2S410"
                                    },
                                    {
                                        "type": "text",
                                        "text": "'s "
                                    },
                                    {
                                        "type": "link",
                                        "url": "https://vimeo.com/451278506",
                                        "text": "Subtext 1"
                                    },
                                    {
                                        "type": "text",
                                        "text": " ("
                                    },
                                    {
                                        "type": "link",
                                        "url": "https://futureofcoding.slack.com/archives/C5U3SEW6A/p1724970991598089",
                                        "text": "previously"
                                    },
                                    {
                                        "type": "text",
                                        "text": ")"
                                    }
                                ]
                            }
                        ],
                        "style": "bullet",
                        "indent": 0,
                        "border": 0
                    }
                ]
            }
        ],
        "type": "message",
        "ts": "1726630509.724069",
        "edited": {
            "user": "UCUSW7WVD",
            "ts": "1726631349.000000"
        },
        "client_msg_id": "799051c9-dfd1-4d42-974b-2819ef5ca2ef",
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UMV4B97GT",
                    "U023V63MF6V",
                    "UJBAJNFLK",
                    "U05UK5T7LPP",
                    "U85HCL7JP"
                ],
                "count": 5
            }
        ]
    }
]