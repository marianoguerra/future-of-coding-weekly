[
    {
        "client_msg_id": "e4a67838-e025-4a8d-87c7-011bfa87cb4c",
        "type": "message",
        "text": "Just curious for all your thoughts, is being ahead of your time a good thing? I\u2019m thinking of a conversation I had with <@U05G67HTNHG> in the Cuttle discord a while back where he mentioned that Cuttle aimed certain details at a status-quo of programming style unlike it\u2019s predecessor Apparatus, I thought that was quite profound. I\u2019m thinking also of Fortran vs Lisp (or perhaps Forth). When is it _not_ worth it to meet people where they are?",
        "user": "U05TJD2V4P2",
        "ts": "1706234920.563739",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "j0oxb",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Just curious for all your thoughts, is being ahead of your time a good thing? I\u2019m thinking of a conversation I had with "
                            },
                            {
                                "type": "user",
                                "user_id": "U05G67HTNHG"
                            },
                            {
                                "type": "text",
                                "text": " in the Cuttle discord a while back where he mentioned that Cuttle aimed certain details at a status-quo of programming style unlike it\u2019s predecessor Apparatus, I thought that was quite profound. I\u2019m thinking also of Fortran vs Lisp (or perhaps Forth). When is it "
                            },
                            {
                                "type": "text",
                                "text": "not",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " worth it to meet people where they are?"
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1706234920.563739",
        "reply_count": 8,
        "reply_users_count": 4,
        "latest_reply": "1706289092.682969",
        "reply_users": [
            "U03CEGR3HSL",
            "U02U0AS3J49",
            "UJBAJNFLK",
            "U067RCH8NB0"
        ],
        "is_locked": false,
        "subscribed": false,
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UCUSW7WVD"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "2e1ff609-5270-40f8-927b-0c0f4b423498",
        "type": "message",
        "text": "Being too far ahead of your time may not be very good for you personally, but your example can end up being helpful to those who come after you.",
        "user": "U03CEGR3HSL",
        "ts": "1706235076.560429",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "yqEUh",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Being too far ahead of your time may not be very good for you personally, but your example can end up being helpful to those who come after you."
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1706234920.563739",
        "parent_user_id": "U05TJD2V4P2"
    },
    {
        "client_msg_id": "3f8a1585-8029-404c-b853-51f8638b736c",
        "type": "message",
        "text": "Meeting people where they are, and being ahead of your time, are orthogonal, I think. The more ahead of your time you are, the more necessary it is to meet people where they are. Something that is very different is not therefore necessarily alienating, or difficult. It can be different precisely because of how much easier it is. But if something very different is also very difficult, it will have far less influence than it might have otherwise. Always meet your users where they are, whether you want to make evolutionary or revolutionary change. And if you can't, get different users, or make different changes.",
        "user": "U02U0AS3J49",
        "ts": "1706239858.426489",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "vBpMI",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Meeting people where they are, and being ahead of your time, are orthogonal, I think. The more ahead of your time you are, the more necessary it is to meet people where they are. Something that is very different is not therefore necessarily alienating, or difficult. It can be different precisely because of how much easier it is. But if something very different is also very difficult, it will have far less influence than it might have otherwise. Always meet your users where they are, whether you want to make evolutionary or revolutionary change. And if you can't, get different users, or make different changes."
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1706234920.563739",
        "parent_user_id": "U05TJD2V4P2",
        "reactions": [
            {
                "name": "thinking_face",
                "users": [
                    "UC2A2ARPT",
                    "UJBAJNFLK"
                ],
                "count": 2
            },
            {
                "name": "heart",
                "users": [
                    "UCUSW7WVD",
                    "U05TJD2V4P2"
                ],
                "count": 2
            }
        ]
    },
    {
        "client_msg_id": "6d996115-d7d2-4329-bfd0-0182d608c503",
        "type": "message",
        "text": "First question: what does \"a good thing\" mean? Good for the author? For the field? For society? Short-term or long-term?",
        "user": "UJBAJNFLK",
        "ts": "1706265317.323949",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "aCy3K",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "First question: what does \"a good thing\" mean? Good for the author? For the field? For society? Short-term or long-term?"
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1706234920.563739",
        "parent_user_id": "U05TJD2V4P2"
    },
    {
        "client_msg_id": "6b2c7875-a820-4953-8634-d07dd13030ea",
        "type": "message",
        "text": "Relevant: <https://steveklabnik.com/writing/the-language-strangeness-budget>",
        "user": "U067RCH8NB0",
        "ts": "1706288718.921019",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "tAmC7",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Relevant: "
                            },
                            {
                                "type": "link",
                                "url": "https://steveklabnik.com/writing/the-language-strangeness-budget"
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1706234920.563739",
        "parent_user_id": "U05TJD2V4P2"
    },
    {
        "client_msg_id": "d1986786-abb5-4a66-a7c8-94affbcb45bd",
        "type": "message",
        "text": "Sometimes it makes sense to invest in something you know is very unlikely to be mainstream, because you\u2019re trying to push frontiers; sometimes you\u2019re specifically trying to take previously frontier ideas _into_ the mainstream, and those have very different tradeoffs.",
        "user": "U067RCH8NB0",
        "ts": "1706288764.714219",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "2w3wi",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Sometimes it makes sense to invest in something you know is very unlikely to be mainstream, because you\u2019re trying to push frontiers; sometimes you\u2019re specifically trying to take previously frontier ideas "
                            },
                            {
                                "type": "text",
                                "text": "into",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " the mainstream, and those have very different tradeoffs."
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1706234920.563739",
        "parent_user_id": "U05TJD2V4P2",
        "reactions": [
            {
                "name": "heavy_plus_sign",
                "users": [
                    "UJBAJNFLK"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "ea610006-13c6-406e-86fc-a117da428194",
        "type": "message",
        "text": "A good example here is the difference between Rust and the research languages it drew on. Rust itself (the example used to make a related point in the post I linked above) needed to be pretty mainstream in many of its surface syntax choices, even if the language designers might have preferred other syntaxes, because it was bringing along _so_ much novelty in terms of type system, how it was asking people to think about systems programming and memory safety, etc.",
        "user": "U067RCH8NB0",
        "ts": "1706288906.644099",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "GGnED",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "A good example here is the difference between Rust and the research languages it drew on. Rust itself (the example used to make a related point in the post I linked above) needed to be pretty mainstream in many of its surface syntax choices, even if the language designers might have preferred other syntaxes, because it was bringing along "
                            },
                            {
                                "type": "text",
                                "text": "so",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " much novelty in terms of type system, how it was asking people to think about systems programming and memory safety, etc."
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1706234920.563739",
        "parent_user_id": "U05TJD2V4P2",
        "reactions": [
            {
                "name": "clap",
                "users": [
                    "U05TJD2V4P2"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "70f467b9-a579-4610-9ef4-a69488637b25",
        "type": "message",
        "text": "Similarly, TypeScript\u2019s success is very much a function of being a _very_ small syntactical superset of JS, and being purely a way to express statically what (a[n ever-growing] subset of) the dynamic behavior of JS code is. Other compile-to-JS languages have had much less adoption, and TS has significantly changed the baseline for what kinds of type system constructs \u201cmainstream\u201d developers consider reasonable/normal as a result.",
        "user": "U067RCH8NB0",
        "ts": "1706289010.160379",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "pr7TJ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Similarly, TypeScript\u2019s success is very much a function of being a "
                            },
                            {
                                "type": "text",
                                "text": "very",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " small syntactical superset of JS, and being purely a way to express statically what (a[n ever-growing] subset of) the dynamic behavior of JS code is. Other compile-to-JS languages have had much less adoption, and TS has significantly changed the baseline for what kinds of type system constructs \u201cmainstream\u201d developers consider reasonable/normal as a result."
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1706234920.563739",
        "parent_user_id": "U05TJD2V4P2"
    },
    {
        "client_msg_id": "055ba9d8-0c14-47e9-a605-214a544f3c49",
        "type": "message",
        "text": "But on the other hand, even still in relatively mainstream programming (by comparison to a lot of the stuff we chat about in here), Elm has had comparatively minimal adoption, but has _profoundly_ influenced the design of many other compilers and languages, by staking out a position and design ethos which have in turn shown that (for example) the baseline we were all used to and accepting of from compilers was not actually a _necessary_ baseline, and that it could be much better.",
        "user": "U067RCH8NB0",
        "ts": "1706289092.682969",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "VCD5D",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "But on the other hand, even still in relatively mainstream programming (by comparison to a lot of the stuff we chat about in here), Elm has had comparatively minimal adoption, but has "
                            },
                            {
                                "type": "text",
                                "text": "profoundly",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " influenced the design of many other compilers and languages, by staking out a position and design ethos which have in turn shown that (for example) the baseline we were all used to and accepting of from compilers was not actually a "
                            },
                            {
                                "type": "text",
                                "text": "necessary",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " baseline, and that it could be much better."
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1706234920.563739",
        "parent_user_id": "U05TJD2V4P2"
    }
]