[
    {
        "client_msg_id": "A3680814-76DC-4A6D-A0B8-0225B7E30FF7",
        "type": "message",
        "text": "I enjoyed this article on <http://wingolog.org/archives/2024/01/08/missing-the-point-of-webassembly|Missing the Point of WebAssembly>. Count me as one of the people previously \"missing the point\" by this definition. I now feel less inclined to explore wasm in my web dev work, and more inclined to explore it in my VPL work.",
        "user": "UC2A2ARPT",
        "ts": "1704868531.173939",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "h5xuG",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I enjoyed this article on "
                            },
                            {
                                "type": "link",
                                "url": "http://wingolog.org/archives/2024/01/08/missing-the-point-of-webassembly",
                                "text": "Missing the Point of WebAssembly"
                            },
                            {
                                "type": "text",
                                "text": ". Count me as one of the people previously \"missing the point\" by this definition. I now feel less inclined to explore wasm in my web dev work, and more inclined to explore it in my VPL work."
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UC2A2ARPT",
            "ts": "1704868550.000000"
        },
        "thread_ts": "1704868531.173939",
        "reply_count": 7,
        "reply_users_count": 6,
        "latest_reply": "1705123942.624049",
        "reply_users": [
            "UJBAJNFLK",
            "UFEQUBNNT",
            "UF71PR58X",
            "U8A5MS6R1",
            "U0245E9RB2B",
            "UC2A2ARPT"
        ],
        "is_locked": false,
        "subscribed": false,
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UCUSW7WVD",
                    "UJBAJNFLK",
                    "U06131CATV3",
                    "U023V63MF6V",
                    "U0123H7JRDM"
                ],
                "count": 5
            }
        ]
    },
    {
        "client_msg_id": "6b8f8400-1ae5-4cbe-9693-480db4fefcee",
        "type": "message",
        "text": "The article reminded me of the nice concept of <https://www.oilshell.org/cross-ref.html?tag=narrow-waist#narrow-waist|narrow waists>, which is exactly what WebAssembly is according to the author. My impression is that this is more a promise than a reality at the moment, but... wait and see.",
        "user": "UJBAJNFLK",
        "ts": "1704872047.054339",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "SlvX2",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The article reminded me of the nice concept of "
                            },
                            {
                                "type": "link",
                                "url": "https://www.oilshell.org/cross-ref.html?tag=narrow-waist#narrow-waist",
                                "text": "narrow waists"
                            },
                            {
                                "type": "text",
                                "text": ", which is exactly what WebAssembly is according to the author. My impression is that this is more a promise than a reality at the moment, but... wait and see."
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1704868531.173939",
        "parent_user_id": "UC2A2ARPT"
    },
    {
        "client_msg_id": "7168D640-D594-478B-9975-754D50CCA0D5",
        "type": "message",
        "text": "That\u2019s been my dream! It\u2019s just too large to learn from scratch, and when I found a half dozen embeddable VMs, I couldn\u2019t get any of them to work. :man-facepalming::skin-tone-4: ",
        "user": "UFEQUBNNT",
        "ts": "1704893251.329449",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "c+SpO",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "That\u2019s been my dream! It\u2019s just too large to learn from scratch, and when I found a half dozen embeddable VMs, I couldn\u2019t get any of them to work. "
                            },
                            {
                                "type": "emoji",
                                "name": "man-facepalming",
                                "unicode": "1f926-1f3fd-200d-2642-fe0f",
                                "skin_tone": 4
                            },
                            {
                                "type": "text",
                                "text": " "
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1704868531.173939",
        "parent_user_id": "UC2A2ARPT"
    },
    {
        "client_msg_id": "93686bc9-6cb5-419b-9d74-c183f18016f4",
        "type": "message",
        "text": "I think the author is over emphasizing web assembly's novelty though ... if you take the para starting \"But WebAssembly is a new point in this space ...\" and substituted LLVM/JVM/CLR/... you'd end up with an equally reasonable result.",
        "user": "UF71PR58X",
        "ts": "1704901993.997849",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "zSl9H",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I think the author is over emphasizing web assembly's novelty though ... if you take the para starting \"But WebAssembly is a new point in this space ...\" and substituted LLVM/JVM/CLR/... you'd end up with an equally reasonable result."
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1704868531.173939",
        "parent_user_id": "UC2A2ARPT"
    },
    {
        "client_msg_id": "dd94a616-bc97-4fb5-bbe4-383be89dc236",
        "type": "message",
        "text": "I do see WebAssembly as a modern version of the idea behind JVM and CLR (less so LLVM, which was always marketed as a toolkit for compiler backends). What's new then in WebAssembly is (1) lower-level code, less oriented towards a specific programming paradigm (OO for JVM)) and (2) better adaptation to different environments (browser etc.) and security (sandboxing).",
        "user": "UJBAJNFLK",
        "ts": "1704961764.853979",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "7S3P6",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I do see WebAssembly as a modern version of the idea behind JVM and CLR (less so LLVM, which was always marketed as a toolkit for compiler backends). What's new then in WebAssembly is (1) lower-level code, less oriented towards a specific programming paradigm (OO for JVM)) and (2) better adaptation to different environments (browser etc.) and security (sandboxing)."
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1704868531.173939",
        "parent_user_id": "UC2A2ARPT",
        "reactions": [
            {
                "name": "heavy_plus_sign",
                "users": [
                    "UFEQUBNNT"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "b50d1741-7929-4d8b-a28b-5c43d8b248e7",
        "type": "message",
        "text": "I enjoyed this article as well. Interestingly <https://newspeaklanguage.org/|Newspeak> uses wasm as the implementation platform. The narrow waist concept is apt I feel. It still seems not fundamentally new, being ABI-like IIUC and essentially still a single node local environment. Still, it seems to raise the bar for the ABI-like abstractions.",
        "user": "U8A5MS6R1",
        "ts": "1705019146.339979",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "E3D6w",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I enjoyed this article as well. Interestingly "
                            },
                            {
                                "type": "link",
                                "url": "https://newspeaklanguage.org/",
                                "text": "Newspeak"
                            },
                            {
                                "type": "text",
                                "text": " uses wasm as the implementation platform. The narrow waist concept is apt I feel. It still seems not fundamentally new, being ABI-like IIUC and essentially still a single node local environment. Still, it seems to raise the bar for the ABI-like abstractions."
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1704868531.173939",
        "parent_user_id": "UC2A2ARPT"
    },
    {
        "client_msg_id": "883942a0-6da9-4f5a-86a9-cc3b174d0f8a",
        "type": "message",
        "text": "Can someone clarify the idea that boundaries facilitate composition? That seems to be very important to the argument, but I'm not quite grasping how.",
        "user": "U0245E9RB2B",
        "ts": "1705115846.945659",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "eFTo7",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Can someone clarify the idea that boundaries facilitate composition? That seems to be very important to the argument, but I'm not quite grasping how."
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1704868531.173939",
        "parent_user_id": "UC2A2ARPT"
    },
    {
        "client_msg_id": "1bbe0278-e950-4e3b-b017-5edbf854b01c",
        "type": "message",
        "text": "A 1\u00a2 example would be, like, any API (or any interface). It defines the ways in which you may compose the code you're writing with the code on the other side of the interface.",
        "user": "UC2A2ARPT",
        "ts": "1705123942.624049",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "zW8An",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "A 1\u00a2 example would be, like, any API (or any interface). It defines the ways in which you may compose the code you're writing with the code on the other side of the interface."
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1704868531.173939",
        "parent_user_id": "UC2A2ARPT"
    }
]