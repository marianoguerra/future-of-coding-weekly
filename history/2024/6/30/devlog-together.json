[
    {
        "user": "U0123H7JRDM",
        "type": "message",
        "ts": "1719744948.622149",
        "client_msg_id": "3c737cc4-4fc5-475e-b848-7db0513b4cc7",
        "text": "In this video <https://youtu.be/LayMwCIQAnM> you can see the progress I made on opening up codeflowcanvas so that it is embeddable in other frameworks/libraries like Astro/Angular and React. I've restructured some of the packages that the project uses and published these to NPM. You can see the embedding of codeflowcanvas on its own website using a custom StorageProvider for loading json files from a javascript bundle: <https://www.codeflowcanvas.io/devlog/embedded-codeflowcanvas/> .\n\nThis goal of this restructuring is to get codeflowcanvas out of its own silo on various way (for example in the future I want to be able to design flows in a vscode editor and use these together with other framework/libraries without embedding the editor and just run the flows).\n\nA feature that is also made possible by the above is being able to export to external formats like tldraw and the OpenCanvas work-in-progress spec (see <https://www.canvasprotocol.org/>). Different strategies can be implemented to provide different formats.",
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "from_url": "https://youtu.be/LayMwCIQAnM",
                "service_icon": "https://a.slack-edge.com/80588/img/unfurl_icons/youtube.png",
                "thumb_url": "https://i.ytimg.com/vi/LayMwCIQAnM/hqdefault.jpg",
                "thumb_width": 480,
                "thumb_height": 360,
                "video_html": "<iframe width=\"400\" height=\"225\" src=\"https://www.youtube.com/embed/LayMwCIQAnM?feature=oembed&autoplay=1&iv_load_policy=3\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" referrerpolicy=\"strict-origin-when-cross-origin\" allowfullscreen title=\"Embedding codeflowcanvas and exporting to different formats\"></iframe>",
                "video_html_width": 400,
                "video_html_height": 225,
                "id": 1,
                "original_url": "https://youtu.be/LayMwCIQAnM",
                "fallback": "YouTube Video: Embedding codeflowcanvas and exporting to different formats",
                "title": "Embedding codeflowcanvas and exporting to different formats",
                "title_link": "https://youtu.be/LayMwCIQAnM",
                "author_name": "Maikel van de Lisdonk",
                "author_link": "https://www.youtube.com/@maikelvandelisdonk7024",
                "service_name": "YouTube",
                "service_url": "https://www.youtube.com/"
            },
            {
                "from_url": "https://www.canvasprotocol.org/",
                "service_icon": "https://www.canvasprotocol.org/favicon.ico",
                "id": 2,
                "original_url": "https://www.canvasprotocol.org/",
                "fallback": "Open Canvas Working Group | OCWG",
                "text": "Working group for establishing interoperability between different infinite canvas tools.",
                "title": "Open Canvas Working Group | OCWG",
                "title_link": "https://www.canvasprotocol.org/",
                "service_name": "canvasprotocol.org"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ciJFo",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "In this video "
                            },
                            {
                                "type": "link",
                                "url": "https://youtu.be/LayMwCIQAnM"
                            },
                            {
                                "type": "text",
                                "text": " you can see the progress I made on opening up codeflowcanvas so that it is embeddable in other frameworks/libraries like Astro/Angular and React. I've restructured some of the packages that the project uses and published these to NPM. You can see the embedding of codeflowcanvas on its own website using a custom StorageProvider for loading json files from a javascript bundle: "
                            },
                            {
                                "type": "link",
                                "url": "https://www.codeflowcanvas.io/devlog/embedded-codeflowcanvas/"
                            },
                            {
                                "type": "text",
                                "text": " .\n\nThis goal of this restructuring is to get codeflowcanvas out of its own silo on various way (for example in the future I want to be able to design flows in a vscode editor and use these together with other framework/libraries without embedding the editor and just run the flows).\n\nA feature that is also made possible by the above is being able to export to external formats like tldraw and the OpenCanvas work-in-progress spec (see "
                            },
                            {
                                "type": "link",
                                "url": "https://www.canvasprotocol.org/"
                            },
                            {
                                "type": "text",
                                "text": "). Different strategies can be implemented to provide different formats."
                            }
                        ]
                    }
                ]
            }
        ]
    }
]