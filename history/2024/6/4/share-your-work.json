[
    {
        "user": "U71PMQ1V0",
        "type": "message",
        "ts": "1717464091.870579",
        "client_msg_id": "5fcc9212-ea2c-4c32-94c9-9738b5e845b1",
        "text": "Still just ruminating in public, but I swear there is an actual compiler taking shape - <https://www.scattered-thoughts.net/writing/ruminating-about-mutable-value-semantics>",
        "team": "T5TCAFTA9",
        "thread_ts": "1717464091.870579",
        "reply_count": 1,
        "reply_users_count": 1,
        "latest_reply": "1717570582.762599",
        "reply_users": [
            "U02E4DAQGSZ"
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "wmcnn",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Still just ruminating in public, but I swear there is an actual compiler taking shape - "
                            },
                            {
                                "type": "link",
                                "url": "https://www.scattered-thoughts.net/writing/ruminating-about-mutable-value-semantics"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U075U25QC00",
        "type": "message",
        "ts": "1717529778.819729",
        "client_msg_id": "98f5705a-01a4-4c0b-b01a-836547f36c91",
        "text": "I <https://everythingisagile.substack.com/p/what-is-agile?r=3yfd1i&amp;utm_campaign=post&amp;utm_medium=web&amp;triedRedirect=true|wrote a post> about leveraging the raw core of agile to help focus attention and make cool shit. I plan to dig deeper and discuss more tools in future writing, but I would love any feedback!",
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "from_url": "https://everythingisagile.substack.com/p/what-is-agile?r=3yfd1i&utm_campaign=post&utm_medium=web&triedRedirect=true",
                "image_url": "https://substackcdn.com/image/fetch/w_1200,h_600,c_fill,f_jpg,q_auto:good,fl_progressive:steep,g_auto/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F7889724d-e218-4a5a-8738-45e81dfb8afa_2312x1744.jpeg",
                "image_width": 1200,
                "image_height": 600,
                "image_bytes": 94558,
                "service_icon": "https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F1598ba77-41ad-4726-b7ab-7916bd4e994d%2Fapple-touch-icon-57x57.png",
                "id": 1,
                "original_url": "https://everythingisagile.substack.com/p/what-is-agile?r=3yfd1i&amp;utm_campaign=post&amp;utm_medium=web&amp;triedRedirect=true",
                "fallback": "What is agile?",
                "text": "processes and systems shape our lives, let's take control and use them to make shit we love",
                "title": "What is agile?",
                "title_link": "https://everythingisagile.substack.com/p/what-is-agile?r=3yfd1i&utm_campaign=post&utm_medium=web&triedRedirect=true",
                "service_name": "everythingisagile.substack.com"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "4Q3ug",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I "
                            },
                            {
                                "type": "link",
                                "url": "https://everythingisagile.substack.com/p/what-is-agile?r=3yfd1i&utm_campaign=post&utm_medium=web&triedRedirect=true",
                                "text": "wrote a post"
                            },
                            {
                                "type": "text",
                                "text": " about leveraging the raw core of agile to help focus attention and make cool shit. I plan to dig deeper and discuss more tools in future writing, but I would love any feedback!"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U02E4DAQGSZ",
        "type": "message",
        "ts": "1717570582.762599",
        "client_msg_id": "0bc5d3bd-aae7-42f1-99bb-bd6890ffce62",
        "text": "Some random thoughts. If your only representation for data is a byte string, then things work out ok, unless you want first class functions, coz now your function definitions have to be expressed in assembly packed into memory and I guess that would have to be your source code.\n\nEven jsut sticking to classic data like JSON and pointers, the byte representation flattens what is intuitively logically hierarchical.\n\nthe cycle problem you mention is the mismatch between flat memory and a heirarchical logical representation that permits cycles. There is no 1-1 mapping between a DAG and a flat representation, but there are 1-n where the ambiguity is where you break the pointers.\n\nAt work we use pickle and later upgraded to <https://pypi.org/project/dill/|dill> for serializing runtime graphs. For python it seems like a super hard problem given dynamic function definitions and the interpretability but I guess you have closed off some of that if its a compiled language.",
        "team": "T5TCAFTA9",
        "thread_ts": "1717464091.870579",
        "parent_user_id": "U71PMQ1V0",
        "attachments": [
            {
                "image_url": "https://pypi.org/static/images/twitter.abaf4b19.webp",
                "image_width": 300,
                "image_height": 300,
                "image_bytes": 7156,
                "from_url": "https://pypi.org/project/dill/",
                "service_icon": "https://pypi.org/static/images/favicon.35549fe8.ico",
                "id": 1,
                "original_url": "https://pypi.org/project/dill/",
                "fallback": "PyPI: dill",
                "text": "serialize all of Python",
                "title": "dill",
                "title_link": "https://pypi.org/project/dill/",
                "service_name": "PyPI"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "NxnZQ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Some random thoughts. If your only representation for data is a byte string, then things work out ok, unless you want first class functions, coz now your function definitions have to be expressed in assembly packed into memory and I guess that would have to be your source code.\n\nEven jsut sticking to classic data like JSON and pointers, the byte representation flattens what is intuitively logically hierarchical.\n\nthe cycle problem you mention is the mismatch between flat memory and a heirarchical logical representation that permits cycles. There is no 1-1 mapping between a DAG and a flat representation, but there are 1-n where the ambiguity is where you break the pointers.\n\nAt work we use pickle and later upgraded to "
                            },
                            {
                                "type": "link",
                                "url": "https://pypi.org/project/dill/",
                                "text": "dill"
                            },
                            {
                                "type": "text",
                                "text": " for serializing runtime graphs. For python it seems like a super hard problem given dynamic function definitions and the interpretability but I guess you have closed off some of that if its a compiled language."
                            }
                        ]
                    }
                ]
            }
        ]
    }
]