[
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1718804841.784739",
        "edited": {
            "user": "UC2A2ARPT",
            "ts": "1718804875.000000"
        },
        "client_msg_id": "fa7c7350-a242-494e-9785-06e4a0fdbd35",
        "text": "<https://futureofcoding.org/episodes/072|Future of Coding 72 \u2022 Pygmalion by David C. Smith>\n\nIf you're anything like me (oof, sorry), you've heard of <https://worrydream.com/refs/Smith_DC_1975_-_Pygmalion.pdf|Pygmalion> but never caught more than the gist. Some sort of project from the early 70s, similar to Sketchpad or Smalltalk or something, yet another promising prototype from the early history of our field that failed to take the world by storm. Our stock-in-trade on this show.\n\nBut you've probably heard of Programming by Demonstration. And you've certainly heard of _icons_ \u2014 you know, those little pictures that have become indelibly part of computing as we know it. Pygmalion is the originator of these concepts\u2026 and more!\n\nThe best introduction to Pygmalion is <@UBN9AFS0N>'s <https://instadeq.com/blog/posts/no-code-history-pygmalion-1975/|No-code History: Pygmalion>, which includes a clearly articulated summary of the big ideas, motivation, and design, with a video demonstration of the programming interface, key terminology, and links.\n\nThe _most_ introduction to Pygmalion \u2014 or Pig Million, The Millionth Pig, as it'll surely come to be known \u2014 is the subject of today's episode: the original paper by <https://en.wikipedia.org/wiki/David_Canfield_Smith|David Canfield Smith>.",
        "team": "T5TCAFTA9",
        "thread_ts": "1718804841.784739",
        "reply_count": 1,
        "reply_users_count": 1,
        "latest_reply": "1718814076.845099",
        "reply_users": [
            "U02U0AS3J49"
        ],
        "is_locked": false,
        "subscribed": true,
        "last_read": "1718814076.845099",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "wTJuI",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "link",
                                "url": "https://futureofcoding.org/episodes/072",
                                "text": "Future of Coding 72 \u2022 Pygmalion by David C. Smith"
                            },
                            {
                                "type": "text",
                                "text": "\n\nIf you're anything like me (oof, sorry), you've heard of "
                            },
                            {
                                "type": "link",
                                "url": "https://worrydream.com/refs/Smith_DC_1975_-_Pygmalion.pdf",
                                "text": "Pygmalion"
                            },
                            {
                                "type": "text",
                                "text": " but never caught more than the gist. Some sort of project from the early 70s, similar to Sketchpad or Smalltalk or something, yet another promising prototype from the early history of our field that failed to take the world by storm. Our stock-in-trade on this show.\n\nBut you've probably heard of Programming by Demonstration. And you've certainly heard of "
                            },
                            {
                                "type": "text",
                                "text": "icons",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " \u2014 you know, those little pictures that have become indelibly part of computing as we know it. Pygmalion is the originator of these concepts\u2026 and more!\n\nThe best introduction to Pygmalion is "
                            },
                            {
                                "type": "user",
                                "user_id": "UBN9AFS0N"
                            },
                            {
                                "type": "text",
                                "text": "'s "
                            },
                            {
                                "type": "link",
                                "url": "https://instadeq.com/blog/posts/no-code-history-pygmalion-1975/",
                                "text": "No-code History: Pygmalion"
                            },
                            {
                                "type": "text",
                                "text": ", which includes a clearly articulated summary of the big ideas, motivation, and design, with a video demonstration of the programming interface, key terminology, and links.\n\nThe "
                            },
                            {
                                "type": "text",
                                "text": "most",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " introduction to Pygmalion \u2014 or Pig Million, The Millionth Pig, as it'll surely come to be known \u2014 is the subject of today's episode: the original paper by "
                            },
                            {
                                "type": "link",
                                "url": "https://en.wikipedia.org/wiki/David_Canfield_Smith",
                                "text": "David Canfield Smith"
                            },
                            {
                                "type": "text",
                                "text": "."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "cake",
                "users": [
                    "U013ZLJARC7",
                    "UBN9AFS0N",
                    "U85HCL7JP",
                    "U03R0B9U1GD",
                    "U04E5QAD6DD",
                    "U8A5MS6R1",
                    "U0123H7JRDM",
                    "U06BM40PUR2",
                    "UAJ9DV971",
                    "U06LQ54LB1R"
                ],
                "count": 10
            },
            {
                "name": "piggy",
                "users": [
                    "U03R0B9U1GD",
                    "U06BM40PUR2",
                    "U071CLJ3Y2K"
                ],
                "count": 3
            },
            {
                "name": "heart",
                "users": [
                    "UCUSW7WVD",
                    "U06LQ54LB1R"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "U02U0AS3J49",
        "type": "message",
        "ts": "1718814076.845099",
        "client_msg_id": "6d8a4d7e-9a9c-44b1-a6c6-797b43f0137d",
        "text": "I'm realizing that because my work has to do with taking the meaning of written language in laws and converting it into meanings expressed in formal coding languages, that I am basically accidentally drowning in philosophy of language, without having any education in it. So :heavy_plus_sign: to the idea of an episode on philosophy of language. But I'm a niche audience.",
        "team": "T5TCAFTA9",
        "thread_ts": "1718804841.784739",
        "parent_user_id": "UC2A2ARPT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "+jX0j",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I'm realizing that because my work has to do with taking the meaning of written language in laws and converting it into meanings expressed in formal coding languages, that I am basically accidentally drowning in philosophy of language, without having any education in it. So "
                            },
                            {
                                "type": "emoji",
                                "name": "heavy_plus_sign",
                                "unicode": "2795"
                            },
                            {
                                "type": "text",
                                "text": " to the idea of an episode on philosophy of language. But I'm a niche audience."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UC2A2ARPT"
                ],
                "count": 1
            }
        ]
    }
]