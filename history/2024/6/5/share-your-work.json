[
    {
        "user": "UGWUJUZHT",
        "type": "message",
        "ts": "1717592994.562369",
        "client_msg_id": "16cb7fe6-0e80-4c85-b7b0-bf38b50d451c",
        "text": "Just in case someone else finds this useful, here is a small case-study of a relational program written in Prolog, from another conversation. <https://guitarvydas.github.io/2024/06/03/Relational-Programming-Simple-Use-Case.html>",
        "team": "T5TCAFTA9",
        "thread_ts": "1717592994.562369",
        "reply_count": 1,
        "reply_users_count": 1,
        "latest_reply": "1717631380.745619",
        "reply_users": [
            "U05PY5AQCA2"
        ],
        "is_locked": false,
        "subscribed": false,
        "attachments": [
            {
                "from_url": "https://guitarvydas.github.io/2024/06/03/Relational-Programming-Simple-Use-Case.html",
                "ts": 1717372800,
                "id": 1,
                "original_url": "https://guitarvydas.github.io/2024/06/03/Relational-Programming-Simple-Use-Case.html",
                "fallback": "Computing Simplicity: Relational programming simple use Case",
                "text": "Your browser doesn't support PDFs. Download Instead",
                "title": "Relational programming simple use Case",
                "title_link": "https://guitarvydas.github.io/2024/06/03/Relational-Programming-Simple-Use-Case.html",
                "service_name": "Computing Simplicity"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Ih095",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Just in case someone else finds this useful, here is a small case-study of a relational program written in Prolog, from another conversation. "
                            },
                            {
                                "type": "link",
                                "url": "https://guitarvydas.github.io/2024/06/03/Relational-Programming-Simple-Use-Case.html"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U05PY5AQCA2",
        "type": "message",
        "ts": "1717631380.745619",
        "client_msg_id": "421BDC58-0977-4B5C-800D-999463EEBF1B",
        "text": "In case anyone is unaware, Datalog is a restricted form of Prolog for database querying. It\u2019s been seriously, production-ready implemented in one commercial database (Datomic) and one in-progress open source database (CozoDB).\n\nI am convinced that much of the sort of problem we\u2019re concerned with here could be addressed by implementing most of nearly all programs in Datalog.",
        "team": "T5TCAFTA9",
        "thread_ts": "1717592994.562369",
        "parent_user_id": "UGWUJUZHT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "9ajMm",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "In case anyone is unaware, Datalog is a restricted form of Prolog for database querying. It\u2019s been seriously, production-ready implemented in one commercial database (Datomic) and one in-progress open source database (CozoDB).\n\nI am convinced that much of the sort of problem we\u2019re concerned with here could be addressed by implementing most of nearly all programs in Datalog."
                            }
                        ]
                    }
                ]
            }
        ]
    }
]