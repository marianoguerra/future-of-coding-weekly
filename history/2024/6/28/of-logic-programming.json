[
    {
        "user": "U079K6YUFT5",
        "type": "message",
        "ts": "1719554048.721189",
        "client_msg_id": "a83056c2-6906-4551-8394-db82997224af",
        "text": "Depends on the language.",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ycyo0",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Depends on the language."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U079K6YUFT5",
        "type": "message",
        "ts": "1719554124.908839",
        "client_msg_id": "e1477321-6046-4c7b-84e6-09a307d63232",
        "text": "What language are you working with?",
        "team": "T5TCAFTA9",
        "thread_ts": "1719554124.908839",
        "reply_count": 15,
        "reply_users_count": 3,
        "latest_reply": "1719592139.829109",
        "reply_users": [
            "UML4ZEKDK",
            "U02U0AS3J49",
            "U079K6YUFT5"
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "eyXUD",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "What language are you working with?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UML4ZEKDK",
        "type": "message",
        "ts": "1719574927.265509",
        "client_msg_id": "3d58f121-dba9-4a45-8178-22f43db967e5",
        "text": "This community generally uses threads when replying, see the member handbook for more info (<https://futureofcoding.org/member-handbook#how-we-slack>).",
        "team": "T5TCAFTA9",
        "thread_ts": "1719554124.908839",
        "parent_user_id": "U079K6YUFT5",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "1r92q",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "This community generally uses threads when replying, see the member handbook for more info ("
                            },
                            {
                                "type": "link",
                                "url": "https://futureofcoding.org/member-handbook#how-we-slack"
                            },
                            {
                                "type": "text",
                                "text": ")."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U02U0AS3J49",
        "type": "message",
        "ts": "1719584176.340299",
        "client_msg_id": "317f5922-57b1-4400-978f-6ebb07f39a84",
        "text": "I'm not using one. I'm looking for examples to use as inspiration. But I'm familiar with SWIPL, if that's convenient?",
        "team": "T5TCAFTA9",
        "thread_ts": "1719554124.908839",
        "parent_user_id": "U079K6YUFT5",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "5KwL5",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I'm not using one. I'm looking for examples to use as inspiration. But I'm familiar with SWIPL, if that's convenient?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U079K6YUFT5",
        "type": "message",
        "ts": "1719591178.956039",
        "client_msg_id": "d9213f35-1435-4edb-b097-6233a6fd3671",
        "text": "Logic languages come in all shapes and sizes, so it's mostly down to how you format the data you're searching over.",
        "team": "T5TCAFTA9",
        "thread_ts": "1719554124.908839",
        "parent_user_id": "U079K6YUFT5",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "tkaPD",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Logic languages come in all shapes and sizes, so it's mostly down to how you format the data you're searching over."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U079K6YUFT5",
        "type": "message",
        "ts": "1719591228.636059",
        "client_msg_id": "d2136e86-1433-48e1-a73b-617fb8616f09",
        "text": "If you're using a function/term-style format, like `X(Y, Z, W, ...)`, you could introduce variables for the term, and do some variadic-like syntax.",
        "team": "T5TCAFTA9",
        "thread_ts": "1719554124.908839",
        "parent_user_id": "U079K6YUFT5",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ztMaE",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "If you're using a function/term-style format, like "
                            },
                            {
                                "type": "text",
                                "text": "X(Y, Z, W, ...)",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ", you could introduce variables for the term, and do some variadic-like syntax."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U079K6YUFT5",
        "type": "message",
        "ts": "1719591248.269999",
        "client_msg_id": "d9c46673-df02-41c1-ab45-a340bdf48d8e",
        "text": "Something like `X(..., socrates, ...) :- ...`",
        "team": "T5TCAFTA9",
        "thread_ts": "1719554124.908839",
        "parent_user_id": "U079K6YUFT5",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "w7I04",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Something like "
                            },
                            {
                                "type": "text",
                                "text": "X(..., socrates, ...) :- ...",
                                "style": {
                                    "code": true
                                }
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U079K6YUFT5",
        "type": "message",
        "ts": "1719591258.536879",
        "client_msg_id": "5af5b78e-2859-41d5-b3b5-2c2e65fb76d2",
        "text": "That's for term-structured data.",
        "team": "T5TCAFTA9",
        "thread_ts": "1719554124.908839",
        "parent_user_id": "U079K6YUFT5",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "TWSd6",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "That's for term-structured data."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U02U0AS3J49",
        "type": "message",
        "ts": "1719591273.123559",
        "client_msg_id": "7a7df834-fa70-43b6-97ab-234278a58c51",
        "text": "Yeah, that's what I'm looking at.",
        "team": "T5TCAFTA9",
        "thread_ts": "1719554124.908839",
        "parent_user_id": "U079K6YUFT5",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "vplDZ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yeah, that's what I'm looking at."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U02U0AS3J49",
        "type": "message",
        "ts": "1719591334.129179",
        "client_msg_id": "008fb52c-9932-42e3-b136-7b35afca870b",
        "text": "Term-structured. That ellipsis syntax could be built, but isn't?",
        "team": "T5TCAFTA9",
        "thread_ts": "1719554124.908839",
        "parent_user_id": "U079K6YUFT5",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "jpq7k",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Term-structured. That ellipsis syntax could be built, but isn't?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U079K6YUFT5",
        "type": "message",
        "ts": "1719591351.034139",
        "client_msg_id": "cbe8ce47-c49e-42f2-a59a-9b0f7b037545",
        "text": "It could. Depends on how you do resolution.",
        "team": "T5TCAFTA9",
        "thread_ts": "1719554124.908839",
        "parent_user_id": "U079K6YUFT5",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "7WX4x",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "It could. Depends on how you do resolution."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U079K6YUFT5",
        "type": "message",
        "ts": "1719591395.080459",
        "client_msg_id": "64bc93a2-4df0-4c62-b1e9-55fbe6baf8fa",
        "text": "Also depends on the limits you want to impose.",
        "team": "T5TCAFTA9",
        "thread_ts": "1719554124.908839",
        "parent_user_id": "U079K6YUFT5",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "rCYob",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Also depends on the limits you want to impose."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U079K6YUFT5",
        "type": "message",
        "ts": "1719591409.572729",
        "client_msg_id": "3e177a7b-2eef-4d94-8cba-d4e324341bf0",
        "text": "`X(..., socrates, ..., plato, ...)`",
        "team": "T5TCAFTA9",
        "thread_ts": "1719554124.908839",
        "parent_user_id": "U079K6YUFT5",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "yq2nu",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "X(..., socrates, ..., plato, ...)",
                                "style": {
                                    "code": true
                                }
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U079K6YUFT5",
        "type": "message",
        "ts": "1719591421.400059",
        "client_msg_id": "8cb72a73-b816-43c5-9654-d8cf15acb80a",
        "text": "And how deep you want to nest these terms.",
        "team": "T5TCAFTA9",
        "thread_ts": "1719554124.908839",
        "parent_user_id": "U079K6YUFT5",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "A0vYG",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "And how deep you want to nest these terms."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U02U0AS3J49",
        "type": "message",
        "ts": "1719591540.453869",
        "client_msg_id": "d337674a-fc50-409b-8be5-90dd1b65e9ac",
        "text": "Arbitrary depth. I'm not really looking for ideas, I'm looking for examples of where it has been implemented already, if anywhere. Just because I need an LLM to be able to reliably use it, so it will help a lot if it's in the training data already.",
        "team": "T5TCAFTA9",
        "thread_ts": "1719554124.908839",
        "parent_user_id": "U079K6YUFT5",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "3Oatw",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Arbitrary depth. I'm not really looking for ideas, I'm looking for examples of where it has been implemented already, if anywhere. Just because I need an LLM to be able to reliably use it, so it will help a lot if it's in the training data already."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U02U0AS3J49",
        "type": "message",
        "ts": "1719591750.882439",
        "client_msg_id": "e50989de-4f8d-4975-bc5a-6784c866d552",
        "text": "I sort of feel like it's not likely to exist as semantic sugar anywhere, because it would be semantic sugar for a really inefficient sort of search. And most Prologs are usually being used for programming, not KR. Just hoping against hope.",
        "team": "T5TCAFTA9",
        "thread_ts": "1719554124.908839",
        "parent_user_id": "U079K6YUFT5",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "hzyvu",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I sort of feel like it's not likely to exist as semantic sugar anywhere, because it would be semantic sugar for a really inefficient sort of search. And most Prologs are usually being used for programming, not KR. Just hoping against hope."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U02U0AS3J49",
        "type": "message",
        "ts": "1719592139.829109",
        "client_msg_id": "b5c967cb-e3a1-4256-aa9f-d5e7b7f4a4d6",
        "text": "I wonder if in ErgoAI you would do something like this... _`?x[?y-&gt;term];term[?x-&gt;?y];?x[term-&gt;?y].`_",
        "team": "T5TCAFTA9",
        "thread_ts": "1719554124.908839",
        "parent_user_id": "U079K6YUFT5",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "4HFyR",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I wonder if in ErgoAI you would do something like this... "
                            },
                            {
                                "type": "text",
                                "text": "?x[?y->term];term[?x->?y];?x[term->?y].",
                                "style": {
                                    "italic": true,
                                    "code": true
                                }
                            }
                        ]
                    }
                ]
            }
        ]
    }
]