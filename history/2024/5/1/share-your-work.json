[
    {
        "text": "For the last month I've been working on an arrow toolkit for the web, called Quiver :bow_and_arrow:. It's exploring 3 problems:\n\n\u2022 What if visual connection could be declaratively expressed in HTML? \n\u2022 What if there was a tiny toolkit that enabled all kinds of connection/arrows to be built? \n\u2022 How do we break arrows out from spatial canvases and enable them to used on any website?\nCurrently I'm prototyping some pre-built arrows/connection: curved arrows, orthogonal edges, Xanadu links and hyperedges. But the library is also explicitly designed to be extensible so you can use your own layout algorithms or designs. Part of the extensibility means the ability to easily animate objects along the arrow (for all of those dataflow VPLs out there :stuck_out_tongue_winking_eye:) or add arbitrary labels/annotations to arrows.\n\nGiven that connection is probably one of the most commonly used relationships in visual programming systems, I'm curious if there are any other types of arrows or functionality you would find useful in your own projects? Its not published to NPM yet, but the repo is <https://github.com/Little-Languages/quiver|here>.",
        "files": [
            {
                "id": "F0718E6CQJ2",
                "created": 1714520094,
                "timestamp": 1714520094,
                "name": "quiver.gif",
                "title": "quiver.gif",
                "mimetype": "image/gif",
                "filetype": "gif",
                "pretty_type": "GIF",
                "user": "U0378MDUG1Y",
                "user_team": "T5TCAFTA9",
                "editable": false,
                "size": 2362508,
                "mode": "hosted",
                "is_external": false,
                "external_type": "",
                "is_public": true,
                "public_url_shared": false,
                "display_as_bot": false,
                "username": "",
                "url_private": "https://files.slack.com/files-pri/T5TCAFTA9-F0718E6CQJ2/quiver.gif",
                "url_private_download": "https://files.slack.com/files-pri/T5TCAFTA9-F0718E6CQJ2/download/quiver.gif",
                "media_display_type": "unknown",
                "thumb_64": "https://files.slack.com/files-tmb/T5TCAFTA9-F0718E6CQJ2-71640ab21c/quiver_64.png",
                "thumb_80": "https://files.slack.com/files-tmb/T5TCAFTA9-F0718E6CQJ2-71640ab21c/quiver_80.png",
                "thumb_360": "https://files.slack.com/files-tmb/T5TCAFTA9-F0718E6CQJ2-71640ab21c/quiver_360.png",
                "thumb_360_w": 360,
                "thumb_360_h": 188,
                "thumb_480": "https://files.slack.com/files-tmb/T5TCAFTA9-F0718E6CQJ2-71640ab21c/quiver_480.png",
                "thumb_480_w": 480,
                "thumb_480_h": 251,
                "thumb_160": "https://files.slack.com/files-tmb/T5TCAFTA9-F0718E6CQJ2-71640ab21c/quiver_160.png",
                "thumb_360_gif": "https://files.slack.com/files-tmb/T5TCAFTA9-F0718E6CQJ2-71640ab21c/quiver_360.gif",
                "thumb_480_gif": "https://files.slack.com/files-tmb/T5TCAFTA9-F0718E6CQJ2-71640ab21c/quiver_480.gif",
                "original_w": 600,
                "original_h": 314,
                "deanimate": "https://files.slack.com/files-tmb/T5TCAFTA9-F0718E6CQJ2-71640ab21c/quiver_deanimate.png",
                "deanimate_gif": "https://files.slack.com/files-tmb/T5TCAFTA9-F0718E6CQJ2-71640ab21c/quiver_deanimate_gif.png",
                "thumb_tiny": "AwAZADDSFVtQP+iH6irNVtR/49D9RQBlEntSfN60ZNG40AHzUHcKNxpM0AdDVXUf+PQ/UVaqrqP/AB6H6igDIooooAKKKKAP/9k=",
                "permalink": "https://futureofcoding.slack.com/files/U0378MDUG1Y/F0718E6CQJ2/quiver.gif",
                "permalink_public": "https://slack-files.com/T5TCAFTA9-F0718E6CQJ2-ba4e332501",
                "is_starred": false,
                "has_rich_preview": false,
                "file_access": "visible"
            },
            {
                "id": "F0710H1P9RD",
                "created": 1714520643,
                "timestamp": 1714520643,
                "name": "Screen Recording 2024-04-30 at 4.43.32\u202fPM.mov",
                "title": "Screen Recording 2024-04-30 at 4.43.32\u202fPM.mov",
                "mimetype": "video/quicktime",
                "filetype": "mov",
                "pretty_type": "QuickTime Movie",
                "user": "U0378MDUG1Y",
                "user_team": "T5TCAFTA9",
                "editable": false,
                "size": 377544,
                "mode": "hosted",
                "is_external": false,
                "external_type": "",
                "is_public": true,
                "public_url_shared": false,
                "display_as_bot": false,
                "username": "",
                "transcription": {
                    "status": "none"
                },
                "mp4": "https://files.slack.com/files-tmb/T5TCAFTA9-F0710H1P9RD-45e4b9d651/screen_recording_2024-04-30_at_4.43.32___pm.mp4",
                "url_private": "https://files.slack.com/files-tmb/T5TCAFTA9-F0710H1P9RD-45e4b9d651/screen_recording_2024-04-30_at_4.43.32___pm.mp4",
                "url_private_download": "https://files.slack.com/files-pri/T5TCAFTA9-F0710H1P9RD/download/screen_recording_2024-04-30_at_4.43.32___pm.mov",
                "hls": "https://files.slack.com/files-tmb/T5TCAFTA9-F0710H1P9RD-45e4b9d651/file.m3u8?_xcb=25a71",
                "hls_embed": "data:application/vnd.apple.mpegurl;base64,I0VYVE0zVQojRVhULVgtVkVSU0lPTjozCiNFWFQtWC1JTkRFUEVOREVOVC1TRUdNRU5UUwojRVhULVgtU1RSRUFNLUlORjpCQU5EV0lEVEg9MzcwMzY1LEFWRVJBR0UtQkFORFdJRFRIPTM3MDM2NSxDT0RFQ1M9ImF2YzEuNjQwMDFmLG1wNGEuNDAuNSIsUkVTT0xVVElPTj0xMTQ2eDcyMCxGUkFNRS1SQVRFPTI5Ljk3MApkYXRhOmFwcGxpY2F0aW9uL3ZuZC5hcHBsZS5tcGVndXJsO2Jhc2U2NCxJMFZZVkUwelZRb2pSVmhVTFZndFZrVlNVMGxQVGpvekNpTkZXRlF0V0MxVVFWSkhSVlJFVlZKQlZFbFBUam8zQ2lORldGUXRXQzFOUlVSSlFTMVRSVkZWUlU1RFJUb3hDaU5GV0ZRdFdDMVFURUZaVEVsVFZDMVVXVkJGT2xaUFJBb2pSVmhVU1U1R09qWXVNREEyTEFwb2RIUndjem92TDJacGJHVnpMbk5zWVdOckxtTnZiUzltYVd4bGN5MTBiV0l2VkRWVVEwRkdWRUU1TFVZd056RXdTREZRT1ZKRUxUUTFaVFJpT1dRMk5URXZabWxzWlY5SVh6STJORjh4TWpnd2VEY3lNRjh6TlRBd1MwSlFVMTgzVVZaQ1VsOHdNREF3TVM1MGN3b2pSVmhVU1U1R09qRXVPVEF5TEFwb2RIUndjem92TDJacGJHVnpMbk5zWVdOckxtTnZiUzltYVd4bGN5MTBiV0l2VkRWVVEwRkdWRUU1TFVZd056RXdTREZRT1ZKRUxUUTFaVFJpT1dRMk5URXZabWxzWlY5SVh6STJORjh4TWpnd2VEY3lNRjh6TlRBd1MwSlFVMTgzVVZaQ1VsOHdNREF3TWk1MGN3b2pSVmhVTFZndFJVNUVURWxUVkFvPQo=",
                "mp4_low": "https://files.slack.com/files-tmb/T5TCAFTA9-F0710H1P9RD-45e4b9d651/screen_recording_2024-04-30_at_4.43.32___pm_trans.mp4",
                "duration_ms": 7907,
                "media_display_type": "video",
                "thumb_video": "https://files.slack.com/files-tmb/T5TCAFTA9-F0710H1P9RD-45e4b9d651/screen_recording_2024-04-30_at_4.43.32___pm_thumb_video.jpeg",
                "thumb_video_w": 646,
                "thumb_video_h": 406,
                "permalink": "https://futureofcoding.slack.com/files/U0378MDUG1Y/F0710H1P9RD/screen_recording_2024-04-30_at_4.43.32___pm.mov",
                "permalink_public": "https://slack-files.com/T5TCAFTA9-F0710H1P9RD-0d63263c3a",
                "is_starred": false,
                "has_rich_preview": false,
                "file_access": "visible"
            }
        ],
        "upload": false,
        "user": "U0378MDUG1Y",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "07f2G",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "For the last month I've been working on an arrow toolkit for the web, called Quiver "
                            },
                            {
                                "type": "emoji",
                                "name": "bow_and_arrow",
                                "unicode": "1f3f9"
                            },
                            {
                                "type": "text",
                                "text": ". It's exploring 3 problems:\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "What if visual connection could be declaratively expressed in HTML? "
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "What if there was a tiny toolkit that enabled all kinds of connection/arrows to be built? "
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "How do we break arrows out from spatial canvases and enable them to used on any website?"
                                    }
                                ]
                            }
                        ],
                        "style": "bullet",
                        "indent": 0,
                        "border": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nCurrently I'm prototyping some pre-built arrows/connection: curved arrows, orthogonal edges, Xanadu links and hyperedges. But the library is also explicitly designed to be extensible so you can use your own layout algorithms or designs. Part of the extensibility means the ability to easily animate objects along the arrow (for all of those dataflow VPLs out there "
                            },
                            {
                                "type": "emoji",
                                "name": "stuck_out_tongue_winking_eye",
                                "unicode": "1f61c"
                            },
                            {
                                "type": "text",
                                "text": ") or add arbitrary labels/annotations to arrows.\n\nGiven that connection is probably one of the most commonly used relationships in visual programming systems, I'm curious if there are any other types of arrows or functionality you would find useful in your own projects? Its not published to NPM yet, but the repo is "
                            },
                            {
                                "type": "link",
                                "url": "https://github.com/Little-Languages/quiver",
                                "text": "here"
                            },
                            {
                                "type": "text",
                                "text": "."
                            }
                        ]
                    }
                ]
            }
        ],
        "type": "message",
        "ts": "1714522401.546399",
        "edited": {
            "user": "U0378MDUG1Y",
            "ts": "1714523113.000000"
        },
        "client_msg_id": "63c44caf-624d-44eb-878a-58d4bef78c7b",
        "thread_ts": "1714522401.546399",
        "reply_count": 16,
        "reply_users_count": 4,
        "latest_reply": "1714797090.876879",
        "reply_users": [
            "U0378MDUG1Y",
            "U0123H7JRDM",
            "UGWUJUZHT",
            "UFEQUBNNT"
        ],
        "is_locked": false,
        "subscribed": false,
        "reactions": [
            {
                "name": "cake",
                "users": [
                    "U05597GCDDK",
                    "U06BUK2M2RH",
                    "U05M5A8E0NT",
                    "U023V63MF6V",
                    "U85HCL7JP",
                    "US370TRJA",
                    "U013ZLJARC7",
                    "UMV4B97GT",
                    "UFQ1ZEJ0G"
                ],
                "count": 9
            },
            {
                "name": "heart",
                "users": [
                    "UCUSW7WVD",
                    "U0123H7JRDM",
                    "U06BUK2M2RH",
                    "UFEQUBNNT"
                ],
                "count": 4
            }
        ]
    },
    {
        "user": "U0378MDUG1Y",
        "type": "message",
        "ts": "1714526933.460569",
        "edited": {
            "user": "U0378MDUG1Y",
            "ts": "1714542041.000000"
        },
        "client_msg_id": "3FCE9734-655E-43B6-9C1D-56DA72B92D0D",
        "text": "One of the deeper explorations is how to use these boundaries to orchestrate a bundle of arrows to reduce crossing other arrows or shapes, arrows that route with even spacing, etc. its interesting given all the arrows and their state in in the DOM",
        "team": "T5TCAFTA9",
        "thread_ts": "1714522401.546399",
        "parent_user_id": "U0378MDUG1Y",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "+bOvP",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "One of the deeper explorations is how to use these boundaries to orchestrate a bundle of arrows to reduce crossing other arrows or shapes, arrows that route with even spacing, etc. its interesting given all the arrows and their state in in the DOM"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "bulb",
                "users": [
                    "UCUSW7WVD"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U0123H7JRDM",
        "type": "message",
        "ts": "1714543280.040649",
        "client_msg_id": "45E22F42-2459-4E25-AF20-CED4DE3C5B1A",
        "text": "Really awesome! A nice addition would be data-ports on the boxes and cubic bezier curves between these ports instead of arcs. A hack to make line-crossings more clearly would be drawing double lines.. where one of the two lines would be slightly thicker and have the same color as the background (I use that trick myself).\n\nVery nice to see the use of web-components! I believe that we finally will see a bigger use of these once react-19 is released.",
        "team": "T5TCAFTA9",
        "thread_ts": "1714522401.546399",
        "parent_user_id": "U0378MDUG1Y",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "2wahN",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Really awesome! A nice addition would be data-ports on the boxes and cubic bezier curves between these ports instead of arcs. A hack to make line-crossings more clearly would be drawing double lines.. where one of the two lines would be slightly thicker and have the same color as the background (I use that trick myself).\n\nVery nice to see the use of web-components! I believe that we finally will see a bigger use of these once react-19 is released."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U06K0MA31T9",
        "type": "message",
        "ts": "1714544838.011969",
        "client_msg_id": "5485dde1-694c-4a97-b734-abc8e84387ae",
        "text": "Another day, another module. Learning some things about web components this time. <https://github.com/bicycle-codes/progress-indicator>",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "FNcX0",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Another day, another module. Learning some things about web components this time. "
                            },
                            {
                                "type": "link",
                                "url": "https://github.com/bicycle-codes/progress-indicator"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "text": "<@U0123H7JRDM> Thanks!\n\n>  A nice addition would be data-ports on the boxes and cubic bezier curves between these ports instead of arcs.\nYa the  \"data-port\" edge with a cubic bezier curve is a type of arrow I've yet to dive into, thanks for confirming!\n\n>  A hack to make line-crossings more clearly would be drawing double lines.. where one of the two lines would be slightly thicker and have the same color as the background (I use that trick myself).\nDo you have an example to share? would be curious to learn more!",
        "files": [
            {
                "id": "F0711M01C0P",
                "mode": "tombstone"
            },
            {
                "id": "F071G844XBL",
                "mode": "tombstone"
            }
        ],
        "upload": false,
        "user": "U0378MDUG1Y",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "QJbnE",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U0123H7JRDM"
                            },
                            {
                                "type": "text",
                                "text": " Thanks!\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": " A nice addition would be data-ports on the boxes and cubic bezier curves between these ports instead of arcs."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Ya the  \"data-port\" edge with a cubic bezier curve is a type of arrow I've yet to dive into, thanks for confirming!\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": " A hack to make line-crossings more clearly would be drawing double lines.. where one of the two lines would be slightly thicker and have the same color as the background (I use that trick myself)."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Do you have an example to share? would be curious to learn more!"
                            }
                        ]
                    }
                ]
            }
        ],
        "type": "message",
        "ts": "1714547456.000569",
        "edited": {
            "user": "U0378MDUG1Y",
            "ts": "1714547764.000000"
        },
        "client_msg_id": "3533faca-69b6-46e1-a5c3-2101a97f4084",
        "thread_ts": "1714522401.546399",
        "parent_user_id": "U0378MDUG1Y"
    },
    {
        "user": "U0123H7JRDM",
        "type": "message",
        "ts": "1714548624.218809",
        "client_msg_id": "13E1079D-13CE-4CED-9718-36F177C12189",
        "text": "You can check my project here : <http://demo.codeflowcanvas.io|demo.codeflowcanvas.io> .. you can load one of the examples via the top menubar (on desktop)",
        "team": "T5TCAFTA9",
        "thread_ts": "1714522401.546399",
        "parent_user_id": "U0378MDUG1Y",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "l0+i6",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "You can check my project here : "
                            },
                            {
                                "type": "link",
                                "url": "http://demo.codeflowcanvas.io",
                                "text": "demo.codeflowcanvas.io"
                            },
                            {
                                "type": "text",
                                "text": " .. you can load one of the examples via the top menubar (on desktop)"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U0123H7JRDM",
        "type": "message",
        "ts": "1714548660.378639",
        "client_msg_id": "D9B01ABE-DF47-4B2E-ACAE-C37D6CD2E272",
        "text": "It also has moving data points when you run a flow but this works via javascript :blush: ",
        "team": "T5TCAFTA9",
        "thread_ts": "1714522401.546399",
        "parent_user_id": "U0378MDUG1Y",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "VwRNk",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "It also has moving data points when you run a flow but this works via javascript "
                            },
                            {
                                "type": "emoji",
                                "name": "blush",
                                "unicode": "1f60a"
                            },
                            {
                                "type": "text",
                                "text": " "
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "text": "<@U0123H7JRDM> Thanks, I see what you mean! Definitely has much better contrast! (Also it looks like you're in the canvas working group, maybe we've bumped into each other there?)\n\n<@UGWUJUZHT> (I'm assuming you meant to respond in this thread!)\n\n1. Totally agree!  A current tension in this project is that these arrows operate independently of any specific layout algorithm. You can use it with browser layout algorithms (e.g. document flow, flexbox, grid, etc.) or your own absolutely positioned layout algorithm. This is because each arrow operates independent of each other, they look at their source and target elements and use some arrow algorithm to render and arrow in between. So it currently doesn't handle collision with other elements or intersections between arrows. Good in some cases, not desirable in others... some future work I want to explore is extending this approach to orchestrated element/arrow layouts!\n2. Orthogonal edges are WIP (see video attached)\n3. Edge bundling is another area of exploration I'd love to get to. I'm starting by implementing hyperedges. Maybe a naive edge bundler converts a set of independent arrows into a hyper edge, not sure yet? I'd also love to explore how interaction could aid in \"busy diagrams\",,, Things like hovering over a node to highlight associated arrows. Some times I think we focus too much on layout and not enough on progressive disclosure as diagrams grow.",
        "files": [
            {
                "id": "F07255FSE3S",
                "created": 1714550102,
                "timestamp": 1714550102,
                "name": "Screen Recording 2024-05-01 at 12.54.31\u202fAM.mov",
                "title": "Screen Recording 2024-05-01 at 12.54.31\u202fAM.mov",
                "mimetype": "video/quicktime",
                "filetype": "mov",
                "pretty_type": "QuickTime Movie",
                "user": "U0378MDUG1Y",
                "user_team": "T5TCAFTA9",
                "editable": false,
                "size": 321622,
                "mode": "hosted",
                "is_external": false,
                "external_type": "",
                "is_public": true,
                "public_url_shared": false,
                "display_as_bot": false,
                "username": "",
                "transcription": {
                    "status": "none"
                },
                "mp4": "https://files.slack.com/files-tmb/T5TCAFTA9-F07255FSE3S-b219ff9f87/screen_recording_2024-05-01_at_12.54.31___am.mp4",
                "url_private": "https://files.slack.com/files-tmb/T5TCAFTA9-F07255FSE3S-b219ff9f87/screen_recording_2024-05-01_at_12.54.31___am.mp4",
                "url_private_download": "https://files.slack.com/files-pri/T5TCAFTA9-F07255FSE3S/download/screen_recording_2024-05-01_at_12.54.31___am.mov",
                "hls": "https://files.slack.com/files-tmb/T5TCAFTA9-F07255FSE3S-b219ff9f87/file.m3u8?_xcb=636bb",
                "hls_embed": "data:application/vnd.apple.mpegurl;base64,I0VYVE0zVQojRVhULVgtVkVSU0lPTjozCiNFWFQtWC1JTkRFUEVOREVOVC1TRUdNRU5UUwojRVhULVgtU1RSRUFNLUlORjpCQU5EV0lEVEg9MjgzNzIxLEFWRVJBR0UtQkFORFdJRFRIPTI4MzcyMSxDT0RFQ1M9ImF2YzEuNjQwMDFmLG1wNGEuNDAuNSIsUkVTT0xVVElPTj0xMDc4eDcyMCxGUkFNRS1SQVRFPTI5Ljk3MApkYXRhOmFwcGxpY2F0aW9uL3ZuZC5hcHBsZS5tcGVndXJsO2Jhc2U2NCxJMFZZVkUwelZRb2pSVmhVTFZndFZrVlNVMGxQVGpvekNpTkZXRlF0V0MxVVFWSkhSVlJFVlZKQlZFbFBUam8zQ2lORldGUXRXQzFOUlVSSlFTMVRSVkZWUlU1RFJUb3hDaU5GV0ZRdFdDMVFURUZaVEVsVFZDMVVXVkJGT2xaUFJBb2pSVmhVU1U1R09qWXVNREEyTEFwb2RIUndjem92TDJacGJHVnpMbk5zWVdOckxtTnZiUzltYVd4bGN5MTBiV0l2VkRWVVEwRkdWRUU1TFVZd056STFOVVpUUlROVExXSXlNVGxtWmpsbU9EY3ZabWxzWlY5SVh6STJORjh4TWpnd2VEY3lNRjh6TlRBd1MwSlFVMTgzVVZaQ1VsOHdNREF3TVM1MGN3b2pSVmhVU1U1R09qQXVOekF4TEFwb2RIUndjem92TDJacGJHVnpMbk5zWVdOckxtTnZiUzltYVd4bGN5MTBiV0l2VkRWVVEwRkdWRUU1TFVZd056STFOVVpUUlROVExXSXlNVGxtWmpsbU9EY3ZabWxzWlY5SVh6STJORjh4TWpnd2VEY3lNRjh6TlRBd1MwSlFVMTgzVVZaQ1VsOHdNREF3TWk1MGN3b2pSVmhVTFZndFJVNUVURWxUVkFvPQo=",
                "mp4_low": "https://files.slack.com/files-tmb/T5TCAFTA9-F07255FSE3S-b219ff9f87/screen_recording_2024-05-01_at_12.54.31___am_trans.mp4",
                "duration_ms": 6706,
                "media_display_type": "video",
                "thumb_video": "https://files.slack.com/files-tmb/T5TCAFTA9-F07255FSE3S-b219ff9f87/screen_recording_2024-05-01_at_12.54.31___am_thumb_video.jpeg",
                "thumb_video_w": 966,
                "thumb_video_h": 646,
                "permalink": "https://futureofcoding.slack.com/files/U0378MDUG1Y/F07255FSE3S/screen_recording_2024-05-01_at_12.54.31___am.mov",
                "permalink_public": "https://slack-files.com/T5TCAFTA9-F07255FSE3S-f5c7a4e577",
                "is_starred": false,
                "has_rich_preview": false,
                "file_access": "visible"
            }
        ],
        "upload": false,
        "user": "U0378MDUG1Y",
        "display_as_bot": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "SRca0",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U0123H7JRDM"
                            },
                            {
                                "type": "text",
                                "text": " Thanks, I see what you mean! Definitely has much better contrast! (Also it looks like you're in the canvas working group, maybe we've bumped into each other there?)\n\n"
                            },
                            {
                                "type": "user",
                                "user_id": "UGWUJUZHT"
                            },
                            {
                                "type": "text",
                                "text": " (I'm assuming you meant to respond in this thread!)\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Totally agree!  A current tension in this project is that these arrows operate independently of any specific layout algorithm. You can use it with browser layout algorithms (e.g. document flow, flexbox, grid, etc.) or your own absolutely positioned layout algorithm. This is because each arrow operates independent of each other, they look at their source and target elements and use some arrow algorithm to render and arrow in between. So it currently doesn't handle collision with other elements or intersections between arrows. Good in some cases, not desirable in others... some future work I want to explore is extending this approach to orchestrated element/arrow layouts!"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Orthogonal edges are WIP (see video attached)"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Edge bundling is another area of exploration I'd love to get to. I'm starting by implementing hyperedges. Maybe a naive edge bundler converts a set of independent arrows into a hyper edge, not sure yet? I'd also love to explore how interaction could aid in \"busy diagrams\",,, Things like hovering over a node to highlight associated arrows. Some times I think we focus too much on layout and not enough on progressive disclosure as diagrams grow."
                                    }
                                ]
                            }
                        ],
                        "style": "ordered",
                        "indent": 0,
                        "border": 0
                    }
                ]
            }
        ],
        "type": "message",
        "ts": "1714550964.795759",
        "edited": {
            "user": "U0378MDUG1Y",
            "ts": "1714551090.000000"
        },
        "client_msg_id": "76b4b1c3-15e7-4bb2-afa4-650bebdd3008",
        "thread_ts": "1714522401.546399",
        "parent_user_id": "U0378MDUG1Y"
    },
    {
        "user": "U0123H7JRDM",
        "type": "message",
        "ts": "1714552977.106549",
        "client_msg_id": "8301BFDF-151D-4F2D-977C-8A1E0A32B791",
        "text": "<@U0378MDUG1Y> yes I am in the OCWG and attended meetings 2 and 3",
        "team": "T5TCAFTA9",
        "thread_ts": "1714522401.546399",
        "parent_user_id": "U0378MDUG1Y",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "lsIKx",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U0378MDUG1Y"
                            },
                            {
                                "type": "text",
                                "text": " yes I am in the OCWG and attended meetings 2 and 3"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UGWUJUZHT",
        "type": "message",
        "ts": "1714554681.814499",
        "client_msg_id": "f63fbab2-667c-44c1-b41a-66f6cb32328e",
        "text": "As a data point, here's a live diagram that I'm using to generate usable code. I drew this with <http://draw.io|draw.io> (which sorely needs to be better when it comes to being a code editor):\nobservations:\nThe human gets the last say, auto-layout is a great tool as long as the human gets to say \"nope, I want this to be displayed here\" or something like that\n90-degree connection lines (rounded corners, in this case)\nIn some cases, too many lines make the diagram look \"too busy\" (\"rule of 7\"), in some cases it makes sense to bundle them together. In this case, I moved the boxes to where I wanted them, then painstakingly tweaked each arrow manually. In some cases, I reduced the diagram complexity by overlaying arrows on top of each other (poor man's \"bundling\").",
        "team": "T5TCAFTA9",
        "thread_ts": "1714522401.546399",
        "parent_user_id": "U0378MDUG1Y",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "M6jB7",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "As a data point, here's a live diagram that I'm using to generate usable code. I drew this with "
                            },
                            {
                                "type": "link",
                                "url": "http://draw.io",
                                "text": "draw.io"
                            },
                            {
                                "type": "text",
                                "text": " (which sorely needs to be better when it comes to being a code editor):\nobservations:\nThe human gets the last say, auto-layout is a great tool as long as the human gets to say \"nope, I want this to be displayed here\" or something like that\n90-degree connection lines (rounded corners, in this case)\nIn some cases, too many lines make the diagram look \"too busy\" (\"rule of 7\"), in some cases it makes sense to bundle them together. In this case, I moved the boxes to where I wanted them, then painstakingly tweaked each arrow manually. In some cases, I reduced the diagram complexity by overlaying arrows on top of each other (poor man's \"bundling\")."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "text": "",
        "files": [
            {
                "id": "F07122MLCAK",
                "created": 1714554726,
                "timestamp": 1714554726,
                "name": "Screenshot 2024-04-30 at 9.03.01\u202fPM.png",
                "title": "Screenshot 2024-04-30 at 9.03.01\u202fPM.png",
                "mimetype": "image/png",
                "filetype": "png",
                "pretty_type": "PNG",
                "user": "UGWUJUZHT",
                "user_team": "T5TCAFTA9",
                "editable": false,
                "size": 288491,
                "mode": "hosted",
                "is_external": false,
                "external_type": "",
                "is_public": true,
                "public_url_shared": false,
                "display_as_bot": false,
                "username": "",
                "url_private": "https://files.slack.com/files-pri/T5TCAFTA9-F07122MLCAK/screenshot_2024-04-30_at_9.03.01___pm.png",
                "url_private_download": "https://files.slack.com/files-pri/T5TCAFTA9-F07122MLCAK/download/screenshot_2024-04-30_at_9.03.01___pm.png",
                "media_display_type": "unknown",
                "thumb_64": "https://files.slack.com/files-tmb/T5TCAFTA9-F07122MLCAK-e5788cbe0b/screenshot_2024-04-30_at_9.03.01___pm_64.png",
                "thumb_80": "https://files.slack.com/files-tmb/T5TCAFTA9-F07122MLCAK-e5788cbe0b/screenshot_2024-04-30_at_9.03.01___pm_80.png",
                "thumb_360": "https://files.slack.com/files-tmb/T5TCAFTA9-F07122MLCAK-e5788cbe0b/screenshot_2024-04-30_at_9.03.01___pm_360.png",
                "thumb_360_w": 360,
                "thumb_360_h": 210,
                "thumb_480": "https://files.slack.com/files-tmb/T5TCAFTA9-F07122MLCAK-e5788cbe0b/screenshot_2024-04-30_at_9.03.01___pm_480.png",
                "thumb_480_w": 480,
                "thumb_480_h": 281,
                "thumb_160": "https://files.slack.com/files-tmb/T5TCAFTA9-F07122MLCAK-e5788cbe0b/screenshot_2024-04-30_at_9.03.01___pm_160.png",
                "thumb_720": "https://files.slack.com/files-tmb/T5TCAFTA9-F07122MLCAK-e5788cbe0b/screenshot_2024-04-30_at_9.03.01___pm_720.png",
                "thumb_720_w": 720,
                "thumb_720_h": 421,
                "thumb_800": "https://files.slack.com/files-tmb/T5TCAFTA9-F07122MLCAK-e5788cbe0b/screenshot_2024-04-30_at_9.03.01___pm_800.png",
                "thumb_800_w": 800,
                "thumb_800_h": 468,
                "thumb_960": "https://files.slack.com/files-tmb/T5TCAFTA9-F07122MLCAK-e5788cbe0b/screenshot_2024-04-30_at_9.03.01___pm_960.png",
                "thumb_960_w": 960,
                "thumb_960_h": 561,
                "thumb_1024": "https://files.slack.com/files-tmb/T5TCAFTA9-F07122MLCAK-e5788cbe0b/screenshot_2024-04-30_at_9.03.01___pm_1024.png",
                "thumb_1024_w": 1024,
                "thumb_1024_h": 599,
                "original_w": 1712,
                "original_h": 1001,
                "thumb_tiny": "AwAcADCa0t4mtI2aNSSOflqb7NAOsSf98iksv+PKL6U6aNJRsYkc54poBPssH/PJP++aX7LB/wA8U/75pDKElSLb14BzUxoaAi+ywf8APJP++RUF5bxJayMsaAgdQKsJMHlZACCvNMvv+POX6UrWALL/AI8ovpT3hDyq5JG3sKxUvJ40CJIQo6DApft9z/z1P5CmnYDWk2/ak/dsT/ezwKkIl80YI8vv61i/b7n/AJ6n8hR9vuf+ev6Ci4rG0kKpIzjOW65qO9x9ilx6Vlfb7n/nqfyFNe8uJEKPJlT1GBSuM//Z",
                "permalink": "https://futureofcoding.slack.com/files/UGWUJUZHT/F07122MLCAK/screenshot_2024-04-30_at_9.03.01___pm.png",
                "permalink_public": "https://slack-files.com/T5TCAFTA9-F07122MLCAK-def05af26b",
                "is_starred": false,
                "has_rich_preview": false,
                "file_access": "visible"
            }
        ],
        "upload": false,
        "user": "UGWUJUZHT",
        "display_as_bot": false,
        "type": "message",
        "ts": "1714554731.699959",
        "client_msg_id": "ff22d841-6806-4eb6-9e4e-2db215c0e0ae",
        "thread_ts": "1714522401.546399",
        "parent_user_id": "U0378MDUG1Y"
    },
    {
        "user": "UGWUJUZHT",
        "type": "message",
        "ts": "1714554759.520009",
        "client_msg_id": "f5e79a3a-3c5b-43d8-9277-342e79a23395",
        "text": "FYI - the arrows remind me a lot of Kinopio connectors.  Here's a ref to a page of Kinopio boxes with real data on it <https://kinopio.club/torlisp-april-2024-htNg92yseaP2Z9wrndg0k>. Can you see it? Can you move boxes around on it?",
        "team": "T5TCAFTA9",
        "thread_ts": "1714522401.546399",
        "parent_user_id": "U0378MDUG1Y",
        "attachments": [
            {
                "from_url": "https://kinopio.club/torlisp-april-2024-htNg92yseaP2Z9wrndg0k",
                "service_icon": "https://kinopio.club/apple-touch-icon.png",
                "id": 1,
                "original_url": "https://kinopio.club/torlisp-april-2024-htNg92yseaP2Z9wrndg0k",
                "fallback": "Kinopio: Torlisp April 2024 \u2013 Kinopio",
                "text": "A space to whiteboard, moodboard, brainstorm, and take notes",
                "title": "Torlisp April 2024 \u2013 Kinopio",
                "title_link": "https://kinopio.club/torlisp-april-2024-htNg92yseaP2Z9wrndg0k",
                "service_name": "Kinopio"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "oY+Xq",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "FYI - the arrows remind me a lot of Kinopio connectors.  Here's a ref to a page of Kinopio boxes with real data on it "
                            },
                            {
                                "type": "link",
                                "url": "https://kinopio.club/torlisp-april-2024-htNg92yseaP2Z9wrndg0k"
                            },
                            {
                                "type": "text",
                                "text": ". Can you see it? Can you move boxes around on it?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UGWUJUZHT",
        "type": "message",
        "ts": "1714561982.276649",
        "client_msg_id": "f85b73e2-8555-416f-ae82-7f5fc111b928",
        "text": "[yeah, I did mean to reply in this thread - I moved the above stuff out of the main backbone]",
        "team": "T5TCAFTA9",
        "thread_ts": "1714522401.546399",
        "parent_user_id": "U0378MDUG1Y",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "NIYBI",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "[yeah, I did mean to reply in this thread - I moved the above stuff out of the main backbone]"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UGWUJUZHT",
        "type": "message",
        "ts": "1714562028.880659",
        "client_msg_id": "254bd7dd-3204-48f7-ba96-c6d7694d17c2",
        "text": "In case this is helpful: \"bundling\" is a purely-visual thing (a macro?), whereas point-to-point connection is a semantically interesting thing [I haven't figured out what this means, since I found a kludgy workaround for my purposes when using <http://draw.io|draw.io>. Yet, I sense that keeping the two concepts separated will produce new insights on how to deal with them]. [In fact, as I write this I am wondering whether the solution is to provide a way to specify visual constraints while stripping such visual detail out when boiling the info down for semantic analysis]",
        "team": "T5TCAFTA9",
        "thread_ts": "1714522401.546399",
        "parent_user_id": "U0378MDUG1Y",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "3AlMF",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "In case this is helpful: \"bundling\" is a purely-visual thing (a macro?), whereas point-to-point connection is a semantically interesting thing [I haven't figured out what this means, since I found a kludgy workaround for my purposes when using "
                            },
                            {
                                "type": "link",
                                "url": "http://draw.io",
                                "text": "draw.io"
                            },
                            {
                                "type": "text",
                                "text": ". Yet, I sense that keeping the two concepts separated will produce new insights on how to deal with them]. [In fact, as I write this I am wondering whether the solution is to provide a way to specify visual constraints while stripping such visual detail out when boiling the info down for semantic analysis]"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U0378MDUG1Y"
                ],
                "count": 1
            }
        ]
    },
    {
        "text": "Progress on s-curves and \u201cdata ports\u201d\n\n",
        "files": [
            {
                "id": "F071P7UML8L",
                "created": 1714609563,
                "timestamp": 1714609563,
                "name": "Screen_Recording_2024-05-01_at_4.06.38_PM.MOV",
                "title": "Screen_Recording_2024-05-01_at_4.06.38_PM",
                "mimetype": "video/mp4",
                "filetype": "mp4",
                "pretty_type": "MPEG 4 Video",
                "user": "U0378MDUG1Y",
                "user_team": "T5TCAFTA9",
                "editable": false,
                "size": 389382,
                "mode": "hosted",
                "is_external": false,
                "external_type": "",
                "is_public": true,
                "public_url_shared": false,
                "display_as_bot": false,
                "username": "",
                "transcription": {
                    "status": "none"
                },
                "mp4": "https://files.slack.com/files-tmb/T5TCAFTA9-F071P7UML8L-ad4b8ce128/screen_recording_2024-05-01_at_4.06.38_pm.mp4",
                "url_private": "https://files.slack.com/files-tmb/T5TCAFTA9-F071P7UML8L-ad4b8ce128/screen_recording_2024-05-01_at_4.06.38_pm.mp4",
                "url_private_download": "https://files.slack.com/files-pri/T5TCAFTA9-F071P7UML8L/download/screen_recording_2024-05-01_at_4.06.38_pm.mov",
                "hls": "https://files.slack.com/files-tmb/T5TCAFTA9-F071P7UML8L-ad4b8ce128/file.m3u8?_xcb=c3cd2",
                "hls_embed": "data:application/vnd.apple.mpegurl;base64,I0VYVE0zVQojRVhULVgtVkVSU0lPTjozCiNFWFQtWC1JTkRFUEVOREVOVC1TRUdNRU5UUwojRVhULVgtU1RSRUFNLUlORjpCQU5EV0lEVEg9MzIzMjg3LEFWRVJBR0UtQkFORFdJRFRIPTMyMzI4NyxDT0RFQ1M9ImF2YzEuNjQwMDFmLG1wNGEuNDAuNSIsUkVTT0xVVElPTj0xMDk2eDcyMCxGUkFNRS1SQVRFPTI5Ljk3MApkYXRhOmFwcGxpY2F0aW9uL3ZuZC5hcHBsZS5tcGVndXJsO2Jhc2U2NCxJMFZZVkUwelZRb2pSVmhVTFZndFZrVlNVMGxQVGpvekNpTkZXRlF0V0MxVVFWSkhSVlJFVlZKQlZFbFBUam8zQ2lORldGUXRXQzFOUlVSSlFTMVRSVkZWUlU1RFJUb3hDaU5GV0ZRdFdDMVFURUZaVEVsVFZDMVVXVkJGT2xaUFJBb2pSVmhVU1U1R09qWXVNREEyTEFwb2RIUndjem92TDJacGJHVnpMbk5zWVdOckxtTnZiUzltYVd4bGN5MTBiV0l2VkRWVVEwRkdWRUU1TFVZd056RlFOMVZOVERoTUxXRmtOR0k0WTJVeE1qZ3ZabWxzWlY5SVh6STJORjh4TWpnd2VEY3lNRjh6TlRBd1MwSlFVMTgzVVZaQ1VsOHdNREF3TVM1MGN3b2pSVmhVU1U1R09qUXVNemN4TEFwb2RIUndjem92TDJacGJHVnpMbk5zWVdOckxtTnZiUzltYVd4bGN5MTBiV0l2VkRWVVEwRkdWRUU1TFVZd056RlFOMVZOVERoTUxXRmtOR0k0WTJVeE1qZ3ZabWxzWlY5SVh6STJORjh4TWpnd2VEY3lNRjh6TlRBd1MwSlFVMTgzVVZaQ1VsOHdNREF3TWk1MGN3b2pSVmhVTFZndFJVNUVURWxUVkFvPQo=",
                "duration_ms": 10377,
                "media_display_type": "video",
                "thumb_video": "https://files.slack.com/files-tmb/T5TCAFTA9-F071P7UML8L-ad4b8ce128/screen_recording_2024-05-01_at_4.06.38_pm_thumb_video.jpeg",
                "thumb_video_w": 1096,
                "thumb_video_h": 720,
                "permalink": "https://futureofcoding.slack.com/files/U0378MDUG1Y/F071P7UML8L/screen_recording_2024-05-01_at_4.06.38_pm.mov",
                "permalink_public": "https://slack-files.com/T5TCAFTA9-F071P7UML8L-2568d883ca",
                "is_starred": false,
                "has_rich_preview": false,
                "file_access": "visible"
            }
        ],
        "upload": false,
        "user": "U0378MDUG1Y",
        "display_as_bot": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "SqQFn",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Progress on s-curves and \u201cdata ports\u201d\n\n"
                            }
                        ]
                    }
                ]
            }
        ],
        "type": "message",
        "ts": "1714609568.961889",
        "client_msg_id": "F0EFF59A-D678-4EF7-8D7C-DEC8C5AC0BC1",
        "thread_ts": "1714522401.546399",
        "parent_user_id": "U0378MDUG1Y",
        "reactions": [
            {
                "name": "sunglasses",
                "users": [
                    "U0123H7JRDM",
                    "U02U0AS3J49"
                ],
                "count": 2
            },
            {
                "name": "guitar",
                "users": [
                    "UGWUJUZHT"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UFEQUBNNT",
        "type": "message",
        "ts": "1714703067.957549",
        "edited": {
            "user": "UFEQUBNNT",
            "ts": "1714703078.000000"
        },
        "client_msg_id": "3C93BC66-F486-42EC-B07D-7393C248E5A4",
        "text": "Is it extensible to other methods of rendering so I could use it in <http://alltom.com/pages/ppl-lab-notebook/|http://alltom.com/pages/ppl-lab-notebook/> if I\u2019m using Three.js instead of HTML?",
        "team": "T5TCAFTA9",
        "thread_ts": "1714522401.546399",
        "parent_user_id": "U0378MDUG1Y",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ujxVH",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Is it extensible to other methods of rendering so I could use it in "
                            },
                            {
                                "type": "link",
                                "url": "http://alltom.com/pages/ppl-lab-notebook/",
                                "text": "http://alltom.com/pages/ppl-lab-notebook/"
                            },
                            {
                                "type": "text",
                                "text": " if I\u2019m using Three.js instead of HTML?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U0378MDUG1Y",
        "type": "message",
        "ts": "1714721645.916529",
        "edited": {
            "user": "U0378MDUG1Y",
            "ts": "1714722023.000000"
        },
        "client_msg_id": "A4591129-76CA-45F7-B6B1-222BF82E243B",
        "text": "<@UFEQUBNNT> not exactly! Quiver is specifically designed to express connection/arrows in HTML. That said the arrow layout algorithms can be agnostic assuming you\u2019re using a 2d canvas (guessing a 3d canvas would need to be different to account for the additional dimension) . Two of the packages I\u2019m using are already separate NPM packages that you might be able to use:\n\n<https://github.com/steveruizok/perfect-arrows|https://github.com/steveruizok/perfect-arrows>\n<https://github.com/dragonman225/curved-arrows|https://github.com/dragonman225/curved-arrows>",
        "team": "T5TCAFTA9",
        "thread_ts": "1714522401.546399",
        "parent_user_id": "U0378MDUG1Y",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "GkBMx",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UFEQUBNNT"
                            },
                            {
                                "type": "text",
                                "text": " not exactly! Quiver is specifically designed to express connection/arrows in HTML. That said the arrow layout algorithms can be agnostic assuming you\u2019re using a 2d canvas (guessing a 3d canvas would need to be different to account for the additional dimension) . Two of the packages I\u2019m using are already separate NPM packages that you might be able to use:\n\n"
                            },
                            {
                                "type": "link",
                                "url": "https://github.com/steveruizok/perfect-arrows",
                                "text": "https://github.com/steveruizok/perfect-arrows"
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "link",
                                "url": "https://github.com/dragonman225/curved-arrows",
                                "text": "https://github.com/dragonman225/curved-arrows"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UFEQUBNNT"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UFEQUBNNT",
        "type": "message",
        "ts": "1714797090.876879",
        "client_msg_id": "8844B35C-6ED0-4BE5-BDD1-EEEBC34EAF5B",
        "text": "<@U0378MDUG1Y> Lovely, thanks.",
        "team": "T5TCAFTA9",
        "thread_ts": "1714522401.546399",
        "parent_user_id": "U0378MDUG1Y",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "mAK1v",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U0378MDUG1Y"
                            },
                            {
                                "type": "text",
                                "text": " Lovely, thanks."
                            }
                        ]
                    }
                ]
            }
        ]
    }
]