[
    {
        "user": "UJBAJNFLK",
        "type": "message",
        "ts": "1715846961.582069",
        "client_msg_id": "e338acc3-fa9a-4c8d-86c8-0997c4ea2121",
        "text": "In <https://twitter.com/swardley/status/1787851368528576829|this tweet> , Simon Wardley compares making software systems explainable via moldable development (my expansion of his reference to Glamorous Toolkit) to creating maps. That sounds like a very useful metaphor to me. Many of us are interested in or even working on visual coding tools, and I wonder what their take on this metaphor is. Maps are inherently visual, but they are not the territory, i.e. the code with all the details. To me, visual tools are obviously the right choice for creating maps, but I remain unconvinced about their appropriateness for code.\nI am thinking in particular of <@U014WA16VNJ>\u2019s recent demo of infinite canvasses as user interfaces. For making multi-faceted maps to software systems, that looks like a very appopriate representation.",
        "team": "T5TCAFTA9",
        "thread_ts": "1715846961.582069",
        "reply_count": 7,
        "reply_users_count": 5,
        "latest_reply": "1716008870.722079",
        "reply_users": [
            "U02PUDETGRW",
            "U023V63MF6V",
            "U0378MDUG1Y",
            "U5STGTB3J",
            "UJBAJNFLK"
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "wUwvM",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "In "
                            },
                            {
                                "type": "link",
                                "url": "https://twitter.com/swardley/status/1787851368528576829",
                                "text": "this tweet"
                            },
                            {
                                "type": "text",
                                "text": " , Simon Wardley compares making software systems explainable via moldable development (my expansion of his reference to Glamorous Toolkit) to creating maps. That sounds like a very useful metaphor to me. Many of us are interested in or even working on visual coding tools, and I wonder what their take on this metaphor is. Maps are inherently visual, but they are not the territory, i.e. the code with all the details. To me, visual tools are obviously the right choice for creating maps, but I remain unconvinced about their appropriateness for code.\nI am thinking in particular of "
                            },
                            {
                                "type": "user",
                                "user_id": "U014WA16VNJ"
                            },
                            {
                                "type": "text",
                                "text": "\u2019s recent demo of infinite canvasses as user interfaces. For making multi-faceted maps to software systems, that looks like a very appopriate representation."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "world_map",
                "users": [
                    "UA14TGLTC"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U02PUDETGRW",
        "type": "message",
        "ts": "1715858466.357049",
        "client_msg_id": "ed57bbc3-39d6-48b5-a7ca-3bebfcb7c623",
        "text": "can you please point me to that demo of Orion? I can not find it",
        "team": "T5TCAFTA9",
        "thread_ts": "1715846961.582069",
        "parent_user_id": "UJBAJNFLK",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "yx2bt",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "can you please point me to that demo of Orion? I can not find it"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U023V63MF6V",
        "type": "message",
        "ts": "1715869113.252989",
        "client_msg_id": "3a846632-588d-4218-8728-126f1d3a098a",
        "text": "<https://hci.social/@orion/112094932620817340|Announcing the Open Canvas Working Group (OCWG)>",
        "team": "T5TCAFTA9",
        "thread_ts": "1715846961.582069",
        "parent_user_id": "UJBAJNFLK",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "XR+E2",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "link",
                                "url": "https://hci.social/@orion/112094932620817340",
                                "text": "Announcing the Open Canvas Working Group (OCWG)"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U02PUDETGRW",
        "type": "message",
        "ts": "1715869248.403309",
        "client_msg_id": "e7cb4972-426c-43cd-a8cf-a2ec966c6c96",
        "text": "thanks!",
        "team": "T5TCAFTA9",
        "thread_ts": "1715846961.582069",
        "parent_user_id": "UJBAJNFLK",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "OJlya",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "thanks!"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U0378MDUG1Y",
        "type": "message",
        "ts": "1715872486.735709",
        "client_msg_id": "DAF225DF-E881-4440-A972-39D51EDFAB10",
        "text": "Also <https://m.youtube.com/watch?v=csGNVaB83Rk&amp;pp=ygUXVG9vbHMgZm9yIHRob2lnaHIgcm9ja3M%3D|https://m.youtube.com/watch?v=csGNVaB83Rk&amp;pp=ygUXVG9vbHMgZm9yIHRob2lnaHIgcm9ja3M%3D>",
        "team": "T5TCAFTA9",
        "thread_ts": "1715846961.582069",
        "parent_user_id": "UJBAJNFLK",
        "attachments": [
            {
                "from_url": "https://m.youtube.com/watch?v=csGNVaB83Rk&amp;pp=ygUXVG9vbHMgZm9yIHRob2lnaHIgcm9ja3M%3D",
                "thumb_url": "https://i.ytimg.com/vi/csGNVaB83Rk/hqdefault.jpg",
                "thumb_width": 480,
                "thumb_height": 360,
                "video_html": "<iframe width=\"400\" height=\"300\" src=\"https://www.youtube.com/embed/csGNVaB83Rk?feature=oembed&autoplay=1&iv_load_policy=3\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" referrerpolicy=\"strict-origin-when-cross-origin\" allowfullscreen title=\"Spatial Canvases: Towards an Integration Domain for HCI, with Orion Reed\"></iframe>",
                "video_html_width": 400,
                "video_html_height": 300,
                "service_icon": "https://a.slack-edge.com/80588/img/unfurl_icons/youtube.png",
                "id": 1,
                "original_url": "https://m.youtube.com/watch?v=csGNVaB83Rk&amp;pp=ygUXVG9vbHMgZm9yIHRob2lnaHIgcm9ja3M%3D",
                "fallback": "YouTube Video: Spatial Canvases: Towards an Integration Domain for HCI, with Orion Reed",
                "title": "Spatial Canvases: Towards an Integration Domain for HCI, with Orion Reed",
                "title_link": "https://m.youtube.com/watch?v=csGNVaB83Rk&amp;pp=ygUXVG9vbHMgZm9yIHRob2lnaHIgcm9ja3M%3D",
                "author_name": "Tools for Thought Rocks!",
                "author_link": "https://www.youtube.com/@ToolsforThought",
                "service_name": "YouTube",
                "service_url": "https://www.youtube.com/"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "pvmkv",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Also "
                            },
                            {
                                "type": "link",
                                "url": "https://m.youtube.com/watch?v=csGNVaB83Rk&pp=ygUXVG9vbHMgZm9yIHRob2lnaHIgcm9ja3M%3D",
                                "text": "https://m.youtube.com/watch?v=csGNVaB83Rk&pp=ygUXVG9vbHMgZm9yIHRob2lnaHIgcm9ja3M%3D"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UJBAJNFLK"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U02PUDETGRW",
        "type": "message",
        "ts": "1715872598.372809",
        "client_msg_id": "9bf22bda-04de-41ee-8a1d-411b90d59172",
        "text": "nice, thanks a lot!",
        "team": "T5TCAFTA9",
        "thread_ts": "1715846961.582069",
        "parent_user_id": "UJBAJNFLK",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "hSVRS",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "nice, thanks a lot!"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U5STGTB3J",
        "type": "message",
        "ts": "1715954336.099829",
        "edited": {
            "user": "U5STGTB3J",
            "ts": "1715954511.000000"
        },
        "client_msg_id": "8d67b2e8-6ffe-4eb6-8740-399d4f0949f7",
        "text": "Frederick P. Brooks in _<https://worrydream.com/refs/Brooks_1986_-_No_Silver_Bullet.pdf|No Silver Bullet>_ seems to have a perspective on that:\n> _The reality of software is not inherently embedded in space. Hence *it has no ready geometric representation in the way that land has maps, silicon chips have diagrams, computers have connectivity schematics*. As soon as we attempt to diagram software structure, we find it to constitute *not one, but several, general directed graphs, superimposed one upon another*. The several graphs may represent the flow of control, the flow of data, patterns of dependency, time sequence, name-space relationships. These are usually not even planar, much less hierarchical. Indeed, one of the ways of establishing conceptual control over such structure is to enforce link cutting until one or more of the graphs becomes hierarchical._\n<http://nature-of-order.stefan-lesser.com/geometry-in-software|I\u2019ve been struggling with this before>, and still haven\u2019t found the time to put what I said <https://youtu.be/qGDrrxuR584|here> into a more concise and readable format, but the gist is: Maps are powerful because they help us navigate\u2026 ha\u2026 I guess I should just end the sentence here\u2026 but I wanted to say\u2026 navigate multiple dimensions at once. Wardley defines maps as visualizations where position and direction have meaning, so these encode additional information in a spatial way that we are very well adapted to intuitively understand. So not everything visual qualifies as maps in his (and my) view, especially the now ubiquitous infinite canvasses rarely encode meaning in position deliberately.\n\nThat power of such representations, however, can cause us to overlook that they all are just models of a reality that has more dimensions than included in the representations we are looking at. That\u2019s why it\u2019s easy for Brooks to just casually list a few different visualizations we can easily create for software which all highlight and leave out different aspects of the same thing. In conclusion, as long as we are not trying to look for the one ultimate representation but accept various different ones for what they do and don\u2019t do, it\u2019s a magnificent tool in our toolbox.\n\nBrooks continues saying:\n> _In spite of progress in restricting and simplifying the structures of software, they remain inherently unvisualizable, thus depriving the mind of some of its most powerful conceptual tools. This lack not only impedes the process of design within one mind, it severely hinders communication among minds._",
        "team": "T5TCAFTA9",
        "thread_ts": "1715846961.582069",
        "parent_user_id": "UJBAJNFLK",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "hNZNg",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Frederick P. Brooks in "
                            },
                            {
                                "type": "link",
                                "url": "https://worrydream.com/refs/Brooks_1986_-_No_Silver_Bullet.pdf",
                                "text": "No Silver Bullet",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " seems to have a perspective on that:\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The reality of software is not inherently embedded in space. Hence ",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "it has no ready geometric representation in the way that land has maps, silicon chips have diagrams, computers have connectivity schematics",
                                "style": {
                                    "bold": true,
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ". As soon as we attempt to diagram software structure, we find it to constitute ",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "not one, but several, general directed graphs, superimposed one upon another",
                                "style": {
                                    "bold": true,
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ". The several graphs may represent the flow of control, the flow of data, patterns of dependency, time sequence, name-space relationships. These are usually not even planar, much less hierarchical. Indeed, one of the ways of establishing conceptual control over such structure is to enforce link cutting until one or more of the graphs becomes hierarchical.",
                                "style": {
                                    "italic": true
                                }
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "link",
                                "url": "http://nature-of-order.stefan-lesser.com/geometry-in-software",
                                "text": "I\u2019ve been struggling with this before"
                            },
                            {
                                "type": "text",
                                "text": ", and still haven\u2019t found the time to put what I said "
                            },
                            {
                                "type": "link",
                                "url": "https://youtu.be/qGDrrxuR584",
                                "text": "here"
                            },
                            {
                                "type": "text",
                                "text": " into a more concise and readable format, but the gist is: Maps are powerful because they help us navigate\u2026 ha\u2026 I guess I should just end the sentence here\u2026 but I wanted to say\u2026 navigate multiple dimensions at once. Wardley defines maps as visualizations where position and direction have meaning, so these encode additional information in a spatial way that we are very well adapted to intuitively understand. So not everything visual qualifies as maps in his (and my) view, especially the now ubiquitous infinite canvasses rarely encode meaning in position deliberately.\n\nThat power of such representations, however, can cause us to overlook that they all are just models of a reality that has more dimensions than included in the representations we are looking at. That\u2019s why it\u2019s easy for Brooks to just casually list a few different visualizations we can easily create for software which all highlight and leave out different aspects of the same thing. In conclusion, as long as we are not trying to look for the one ultimate representation but accept various different ones for what they do and don\u2019t do, it\u2019s a magnificent tool in our toolbox.\n\nBrooks continues saying:\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "In spite of progress in restricting and simplifying the structures of software, they remain inherently unvisualizable, thus depriving the mind of some of its most powerful conceptual tools. This lack not only impedes the process of design within one mind, it severely hinders communication among minds.",
                                "style": {
                                    "italic": true
                                }
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJBAJNFLK",
        "type": "message",
        "ts": "1716008870.722079",
        "client_msg_id": "011d51eb-ba72-4fab-acfc-a73bacc98848",
        "text": "From the Moldable Development perspective, the question is not \"can we create maps for software systems\" but \"can we create mappable software systems, by making the maps as part of the design and implementation process\".\n\nA meaningful use of the directions is indeed a major challenge, and I hope that Wardley will come up with something in the course of his work with Glamorous Toolkit.",
        "team": "T5TCAFTA9",
        "thread_ts": "1715846961.582069",
        "parent_user_id": "UJBAJNFLK",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Ne+4n",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "From the Moldable Development perspective, the question is not \"can we create maps for software systems\" but \"can we create mappable software systems, by making the maps as part of the design and implementation process\".\n\nA meaningful use of the directions is indeed a major challenge, and I hope that Wardley will come up with something in the course of his work with Glamorous Toolkit."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U5STGTB3J"
                ],
                "count": 1
            }
        ]
    }
]