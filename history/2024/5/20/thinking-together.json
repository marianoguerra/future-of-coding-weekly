[
    {
        "user": "U5STGTB3J",
        "type": "message",
        "ts": "1716221149.765549",
        "client_msg_id": "0940460a-e7b5-4aa0-b167-e8a6d2f157bc",
        "text": "This is one of those questions where I don\u2019t really know yet how to ask it, so let me fumble and handwave a little bit and see where this goes:\n\nIn computing history we went from printers to screens, and on those screens from a brief stint with vector graphics to bitmap displays, and on those bitmap displays from text mode to frame buffer, and in those frame buffers from sprites and blitting to rasterization and compositing. In the early days, when there wasn\u2019t enough RAM for a full-screen bitmap frame buffer, character glyphs and sprites were brought in from ROM. Now we have so much memory that we have double-/triple-buffering and realtime compositing of separately stored textures that often exceed the number of screen pixels available by an order of magnitude or more.\n\nI\u2019m particularly interested in the early transition to raster graphics. At some point (and I assume that was probably with PostScript?) it became feasible to compute graphics on the fly instead of having them prepared as bitmaps in ROM or on disk. If I remember this correctly, PostScript was invented because due to the different font sizes it was more economical to ship instructions to generate glyphs on the fly on the printer than to ship all possible glyphs as bitmaps in all the different font sizes.\n\nIn a way we went from a \u201cfinal\u201d representation of a map of bits restricted to a certain grid size to an \u201cintermediate\u201d representation of instructions that have to be executed to generate the final map of bits in the desired size. Alternatively, we could see that as swapping space (memory) for time (compute).\n\nAre you aware of any papers or other material that compares both sides of this transition?\nFor instance in terms of performance in space and time, ie. how much compute is needed for how much memory saved. Or in the broader sense of how we settled on certain graphics primitives, because they were cheap enough to implement in terms of compute, and how we settled on certain data formats, because they were small enough in terms of memory usage, so that this trade-off made sense.",
        "team": "T5TCAFTA9",
        "thread_ts": "1716221149.765549",
        "reply_count": 4,
        "reply_users_count": 4,
        "latest_reply": "1716230943.329609",
        "reply_users": [
            "U5STGTB3J",
            "U03CEGR3HSL",
            "UCUSW7WVD",
            "UGWUJUZHT"
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "g0ngw",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "This is one of those questions where I don\u2019t really know yet how to ask it, so let me fumble and handwave a little bit and see where this goes:\n\nIn computing history we went from printers to screens, and on those screens from a brief stint with vector graphics to bitmap displays, and on those bitmap displays from text mode to frame buffer, and in those frame buffers from sprites and blitting to rasterization and compositing. In the early days, when there wasn\u2019t enough RAM for a full-screen bitmap frame buffer, character glyphs and sprites were brought in from ROM. Now we have so much memory that we have double-/triple-buffering and realtime compositing of separately stored textures that often exceed the number of screen pixels available by an order of magnitude or more.\n\nI\u2019m particularly interested in the early transition to raster graphics. At some point (and I assume that was probably with PostScript?) it became feasible to compute graphics on the fly instead of having them prepared as bitmaps in ROM or on disk. If I remember this correctly, PostScript was invented because due to the different font sizes it was more economical to ship instructions to generate glyphs on the fly on the printer than to ship all possible glyphs as bitmaps in all the different font sizes.\n\nIn a way we went from a \u201cfinal\u201d representation of a map of bits restricted to a certain grid size to an \u201cintermediate\u201d representation of instructions that have to be executed to generate the final map of bits in the desired size. Alternatively, we could see that as swapping space (memory) for time (compute).\n\nAre you aware of any papers or other material that compares both sides of this transition?\nFor instance in terms of performance in space and time, ie. how much compute is needed for how much memory saved. Or in the broader sense of how we settled on certain graphics primitives, because they were cheap enough to implement in terms of compute, and how we settled on certain data formats, because they were small enough in terms of memory usage, so that this trade-off made sense."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "thinking_face",
                "users": [
                    "UCUSW7WVD",
                    "UC2A2ARPT",
                    "U06MT7U6W84"
                ],
                "count": 3
            }
        ]
    },
    {
        "user": "U5STGTB3J",
        "type": "message",
        "ts": "1716222090.412319",
        "client_msg_id": "c2687b32-0630-47fd-844b-b80b857be1cd",
        "text": "I guess a different way of describing what I\u2019m looking for is this: Today, graphics primitives are a \u201csolved problem\u201d and part of any stack that you could possibly use (except maybe for low-level systems programming).\n\nBack in those days I\u2019m referring to, we were just figuring all that out. I\u2019m looking for any kind of material that exposes the thinking processes that lead to the graphics stacks we use today, but also surface some of the abandoned (or never really investigated) ideas of what could\u2019ve been.",
        "team": "T5TCAFTA9",
        "thread_ts": "1716221149.765549",
        "parent_user_id": "U5STGTB3J",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "r8rPP",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I guess a different way of describing what I\u2019m looking for is this: Today, graphics primitives are a \u201csolved problem\u201d and part of any stack that you could possibly use (except maybe for low-level systems programming).\n\nBack in those days I\u2019m referring to, we were just figuring all that out. I\u2019m looking for any kind of material that exposes the thinking processes that lead to the graphics stacks we use today, but also surface some of the abandoned (or never really investigated) ideas of what could\u2019ve been."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U03CEGR3HSL",
        "type": "message",
        "ts": "1716222538.338119",
        "client_msg_id": "308c1c5f-c24b-45af-b523-e9d81eb27570",
        "text": "You may find Principles of Interactive Computer Graphics by Newman and Sproull interesting. It may not go into all of the comparisons and trade-offs that you are discussing, but it certainly has discussions relevant to questions about how and why we do things certain ways.\n\n<https://archive.org/details/principlesofinter00newm/mode/1up|https://archive.org/details/principlesofinter00newm/mode/1up>",
        "team": "T5TCAFTA9",
        "thread_ts": "1716221149.765549",
        "parent_user_id": "U5STGTB3J",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "DACyh",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "You may find Principles of Interactive Computer Graphics by Newman and Sproull interesting. It may not go into all of the comparisons and trade-offs that you are discussing, but it certainly has discussions relevant to questions about how and why we do things certain ways.\n\n"
                            },
                            {
                                "type": "link",
                                "url": "https://archive.org/details/principlesofinter00newm/mode/1up",
                                "text": "https://archive.org/details/principlesofinter00newm/mode/1up"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U5STGTB3J",
                    "U017TE5R09M"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1716225255.035479",
        "client_msg_id": "e23c303b-8744-48c9-a762-d8964c9ec854",
        "text": "<https://cohost.org/mcc/post/1406157-i-want-to-talk-about-webgpu> from last year sticks out in my mind as having really great historical context.",
        "team": "T5TCAFTA9",
        "thread_ts": "1716221149.765549",
        "parent_user_id": "U5STGTB3J",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "tJG+i",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "link",
                                "url": "https://cohost.org/mcc/post/1406157-i-want-to-talk-about-webgpu"
                            },
                            {
                                "type": "text",
                                "text": " from last year sticks out in my mind as having really great historical context."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U5STGTB3J",
                    "UC2A2ARPT"
                ],
                "count": 2
            },
            {
                "name": "100",
                "users": [
                    "UC2A2ARPT"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UGWUJUZHT",
        "type": "message",
        "ts": "1716230943.329609",
        "client_msg_id": "ea1ecddd-4718-48b1-acfd-6da1456e7757",
        "text": "I can't directly answer your question, but, if I were trying to answer this question, I would look at:\n\u2022 early issues of Siggraph\n\u2022 early issues of ACM ToG (Transactions on Graphics)\n\u2022 early literature from Apple re. Apple postscript printers (a key ingredient to Apple's success &amp; $$$)\n\u2022 early literature from Adobe re. postscript\n\u2022 early literature from Sun Microsystems. re. NeWS (capable of rendering circular windows)\n\u2022 I remember the name Alain Fournier being associated with the transition from clunky graphics to realistic graphics (did he say anything of interest to the above question?)\nFWIW:\n\u2022 \"vector\" beams came from the way that cathode ray tubes (oscilloscopes and TV) and raster scanning worked\n\u2022 I blame the use of fixed-sized grids of non-overlapping small bitmaps (\"characters\") on Gutenberg and the use of clay tablets and papyrus mixed in with the concepts of arrays of bits (i.e. digital memory)\n\u2022 rows and columns of input switches were used in IBM Selectric typewriters and keyboards which naturally led to the idea of rows and columns of core memory bits, dot-matrix printing and output pixels. 7-segment displays led to grids of pixels-on-a-chip, etc. The key being optimization of pin count by using row/column addressing instead of direct pixel addressing, the same optimization used in PLCs.\n\u2022 the epitome of row/column addressing was the invention of the CPU chip attached to Random Access Memory, IMO\n\u2022 I think that we're only beginning to use scalable vector graphics in the form of SVG and variants of XML\n(... asking a more-knowledgable friend about this question ...)",
        "team": "T5TCAFTA9",
        "thread_ts": "1716221149.765549",
        "parent_user_id": "U5STGTB3J",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "XhgoK",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I can't directly answer your question, but, if I were trying to answer this question, I would look at:\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "early issues of Siggraph"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "early issues of ACM ToG (Transactions on Graphics)"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "early literature from Apple re. Apple postscript printers (a key ingredient to Apple's success & $$$)"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "early literature from Adobe re. postscript"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "early literature from Sun Microsystems. re. NeWS (capable of rendering circular windows)"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "I remember the name Alain Fournier being associated with the transition from clunky graphics to realistic graphics (did he say anything of interest to the above question?)"
                                    }
                                ]
                            }
                        ],
                        "style": "bullet",
                        "indent": 0,
                        "border": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nFWIW:\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "\"vector\" beams came from the way that cathode ray tubes (oscilloscopes and TV) and raster scanning worked"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "I blame the use of fixed-sized grids of non-overlapping small bitmaps (\"characters\") on Gutenberg and the use of clay tablets and papyrus mixed in with the concepts of arrays of bits (i.e. digital memory)"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "rows and columns of input switches were used in IBM Selectric typewriters and keyboards which naturally led to the idea of rows and columns of core memory bits, dot-matrix printing and output pixels. 7-segment displays led to grids of pixels-on-a-chip, etc. The key being optimization of pin count by using row/column addressing instead of direct pixel addressing, the same optimization used in PLCs."
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "the epitome of row/column addressing was the invention of the CPU chip attached to Random Access Memory, IMO"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "I think that we're only beginning to use scalable vector graphics in the form of SVG and variants of XML"
                                    }
                                ]
                            }
                        ],
                        "style": "bullet",
                        "indent": 0,
                        "border": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\n(... asking a more-knowledgable friend about this question ...)"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U5STGTB3J"
                ],
                "count": 1
            }
        ]
    }
]