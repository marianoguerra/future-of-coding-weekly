[
    {
        "user": "UGWUJUZHT",
        "type": "message",
        "ts": "1720190071.771209",
        "client_msg_id": "709bf8ef-9cfd-4194-a11c-1b635cfa8048",
        "text": "pond\u2019ring aloud:\n\nThe value of Gutenberg\u2019s printing press is that it taught kids to read, not to build printing presses.\n\nThe value of computers is that they teach kids to ???, not to write code.",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "rJw6F",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "pond\u2019ring aloud:\n\nThe value of Gutenberg\u2019s printing press is that it taught kids to read, not to build printing presses.\n\nThe value of computers is that they teach kids to ???, not to write code."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UGWUJUZHT",
        "type": "message",
        "ts": "1720190169.723829",
        "client_msg_id": "dd3e5184-cced-4dc7-85c2-a7dd11880114",
        "text": "pond\u2019ring aloud:\n\nI wonder if the problem with VPLs is the word \u201clanguage\u201d.\n\nIt appears to me that the word \u201cprogramming\u201d has been generally accepted to mean \u201csequential language\u201d or writing sequential codes (aka \u201ccoding\u201d). I view this view as being too restrictive. Programming is more than just commanding a machine with sequentialistic instructions. Programming a *CPU*, though, is - by definition - sequentialistic. But,,, programming a *machine(s)* need not be sequentialistic. Especially in the age of nothing-is-central. In fact, LLMs are an example of non-sequentialism. The machines that run LLMs were programmed, arduously, in sequential notation, but, the inner success of LLMs is not sequential, but something else (massively parallel plinko?).\n\nVPLs and DPLs are, to me, not sequentialistic things. Maybe they should be called \u201cnotations\u201d instead of \u201clanguages\u201d? VNP and DNP? Visual Notation for Programming, Diagrammatic Notation for Programming? [In which case, \u201cprogramming languages\u201d as we know them, are TNPs - Textual Notations for Programming].\n\nIn fact, programming is not the difficult part. Re-programming is the novel aspect of Design that computers bring to the world. We have been programming machines to do *single* things for centuries (using metal lathes, etc.). This time through, though, we have built machines capable of doing *many* things.",
        "team": "T5TCAFTA9",
        "thread_ts": "1720190169.723829",
        "reply_count": 10,
        "reply_users_count": 5,
        "latest_reply": "1720276359.939919",
        "reply_users": [
            "U01E8D4TS7M",
            "UGWUJUZHT",
            "U5STGTB3J",
            "U0378MDUG1Y",
            "UJBAJNFLK"
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "koQJx",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "pond\u2019ring aloud:\n\nI wonder if the problem with VPLs is the word \u201clanguage\u201d.\n\nIt appears to me that the word \u201cprogramming\u201d has been generally accepted to mean \u201csequential language\u201d or writing sequential codes (aka \u201ccoding\u201d). I view this view as being too restrictive. Programming is more than just commanding a machine with sequentialistic instructions. Programming a "
                            },
                            {
                                "type": "text",
                                "text": "CPU",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ", though, is - by definition - sequentialistic. But,,, programming a "
                            },
                            {
                                "type": "text",
                                "text": "machine(s)",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " need not be sequentialistic. Especially in the age of nothing-is-central. In fact, LLMs are an example of non-sequentialism. The machines that run LLMs were programmed, arduously, in sequential notation, but, the inner success of LLMs is not sequential, but something else (massively parallel plinko?).\n\nVPLs and DPLs are, to me, not sequentialistic things. Maybe they should be called \u201cnotations\u201d instead of \u201clanguages\u201d? VNP and DNP? Visual Notation for Programming, Diagrammatic Notation for Programming? [In which case, \u201cprogramming languages\u201d as we know them, are TNPs - Textual Notations for Programming].\n\nIn fact, programming is not the difficult part. Re-programming is the novel aspect of Design that computers bring to the world. We have been programming machines to do "
                            },
                            {
                                "type": "text",
                                "text": "single",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " things for centuries (using metal lathes, etc.). This time through, though, we have built machines capable of doing "
                            },
                            {
                                "type": "text",
                                "text": "many",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " things."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "clap",
                "users": [
                    "U015S8EC3B5"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U01E8D4TS7M",
        "type": "message",
        "ts": "1720190748.763829",
        "edited": {
            "user": "U01E8D4TS7M",
            "ts": "1720207231.000000"
        },
        "client_msg_id": "f06d05eb-4baa-4d80-bb32-9ec2bd80f67d",
        "text": "Related to my last post, where I believe we shouldn\u2019t make decisions outside the context of a problem or goal.\n\nI\u2019ve observed the same issue with secondary goals, where they are discussed outside the context of primary goals.\n\nI don\u2019t know if this bothers other people, but it bothers me a lot. Maybe I\u2019m not smart enough to see the implied connections.\n\nOne example I can give is that many times I\u2019ve been given the goal of \u201cconsistency,\u201d whether in the UI or the code style. I\u2019m not saying \u201cconsistency\u201d is a bad thing, but without connecting it to the primary pre-shared goal, the value of this secondary goal becomes trivial and nullified. Logically, it doesn\u2019t make sense either, especially for a start-up, because a start-up is doing something new, and you can\u2019t do new things by pursuing consistency. If we did things consistently, we\u2019d still be using XML instead of JSON.\n\nAgain, to be clear, I\u2019m not saying doing things consistently is bad. I\u2019m just saying that, for me, when given the goal of \u201cconsistency\u201d without the context of why it\u2019s important for our primary goal, I\u2019d be much more motivated.\n\nAnother example is \u201cpatterns.\u201d I think initially \u201cpatterns\u201d are just solutions to some pre-existing problems, but we put too much emphasis on them to the point where we forget about the goals of these patterns, and the patterns themselves become the goal. To be clear, I\u2019m not saying patterns are bad or that we shouldn\u2019t use them. We should know them, in the same way we should know other just-in-case knowledge, to perform better. Some patterns are just cool, and we derive joy from them, the same way we get joy from movies and music. I\u2019m just saying we probably shouldn\u2019t treat them as primary goals (unless in school, I guess, where you get points for implementing a pattern).\n\nNow that I think about it, this may just be a communication issue within an organization, where secondary goals are communicated without the connection to primary goals. I\u2019ve never worked in a big organization, and I wonder how they do it. Also, am I alone in this? Do other people feel demoralized too when given just a secondary goal?",
        "team": "T5TCAFTA9",
        "thread_ts": "1720190748.763829",
        "reply_count": 8,
        "reply_users_count": 2,
        "latest_reply": "1720300376.796119",
        "reply_users": [
            "U015S8EC3B5",
            "U01E8D4TS7M"
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "1SZ5T",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Related to my last post, where I believe we shouldn\u2019t make decisions outside the context of a problem or goal.\n\nI\u2019ve observed the same issue with secondary goals, where they are discussed outside the context of primary goals.\n\nI don\u2019t know if this bothers other people, but it bothers me a lot. Maybe I\u2019m not smart enough to see the implied connections.\n\nOne example I can give is that many times I\u2019ve been given the goal of \u201cconsistency,\u201d whether in the UI or the code style. I\u2019m not saying \u201cconsistency\u201d is a bad thing, but without connecting it to the primary pre-shared goal, the value of this secondary goal becomes trivial and nullified. Logically, it doesn\u2019t make sense either, especially for a start-up, because a start-up is doing something new, and you can\u2019t do new things by pursuing consistency. If we did things consistently, we\u2019d still be using XML instead of JSON.\n\nAgain, to be clear, I\u2019m not saying doing things consistently is bad. I\u2019m just saying that, for me, when given the goal of \u201cconsistency\u201d without the context of why it\u2019s important for our primary goal, I\u2019d be much more motivated.\n\nAnother example is \u201cpatterns.\u201d I think initially \u201cpatterns\u201d are just solutions to some pre-existing problems, but we put too much emphasis on them to the point where we forget about the goals of these patterns, and the patterns themselves become the goal. To be clear, I\u2019m not saying patterns are bad or that we shouldn\u2019t use them. We should know them, in the same way we should know other just-in-case knowledge, to perform better. Some patterns are just cool, and we derive joy from them, the same way we get joy from movies and music. I\u2019m just saying we probably shouldn\u2019t treat them as primary goals (unless in school, I guess, where you get points for implementing a pattern).\n\nNow that I think about it, this may just be a communication issue within an organization, where secondary goals are communicated without the connection to primary goals. I\u2019ve never worked in a big organization, and I wonder how they do it. Also, am I alone in this? Do other people feel demoralized too when given just a secondary goal?"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "100",
                "users": [
                    "UCUSW7WVD",
                    "U04E5QAD6DD"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "U01E8D4TS7M",
        "type": "message",
        "ts": "1720190918.263649",
        "client_msg_id": "06c8550e-16bb-4464-addc-416cc4b72ff7",
        "text": "On one end of the spectrum we have dumb machines, where we use \u201clanguage\u201d to make it do things, on the other end of the spectrum, we have human beings, we use \u201cX\u201d to make them do things. I think we need to find a word between \u201clanguage\u201d and \u201cX\u201d",
        "team": "T5TCAFTA9",
        "thread_ts": "1720190169.723829",
        "parent_user_id": "UGWUJUZHT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "q2DI/",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "On one end of the spectrum we have dumb machines, where we use \u201clanguage\u201d to make it do things, on the other end of the spectrum, we have human beings, we use \u201cX\u201d to make them do things. I think we need to find a word between \u201clanguage\u201d and \u201cX\u201d"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UGWUJUZHT",
        "type": "message",
        "ts": "1720193960.291349",
        "client_msg_id": "1f99ffd6-4574-4de1-a39e-2cf2facc502f",
        "text": "observation: Electrical Engineers create 2 manifestations of each circuit. (1) is the circuit itself and (2) a schematic on paper for other Engineers to read. You can understand (1), but you have to spend time to reverse-engineer what\u2019s there. #2 is (usually) more useful in communicating to other Engineers what is going on, without needing them to reverse engineer the actual circuit #1. You still have to spend a few years in university to understand #2, but, once you learn how to read #2, you can devise circuits and show other Engineers what you intended to accomplish. Likewise, Structural Engineers build bridges with bolts and I-beams, and built human-understandable drawings using blueprints. Programmers are trying to squeeze both #1 and #2 into the same notation. AFAICT, concern #1 usually wins and programmers have to spend time reverse-engineering code, since #2 doesn\u2019t exist. In programming, programmers *should* be able to create #1 from #2, but, instead programmers create #1 from #1 and leave #2 mostly unaddressed.",
        "team": "T5TCAFTA9",
        "thread_ts": "1720190169.723829",
        "parent_user_id": "UGWUJUZHT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "7yddY",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "observation: Electrical Engineers create 2 manifestations of each circuit. (1) is the circuit itself and (2) a schematic on paper for other Engineers to read. You can understand (1), but you have to spend time to reverse-engineer what\u2019s there. #2 is (usually) more useful in communicating to other Engineers what is going on, without needing them to reverse engineer the actual circuit #1. You still have to spend a few years in university to understand #2, but, once you learn how to read #2, you can devise circuits and show other Engineers what you intended to accomplish. Likewise, Structural Engineers build bridges with bolts and I-beams, and built human-understandable drawings using blueprints. Programmers are trying to squeeze both #1 and #2 into the same notation. AFAICT, concern #1 usually wins and programmers have to spend time reverse-engineering code, since #2 doesn\u2019t exist. In programming, programmers "
                            },
                            {
                                "type": "text",
                                "text": "should",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " be able to create #1 from #2, but, instead programmers create #1 from #1 and leave #2 mostly unaddressed."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U5STGTB3J",
        "type": "message",
        "ts": "1720194421.907399",
        "client_msg_id": "a56c0c1d-029f-41c6-83a4-0fb181a057cf",
        "text": "<@UGWUJUZHT> Programmers squeeze #1 and #2 together, only if you consider the code to be the product. However, what if you consider the (running) program the actual product? Wouldn\u2019t that put programmers back in line with electrical and structural engineers?\n\nA schematic or a blueprint are a state description optimized for legibility, so there is complexity missing, which is present in the instantiation of the schematic or blueprint in the real world. I believe the same could be said about the process description of an algorithm, which leaves out the actual values that are processed when the program runs.",
        "team": "T5TCAFTA9",
        "thread_ts": "1720190169.723829",
        "parent_user_id": "UGWUJUZHT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "CqOQV",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UGWUJUZHT"
                            },
                            {
                                "type": "text",
                                "text": " Programmers squeeze #1 and #2 together, only if you consider the code to be the product. However, what if you consider the (running) program the actual product? Wouldn\u2019t that put programmers back in line with electrical and structural engineers?\n\nA schematic or a blueprint are a state description optimized for legibility, so there is complexity missing, which is present in the instantiation of the schematic or blueprint in the real world. I believe the same could be said about the process description of an algorithm, which leaves out the actual values that are processed when the program runs."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "text": "<@UGWUJUZHT> love your thoughts here! I try to use \u201cnotation\u201d (or \u201cexecutable notation\u201d) as a replacement for \u201cprogramming language\u201d these days. It\u2019s more inclusive to non-textual programming languages and alternative paradigms of computing. \n\nYou might also like \u201cdiagrammatic\u201d from <https://github.com/Little-Languages/reading-club/blob/main/topics/visual%20notation%20and%20diagrams/Trace%2C%20Writing%2C%20Diagram-%20Reflections%20on%20Spatiality%2C%20Intuition%2C%20Graphical%20Practices%20and%20Thinking.pdf|https://github.com/Little-Languages/reading-club/blob/main/topics/visual%20notation%20and%20diagrams/Trace%2C%20Writing%2C%20Diagram-%20Reflections%20on%20Spatiality%2C%20Intuition%2C%20Graphical%20Practices%20and%20Thinking.pdf>\n\n",
        "files": [
            {
                "id": "F07BWKHLHGQ",
                "created": 1720195624,
                "timestamp": 1720195624,
                "name": "Image from iOS.jpg",
                "title": "Image from iOS",
                "mimetype": "image/jpeg",
                "filetype": "jpg",
                "pretty_type": "JPEG",
                "user": "U0378MDUG1Y",
                "user_team": "T5TCAFTA9",
                "editable": false,
                "size": 137634,
                "mode": "hosted",
                "is_external": false,
                "external_type": "",
                "is_public": true,
                "public_url_shared": false,
                "display_as_bot": false,
                "username": "",
                "subtype": "slack_image",
                "url_private": "https://files.slack.com/files-pri/T5TCAFTA9-F07BWKHLHGQ/image_from_ios.jpg",
                "url_private_download": "https://files.slack.com/files-pri/T5TCAFTA9-F07BWKHLHGQ/download/image_from_ios.jpg",
                "media_display_type": "unknown",
                "thumb_64": "https://files.slack.com/files-tmb/T5TCAFTA9-F07BWKHLHGQ-d218100004/image_from_ios_64.jpg",
                "thumb_80": "https://files.slack.com/files-tmb/T5TCAFTA9-F07BWKHLHGQ-d218100004/image_from_ios_80.jpg",
                "thumb_360": "https://files.slack.com/files-tmb/T5TCAFTA9-F07BWKHLHGQ-d218100004/image_from_ios_360.jpg",
                "thumb_360_w": 360,
                "thumb_360_h": 218,
                "thumb_480": "https://files.slack.com/files-tmb/T5TCAFTA9-F07BWKHLHGQ-d218100004/image_from_ios_480.jpg",
                "thumb_480_w": 480,
                "thumb_480_h": 290,
                "thumb_160": "https://files.slack.com/files-tmb/T5TCAFTA9-F07BWKHLHGQ-d218100004/image_from_ios_160.jpg",
                "thumb_720": "https://files.slack.com/files-tmb/T5TCAFTA9-F07BWKHLHGQ-d218100004/image_from_ios_720.jpg",
                "thumb_720_w": 720,
                "thumb_720_h": 435,
                "thumb_800": "https://files.slack.com/files-tmb/T5TCAFTA9-F07BWKHLHGQ-d218100004/image_from_ios_800.jpg",
                "thumb_800_w": 800,
                "thumb_800_h": 484,
                "thumb_960": "https://files.slack.com/files-tmb/T5TCAFTA9-F07BWKHLHGQ-d218100004/image_from_ios_960.jpg",
                "thumb_960_w": 960,
                "thumb_960_h": 581,
                "thumb_1024": "https://files.slack.com/files-tmb/T5TCAFTA9-F07BWKHLHGQ-d218100004/image_from_ios_1024.jpg",
                "thumb_1024_w": 1024,
                "thumb_1024_h": 619,
                "original_w": 1088,
                "original_h": 658,
                "thumb_tiny": "AwAdADC+5+bv+BpM/X/vo0rn5jTe1AC5+v8A30aXefamk8UUAP3n2pVYk4qOnJ1oAH+9Tac/3qb3xQAUUpFGKAEpyfeoVQRzTgoBzQB//9k=",
                "permalink": "https://futureofcoding.slack.com/files/U0378MDUG1Y/F07BWKHLHGQ/image_from_ios.jpg",
                "permalink_public": "https://slack-files.com/T5TCAFTA9-F07BWKHLHGQ-219bf2bbf4",
                "is_starred": false,
                "has_rich_preview": false,
                "file_access": "visible"
            }
        ],
        "upload": false,
        "user": "U0378MDUG1Y",
        "display_as_bot": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "iTZVT",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UGWUJUZHT"
                            },
                            {
                                "type": "text",
                                "text": " love your thoughts here! I try to use \u201cnotation\u201d (or \u201cexecutable notation\u201d) as a replacement for \u201cprogramming language\u201d these days. It\u2019s more inclusive to non-textual programming languages and alternative paradigms of computing. \n\nYou might also like \u201cdiagrammatic\u201d from "
                            },
                            {
                                "type": "link",
                                "url": "https://github.com/Little-Languages/reading-club/blob/main/topics/visual%20notation%20and%20diagrams/Trace%2C%20Writing%2C%20Diagram-%20Reflections%20on%20Spatiality%2C%20Intuition%2C%20Graphical%20Practices%20and%20Thinking.pdf",
                                "text": "https://github.com/Little-Languages/reading-club/blob/main/topics/visual%20notation%20and%20diagrams/Trace%2C%20Writing%2C%20Diagram-%20Reflections%20on%20Spatiality%2C%20Intuition%2C%20Graphical%20Practices%20and%20Thinking.pdf"
                            },
                            {
                                "type": "text",
                                "text": "\n\n"
                            }
                        ]
                    }
                ]
            }
        ],
        "type": "message",
        "ts": "1720195643.900529",
        "edited": {
            "user": "U0378MDUG1Y",
            "ts": "1720196460.000000"
        },
        "client_msg_id": "E8284B98-5BA9-4766-85B7-410496B694D6",
        "thread_ts": "1720190169.723829",
        "parent_user_id": "UGWUJUZHT",
        "reactions": [
            {
                "name": "eyes",
                "users": [
                    "UGWUJUZHT"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UGWUJUZHT",
        "type": "message",
        "ts": "1720196529.056219",
        "client_msg_id": "9394cbbc-87c6-410d-b7a5-0c6796de6190",
        "text": "<@U5STGTB3J>  Good point. In reading your reply, I begin to wonder if there\u2019s something between #1 and #2 (#1.5?) in software that isn\u2019t there in other kinds of engineering. I don\u2019t think that programmers are doing a good job of communicating to other programmers what their Design Intent (DI) is\u2026",
        "team": "T5TCAFTA9",
        "thread_ts": "1720190169.723829",
        "parent_user_id": "UGWUJUZHT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Y0560",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U5STGTB3J"
                            },
                            {
                                "type": "text",
                                "text": "  Good point. In reading your reply, I begin to wonder if there\u2019s something between #1 and #2 (#1.5?) in software that isn\u2019t there in other kinds of engineering. I don\u2019t think that programmers are doing a good job of communicating to other programmers what their Design Intent (DI) is\u2026"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJBAJNFLK",
        "type": "message",
        "ts": "1720199988.806949",
        "client_msg_id": "51a9e255-3a9d-46eb-b250-3ae30ab8831b",
        "text": "The closest to a design intent would be a formal specification.",
        "team": "T5TCAFTA9",
        "thread_ts": "1720190169.723829",
        "parent_user_id": "UGWUJUZHT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "yYfVQ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The closest to a design intent would be a formal specification."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U5STGTB3J",
        "type": "message",
        "ts": "1720200523.635419",
        "client_msg_id": "2a636f21-bfff-46a8-b9b8-62d76bc848d9",
        "text": "<@UGWUJUZHT> The only difference I see between electrical/structural engineers and programmers in this example is that the former create _state_ descriptions (blueprints), whereas the latter create _process_ descriptions (recipes).\n\u2022 _State_ descriptions are _declarative_ and describe the _spatial structure_ of the result.\n\u2022 _Process_ descriptions are _imperative_ and describe the _temporal behavior_ of how to _generate_ a result.\nBut both are generalizable in the sense that they are both abstract descriptions, leaving out detail.\n\nI suspect what makes them feel qualitatively different is the cross-over from temporal to spatial domain in one that\u2019s missing in the other. When programmers have to inspect the actual result \u2014 the running program in a debugger that makes state visible \u2014 then they \u201chave arrived\u201d on the same level the electrical/structural engineers operate at. But usually programmers describe the thing that \u201cbuilds\u201d the thing, whereas engineers build the thing. (Which is why I asked previously _<https://stefanlesser.substack.com/p/to-build-or-not-to-build|To build or not to build?>_)\n\n\u201cBut what about _declarative_ programming languages?\u201d\nWhile they tend to describe results and are less concerned about the process, they are still ultimately generative \u2014 they generate a result from specific input (functional programming) or from axioms (logical programming).\n\n_(I\u2019m just thinking out loud because I just read_ <https://curtclifton.net/papers/MoseleyMarks06a.pdf|Out of the Tar Pit> _again and thought I try applying what I learned\u2026)_",
        "team": "T5TCAFTA9",
        "thread_ts": "1720190169.723829",
        "parent_user_id": "UGWUJUZHT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "sJC0r",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UGWUJUZHT"
                            },
                            {
                                "type": "text",
                                "text": " The only difference I see between electrical/structural engineers and programmers in this example is that the former create "
                            },
                            {
                                "type": "text",
                                "text": "state",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " descriptions (blueprints), whereas the latter create "
                            },
                            {
                                "type": "text",
                                "text": "process",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " descriptions (recipes).\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "State",
                                        "style": {
                                            "italic": true
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "text": " descriptions are "
                                    },
                                    {
                                        "type": "text",
                                        "text": "declarative",
                                        "style": {
                                            "italic": true
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "text": " and describe the "
                                    },
                                    {
                                        "type": "text",
                                        "text": "spatial structure",
                                        "style": {
                                            "italic": true
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "text": " of the result."
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Process",
                                        "style": {
                                            "italic": true
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "text": " descriptions are "
                                    },
                                    {
                                        "type": "text",
                                        "text": "imperative",
                                        "style": {
                                            "italic": true
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "text": " and describe the "
                                    },
                                    {
                                        "type": "text",
                                        "text": "temporal behavior",
                                        "style": {
                                            "italic": true
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "text": " of how to "
                                    },
                                    {
                                        "type": "text",
                                        "text": "generate",
                                        "style": {
                                            "italic": true
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "text": " a result."
                                    }
                                ]
                            }
                        ],
                        "style": "bullet",
                        "indent": 0,
                        "border": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "But both are generalizable in the sense that they are both abstract descriptions, leaving out detail.\n\nI suspect what makes them feel qualitatively different is the cross-over from temporal to spatial domain in one that\u2019s missing in the other. When programmers have to inspect the actual result \u2014 the running program in a debugger that makes state visible \u2014 then they \u201chave arrived\u201d on the same level the electrical/structural engineers operate at. But usually programmers describe the thing that \u201cbuilds\u201d the thing, whereas engineers build the thing. (Which is why I asked previously "
                            },
                            {
                                "type": "link",
                                "url": "https://stefanlesser.substack.com/p/to-build-or-not-to-build",
                                "text": "To build or not to build?",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ")\n\n\u201cBut what about "
                            },
                            {
                                "type": "text",
                                "text": "declarative",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " programming languages?\u201d\nWhile they tend to describe results and are less concerned about the process, they are still ultimately generative \u2014 they generate a result from specific input (functional programming) or from axioms (logical programming).\n\n"
                            },
                            {
                                "type": "text",
                                "text": "(I\u2019m just thinking out loud because I just read ",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "link",
                                "url": "https://curtclifton.net/papers/MoseleyMarks06a.pdf",
                                "text": "Out of the Tar Pit"
                            },
                            {
                                "type": "text",
                                "text": " again and thought I try applying what I learned\u2026)",
                                "style": {
                                    "italic": true
                                }
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U015S8EC3B5",
        "type": "message",
        "ts": "1720234348.121089",
        "client_msg_id": "45f401f6-7bf0-40a1-93a6-6c20f0609dde",
        "text": "I get demoralized too. What usually happens is I start asking questions like \"consistent with what?\" Then I don't get a satisfying answer, I realize people setting the goals have no idea what they're doing, and my mood spirals downward from there.",
        "team": "T5TCAFTA9",
        "thread_ts": "1720190748.763829",
        "parent_user_id": "U01E8D4TS7M",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "YlR3C",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I get demoralized too. What usually happens is I start asking questions like \"consistent with what?\" Then I don't get a satisfying answer, I realize people setting the goals have no idea what they're doing, and my mood spirals downward from there."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U01E8D4TS7M",
        "type": "message",
        "ts": "1720237251.460149",
        "client_msg_id": "a9793a49-65d1-464d-b032-4526df8f7268",
        "text": "<@U015S8EC3B5> I hear you bro. How do you cope?",
        "team": "T5TCAFTA9",
        "thread_ts": "1720190748.763829",
        "parent_user_id": "U01E8D4TS7M",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "bZh3Z",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U015S8EC3B5"
                            },
                            {
                                "type": "text",
                                "text": " I hear you bro. How do you cope?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U01E8D4TS7M",
        "type": "message",
        "ts": "1720237299.302229",
        "client_msg_id": "fab896c7-e98d-4e1b-91f2-649800b84092",
        "text": "I\u2019m taking unpaid time off right now and taking to therapist. To be fair I have more struggles than this, and a lot of the struggles I have is from myself",
        "team": "T5TCAFTA9",
        "thread_ts": "1720190748.763829",
        "parent_user_id": "U01E8D4TS7M",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "i9lms",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I\u2019m taking unpaid time off right now and taking to therapist. To be fair I have more struggles than this, and a lot of the struggles I have is from myself"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UGWUJUZHT",
        "type": "message",
        "ts": "1720267903.315089",
        "client_msg_id": "5275e2b4-e89f-4eef-b66b-fa0870810e76",
        "text": "<@UJBAJNFLK> Formal specifications are too flat (not layered) and too detailed and too ivory-tower. Comments are disconnected and become misleading. I hope to prove that we can do better.",
        "team": "T5TCAFTA9",
        "thread_ts": "1720190169.723829",
        "parent_user_id": "UGWUJUZHT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "/dyxn",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UJBAJNFLK"
                            },
                            {
                                "type": "text",
                                "text": " Formal specifications are too flat (not layered) and too detailed and too ivory-tower. Comments are disconnected and become misleading. I hope to prove that we can do better."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "100",
                "users": [
                    "UJBAJNFLK"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UGWUJUZHT",
        "type": "message",
        "ts": "1720267956.233259",
        "client_msg_id": "590769fb-9580-4157-be28-26d1a73dc0a4",
        "text": "<@U5STGTB3J> I like your use of these words. I agree that blueprints are state descriptions. I agree that programs are process descriptions. I believe that electronics schematics are *both*, though - blueprints *and* recipes. Schematics contain a lot of implementation details. I think that the difference between schematics and code is that you can lasso areas on schematics and treat them in a stand-alone manner, whereas you can\u2019t do this with code (programmers are only \u201cfooled\u201d into believing that they can). Items on electronic schematics are loosely-coupled (asynchronous) whereas items in code are tightly-coupled (synchronous). I hope to elaborate\u2026",
        "team": "T5TCAFTA9",
        "thread_ts": "1720190169.723829",
        "parent_user_id": "UGWUJUZHT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "kmvBQ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U5STGTB3J"
                            },
                            {
                                "type": "text",
                                "text": " I like your use of these words. I agree that blueprints are state descriptions. I agree that programs are process descriptions. I believe that electronics schematics are "
                            },
                            {
                                "type": "text",
                                "text": "both",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ", though - blueprints "
                            },
                            {
                                "type": "text",
                                "text": "and",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " recipes. Schematics contain a lot of implementation details. I think that the difference between schematics and code is that you can lasso areas on schematics and treat them in a stand-alone manner, whereas you can\u2019t do this with code (programmers are only \u201cfooled\u201d into believing that they can). Items on electronic schematics are loosely-coupled (asynchronous) whereas items in code are tightly-coupled (synchronous). I hope to elaborate\u2026"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U015S8EC3B5",
        "type": "message",
        "ts": "1720270105.891169",
        "client_msg_id": "49dc21c5-670c-48a6-bfe2-6ce74056ed32",
        "text": "At the best of times, I realize quickly and try to find a kindred spirit, someone else who sees the insanity I see. I've found that most people don't care. They want to code and be left alone.",
        "team": "T5TCAFTA9",
        "thread_ts": "1720190748.763829",
        "parent_user_id": "U01E8D4TS7M",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "je/1N",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "At the best of times, I realize quickly and try to find a kindred spirit, someone else who sees the insanity I see. I've found that most people don't care. They want to code and be left alone."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U01E8D4TS7M",
        "type": "message",
        "ts": "1720276183.362419",
        "client_msg_id": "55233B7E-1FCC-4E16-B9C2-546A00150637",
        "text": "That\u2019s a good strategy! Thanks for sharing that ",
        "team": "T5TCAFTA9",
        "thread_ts": "1720190748.763829",
        "parent_user_id": "U01E8D4TS7M",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "gq/+l",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "That\u2019s"
                            },
                            {
                                "type": "text",
                                "text": " a good strategy! Thanks for sharing that "
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U01E8D4TS7M",
        "type": "message",
        "ts": "1720276195.138489",
        "client_msg_id": "A27539A0-6618-415D-8037-391C16DD70BD",
        "text": "I need to find some friends ",
        "team": "T5TCAFTA9",
        "thread_ts": "1720190748.763829",
        "parent_user_id": "U01E8D4TS7M",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "DsTe9",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I need to find some friends "
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJBAJNFLK",
        "type": "message",
        "ts": "1720276359.939919",
        "client_msg_id": "dfaf8d44-af03-4308-b08a-46f2c505cadf",
        "text": "<@UGWUJUZHT> I fully agree that the state of formal methods today needs some serious improvement. There are some good ideas for getting out of the ivory tower in <https://www.youtube.com/watch?v=ehrYEdt8NKE|this talk> by Shriram Krishnamurthi. As for flatness, that's something I write about in my submission to Onwards! Essays this year. And something I am working on under the title \"Digital Scientific Notations\", which are just formal specifications under another name and with a different intent.",
        "team": "T5TCAFTA9",
        "thread_ts": "1720190169.723829",
        "parent_user_id": "UGWUJUZHT",
        "attachments": [
            {
                "from_url": "https://www.youtube.com/watch?v=ehrYEdt8NKE",
                "service_icon": "https://a.slack-edge.com/80588/img/unfurl_icons/youtube.png",
                "thumb_url": "https://i.ytimg.com/vi/ehrYEdt8NKE/hqdefault.jpg",
                "thumb_width": 480,
                "thumb_height": 360,
                "video_html": "<iframe width=\"400\" height=\"225\" src=\"https://www.youtube.com/embed/ehrYEdt8NKE?feature=oembed&autoplay=1&iv_load_policy=3\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" referrerpolicy=\"strict-origin-when-cross-origin\" allowfullscreen title=\"Human Factors of Formal Methods - Shriram Krishnamurthi - ACM INDIA Annual Event\"></iframe>",
                "video_html_width": 400,
                "video_html_height": 225,
                "id": 1,
                "original_url": "https://www.youtube.com/watch?v=ehrYEdt8NKE",
                "fallback": "YouTube Video: Human Factors of Formal Methods - Shriram Krishnamurthi - ACM INDIA Annual Event",
                "title": "Human Factors of Formal Methods - Shriram Krishnamurthi - ACM INDIA Annual Event",
                "title_link": "https://www.youtube.com/watch?v=ehrYEdt8NKE",
                "author_name": "NPTEL - Special Lecture Series",
                "author_link": "https://www.youtube.com/@nptel-speciallectureseries6651",
                "service_name": "YouTube",
                "service_url": "https://www.youtube.com/"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "uofQ3",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UGWUJUZHT"
                            },
                            {
                                "type": "text",
                                "text": " I fully agree that the state of formal methods today needs some serious improvement. There are some good ideas for getting out of the ivory tower in "
                            },
                            {
                                "type": "link",
                                "url": "https://www.youtube.com/watch?v=ehrYEdt8NKE",
                                "text": "this talk"
                            },
                            {
                                "type": "text",
                                "text": " by Shriram Krishnamurthi. As for flatness, that's something I write about in my submission to Onwards! Essays this year. And something I am working on under the title \"Digital Scientific Notations\", which are just formal specifications under another name and with a different intent."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "eyes",
                "users": [
                    "UGWUJUZHT"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U015S8EC3B5",
        "type": "message",
        "ts": "1720297692.361069",
        "client_msg_id": "753e1fdf-3249-4d29-93ef-e9dde2a44879",
        "text": "The phenomenon is normal, but I need someone to commiserate with about it privately. I've found that if I do it publicly, people think I'm complaining.",
        "team": "T5TCAFTA9",
        "thread_ts": "1720190748.763829",
        "parent_user_id": "U01E8D4TS7M",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "d7hUB",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The phenomenon is normal, but I need someone to commiserate with about it privately. I've found that if I do it publicly, people think I'm complaining."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U01E8D4TS7M",
        "type": "message",
        "ts": "1720300376.796119",
        "client_msg_id": "9905ADA8-A4C6-4A89-A7C5-BEE14F940DC0",
        "text": "Feel free to complain to me next time when this happens ",
        "team": "T5TCAFTA9",
        "thread_ts": "1720190748.763829",
        "parent_user_id": "U01E8D4TS7M",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "jVcmS",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Feel free to complain to me next time when this happens "
                            }
                        ]
                    }
                ]
            }
        ]
    }
]