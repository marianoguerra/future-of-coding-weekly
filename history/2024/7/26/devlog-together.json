[
    {
        "text": "Hello- little update on <http://www.holograph.so|www.holograph.so> - formerly known as the <https://futureofcoding.slack.com/archives/CCL5VVBAN/p1716413598853019|propagator simulator>- I am working on performance had had the nerdiest proud moment ever and figured of all people, ya'll would appreciate it.\n\nI built a propagation speed profiler in holograph to test how fast propagation was occurring for a little recursively incrementing loop (in the grey box). Im using a buffer to collect and average the values over time and another buffer to collect and display averages as a chart. You can see the propagation speed and compare it with the total Propagations Per Second (PPS in the top left). Before this work i was at a hard cap of 60 pps and now total pps often gets over 300. Still a long road ahead but it feels like a big win right now :tada:\n\nIn any case, this example demonstrates major stuff added since my first post here:\n\u2022 Get and set shape properties\n\u2022 Trigger click events\n\u2022 Dashed arrows that don't fire propagators\n\u2022 Async functions/fetch/await syntax\n\u2022 Lots of cool examples to explore- including some made my folk here :)\nHope ya'll enjoyed the update! If ya'll find anything wonky or have ideas let me know !",
        "files": [
            {
                "id": "F07ECFZPEJG",
                "created": 1722024135,
                "timestamp": 1722024135,
                "name": "ezgif-3-b2fdc5e7db.gif",
                "title": "ezgif-3-b2fdc5e7db.gif",
                "mimetype": "image/gif",
                "filetype": "gif",
                "pretty_type": "GIF",
                "user": "U06BUK2M2RH",
                "user_team": "T5TCAFTA9",
                "editable": false,
                "size": 1746763,
                "mode": "hosted",
                "is_external": false,
                "external_type": "",
                "is_public": true,
                "public_url_shared": false,
                "display_as_bot": false,
                "username": "",
                "url_private": "https://files.slack.com/files-pri/T5TCAFTA9-F07ECFZPEJG/ezgif-3-b2fdc5e7db.gif",
                "url_private_download": "https://files.slack.com/files-pri/T5TCAFTA9-F07ECFZPEJG/download/ezgif-3-b2fdc5e7db.gif",
                "media_display_type": "unknown",
                "thumb_64": "https://files.slack.com/files-tmb/T5TCAFTA9-F07ECFZPEJG-aae03be753/ezgif-3-b2fdc5e7db_64.png",
                "thumb_80": "https://files.slack.com/files-tmb/T5TCAFTA9-F07ECFZPEJG-aae03be753/ezgif-3-b2fdc5e7db_80.png",
                "thumb_360": "https://files.slack.com/files-tmb/T5TCAFTA9-F07ECFZPEJG-aae03be753/ezgif-3-b2fdc5e7db_360.png",
                "thumb_360_w": 360,
                "thumb_360_h": 352,
                "thumb_480": "https://files.slack.com/files-tmb/T5TCAFTA9-F07ECFZPEJG-aae03be753/ezgif-3-b2fdc5e7db_480.png",
                "thumb_480_w": 480,
                "thumb_480_h": 470,
                "thumb_160": "https://files.slack.com/files-tmb/T5TCAFTA9-F07ECFZPEJG-aae03be753/ezgif-3-b2fdc5e7db_160.png",
                "thumb_360_gif": "https://files.slack.com/files-tmb/T5TCAFTA9-F07ECFZPEJG-aae03be753/ezgif-3-b2fdc5e7db_360.gif",
                "thumb_480_gif": "https://files.slack.com/files-tmb/T5TCAFTA9-F07ECFZPEJG-aae03be753/ezgif-3-b2fdc5e7db_480.gif",
                "original_w": 600,
                "original_h": 587,
                "deanimate": "https://files.slack.com/files-tmb/T5TCAFTA9-F07ECFZPEJG-aae03be753/ezgif-3-b2fdc5e7db_deanimate.png",
                "deanimate_gif": "https://files.slack.com/files-tmb/T5TCAFTA9-F07ECFZPEJG-aae03be753/ezgif-3-b2fdc5e7db_deanimate_gif.png",
                "thumb_tiny": "AwAuADDR289aMUHOeBRyQe1ABijJzxijtTWB3ZAoAdz7UtMAPp+tPoAKKKKAEpGPuRTqaX7c0AN59TTwMdTmmDk9RxT80AIx59xQGA4oKknPFGw+o/KgBcj1ppx2xTgCD1paAI8/SngetLgelFAH/9k=",
                "permalink": "https://futureofcoding.slack.com/files/U06BUK2M2RH/F07ECFZPEJG/ezgif-3-b2fdc5e7db.gif",
                "permalink_public": "https://slack-files.com/T5TCAFTA9-F07ECFZPEJG-9d16d604dc",
                "is_starred": false,
                "has_rich_preview": false,
                "file_access": "visible"
            }
        ],
        "upload": false,
        "user": "U06BUK2M2RH",
        "display_as_bot": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "y435Y",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Hello- little update on "
                            },
                            {
                                "type": "link",
                                "url": "http://www.holograph.so",
                                "text": "www.holograph.so"
                            },
                            {
                                "type": "text",
                                "text": " - formerly known as the "
                            },
                            {
                                "type": "link",
                                "url": "https://futureofcoding.slack.com/archives/CCL5VVBAN/p1716413598853019",
                                "text": "propagator simulator"
                            },
                            {
                                "type": "text",
                                "text": "- I am working on performance had had the nerdiest proud moment ever and figured of all people, ya'll would appreciate it.\n\nI built a propagation speed profiler in holograph to test how fast propagation was occurring for a little recursively incrementing loop (in the grey box). Im using a buffer to collect and average the values over time and another buffer to collect and display averages as a chart. You can see the propagation speed and compare it with the total Propagations Per Second (PPS in the top left). Before this work i was at a hard cap of 60 pps and now total pps often gets over 300. Still a long road ahead but it feels like a big win right now "
                            },
                            {
                                "type": "emoji",
                                "name": "tada",
                                "unicode": "1f389"
                            },
                            {
                                "type": "text",
                                "text": "\n\nIn any case, this example demonstrates major stuff added since my first post here:\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Get and set shape properties"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Trigger click events"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Dashed arrows that don't fire propagators"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Async functions/fetch/await syntax"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Lots of cool examples to explore- including some made my folk here :)"
                                    }
                                ]
                            }
                        ],
                        "style": "bullet",
                        "indent": 0,
                        "offset": 0,
                        "border": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nHope ya'll enjoyed the update! If ya'll find anything wonky or have ideas let me know !"
                            }
                        ]
                    }
                ]
            }
        ],
        "type": "message",
        "ts": "1722025110.960059",
        "edited": {
            "user": "U06BUK2M2RH",
            "ts": "1722030193.000000"
        },
        "client_msg_id": "c59f44d5-5205-4fe5-a662-5546703c2a57",
        "thread_ts": "1722025110.960059",
        "reply_count": 4,
        "reply_users_count": 3,
        "latest_reply": "1722091824.516309",
        "reply_users": [
            "UC2A2ARPT",
            "U06BUK2M2RH",
            "U0378MDUG1Y"
        ],
        "is_locked": false,
        "subscribed": false,
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UFEQUBNNT",
                    "U03R0B9U1GD",
                    "U0123H7JRDM",
                    "UML4ZEKDK",
                    "UCUSW7WVD",
                    "UJBAJNFLK"
                ],
                "count": 6
            },
            {
                "name": "cake",
                "users": [
                    "UC2A2ARPT",
                    "U013ZLJARC7"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1722030718.393509",
        "client_msg_id": "7c2ab83c-1b88-4607-9420-042f941e51b6",
        "text": "Do you know what the current bottleneck is?\n\nLike, if you run this without rendering, does it get 100x faster?",
        "team": "T5TCAFTA9",
        "thread_ts": "1722025110.960059",
        "parent_user_id": "U06BUK2M2RH",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Z8FzF",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Do you know what the current bottleneck is?\n\nLike, if you run this without rendering, does it get 100x faster?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "text": "I wish. Rendering is batched and throttled to requestAnimationFrame and rendering together takes maybe 10% cpu (purple)? The main propagate function is maybe 50% (cyan). Maybe 20% idle (all propagation is async/settimeout rn so min 4ms delay there). Going to have to really optimize the propagate function to really push the limit which shouldn\u2019t be too bad since it\u2019s currently garbage. And reduce unnecessary propagation. And parallelizing/webworkers. And eventually I\u2019ll probs want the main propagation logic in c/wasm. Just gonna be a slog haha",
        "files": [
            {
                "id": "F07EABK1XUK",
                "created": 1722031029,
                "timestamp": 1722031029,
                "name": "Screenshot 2024-07-26 at 3.55.37\u202fPM.png",
                "title": "Screenshot 2024-07-26 at 3.55.37\u202fPM",
                "mimetype": "image/png",
                "filetype": "png",
                "pretty_type": "PNG",
                "user": "U06BUK2M2RH",
                "user_team": "T5TCAFTA9",
                "editable": false,
                "size": 83777,
                "mode": "hosted",
                "is_external": false,
                "external_type": "",
                "is_public": true,
                "public_url_shared": false,
                "display_as_bot": false,
                "username": "",
                "url_private": "https://files.slack.com/files-pri/T5TCAFTA9-F07EABK1XUK/screenshot_2024-07-26_at_3.55.37___pm.png",
                "url_private_download": "https://files.slack.com/files-pri/T5TCAFTA9-F07EABK1XUK/download/screenshot_2024-07-26_at_3.55.37___pm.png",
                "media_display_type": "unknown",
                "thumb_64": "https://files.slack.com/files-tmb/T5TCAFTA9-F07EABK1XUK-80dbed05e3/screenshot_2024-07-26_at_3.55.37___pm_64.png",
                "thumb_80": "https://files.slack.com/files-tmb/T5TCAFTA9-F07EABK1XUK-80dbed05e3/screenshot_2024-07-26_at_3.55.37___pm_80.png",
                "thumb_360": "https://files.slack.com/files-tmb/T5TCAFTA9-F07EABK1XUK-80dbed05e3/screenshot_2024-07-26_at_3.55.37___pm_360.png",
                "thumb_360_w": 360,
                "thumb_360_h": 341,
                "thumb_480": "https://files.slack.com/files-tmb/T5TCAFTA9-F07EABK1XUK-80dbed05e3/screenshot_2024-07-26_at_3.55.37___pm_480.png",
                "thumb_480_w": 480,
                "thumb_480_h": 455,
                "thumb_160": "https://files.slack.com/files-tmb/T5TCAFTA9-F07EABK1XUK-80dbed05e3/screenshot_2024-07-26_at_3.55.37___pm_160.png",
                "original_w": 645,
                "original_h": 611,
                "thumb_tiny": "AwAtADCIRMf4gPzo8lv74/Wry28nVpmHsDS/Zz/z2k/OmIoGFu0g/Wl8pv7w/Wr/ANnb/ntJ+dJ9nb/ntJ+dICh5Jx98frR5Lf3wfar/ANnP/PaT86GgIUnzn4HrTAk85P8Anon/AH1R50f/AD0T/voVQECFQefSkNvHx7nFTcZoedH/AM9E/wC+qPOj/wCeif8AfVZkcKOCeRg4/Wnm2jBOSeMUXA0POj/56J/31SPNGUYeYnT+9VD7NH70j26KCeeKLgV/NbbjJo858AZ6HNAAJAx1puBxVXQhVkZc4PWlMzE5B7UgA496AAcfWi6EKJWHc0GViuM/WkAHH1pABg0XQz//2Q==",
                "permalink": "https://futureofcoding.slack.com/files/U06BUK2M2RH/F07EABK1XUK/screenshot_2024-07-26_at_3.55.37___pm.png",
                "permalink_public": "https://slack-files.com/T5TCAFTA9-F07EABK1XUK-7d0c948652",
                "is_starred": false,
                "has_rich_preview": false,
                "file_access": "visible"
            }
        ],
        "upload": false,
        "user": "U06BUK2M2RH",
        "display_as_bot": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "oYzmb",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I wish. Rendering is batched and throttled to requestAnimationFrame and rendering together takes maybe 10% cpu (purple)? The main propagate function is maybe 50% (cyan). Maybe 20% idle (all propagation is async/settimeout rn so min 4ms delay there). Going to have to really optimize the propagate function to really push the limit which "
                            },
                            {
                                "type": "text",
                                "text": "shouldn\u2019t"
                            },
                            {
                                "type": "text",
                                "text": " be too bad since it\u2019s currently garbage. And reduce unnecessary propagation. And parallelizing/webworkers. And eventually I\u2019ll probs want the main propagation logic in c/wasm. Just gonna be a slog haha"
                            }
                        ]
                    }
                ]
            }
        ],
        "type": "message",
        "ts": "1722031389.546039",
        "client_msg_id": "9CB454D6-4E1F-47BE-850D-18FEF83C54B1",
        "thread_ts": "1722025110.960059",
        "parent_user_id": "U06BUK2M2RH"
    },
    {
        "user": "U0378MDUG1Y",
        "type": "message",
        "ts": "1722061276.933679",
        "client_msg_id": "D978E5F0-1406-4D35-B0C8-B94FE9B02E1D",
        "text": "Are you still diffing tldraw nodes of each update?",
        "team": "T5TCAFTA9",
        "thread_ts": "1722025110.960059",
        "parent_user_id": "U06BUK2M2RH",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "JF5WR",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Are you still diffing tldraw nodes of each update?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U06BUK2M2RH",
        "type": "message",
        "ts": "1722091824.516309",
        "client_msg_id": "1DCBF3CE-9AD5-4B88-9676-3A0ABB986749",
        "text": "Each update is constructing a partial shape object, and if it causes a downstream update, it recurses. Upon user actions, TL is handling diffing and firing a callback with changes which initiates update loop. Does that answer your question?",
        "team": "T5TCAFTA9",
        "thread_ts": "1722025110.960059",
        "parent_user_id": "U06BUK2M2RH",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "xGKhD",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Each update is constructing a partial shape object, and if it causes a downstream update, it recurses. Upon user actions, TL is handling diffing and firing a callback with changes which initiates update loop. Does that answer your question?"
                            }
                        ]
                    }
                ]
            }
        ]
    }
]