[
    {
        "user": "UJFN50C00",
        "type": "message",
        "ts": "1722853687.265869",
        "client_msg_id": "F70E1494-2D19-435C-8FDE-4AD0AF4EC0DD",
        "text": "<@UCUSW7WVD> is that your blog? <http://akkartik.name/post/programming-2024|http://akkartik.name/post/programming-2024>",
        "team": "T5TCAFTA9",
        "thread_ts": "1722853687.265869",
        "reply_count": 3,
        "reply_users_count": 3,
        "latest_reply": "1722956240.985899",
        "reply_users": [
            "UCUSW7WVD",
            "UJFN50C00",
            "UJBAJNFLK"
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "5EQi9",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UCUSW7WVD"
                            },
                            {
                                "type": "text",
                                "text": " is that your blog? "
                            },
                            {
                                "type": "link",
                                "url": "http://akkartik.name/post/programming-2024",
                                "text": "http://akkartik.name/post/programming-2024"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1::skin-tone-3",
                "users": [
                    "UCUSW7WVD"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1722914492.098589",
        "client_msg_id": "e3743612-9c7e-4041-aab4-d9b8bc3fbfc7",
        "text": "I'd love to hear what you and others think of it. This was a summary and conclusion to a series of my posts here in <#C03RR0W5DGC|>.",
        "team": "T5TCAFTA9",
        "thread_ts": "1722853687.265869",
        "parent_user_id": "UJFN50C00",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "1mXhe",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I'd love to hear what you and others think of it. This was a summary and conclusion to a series of my posts here in "
                            },
                            {
                                "type": "channel",
                                "channel_id": "C03RR0W5DGC"
                            },
                            {
                                "type": "text",
                                "text": "."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJFN50C00",
        "type": "message",
        "ts": "1722946618.737869",
        "client_msg_id": "096BACFB-751A-45BC-BC71-9BCDD29CE132",
        "text": "Yes some parts resonated with me. It reminded me of my own notes which I kept private. Looking forward to find a opportunity to exchange on these ideas. ",
        "team": "T5TCAFTA9",
        "thread_ts": "1722853687.265869",
        "parent_user_id": "UJFN50C00",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "LptqH",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yes some parts resonated with me"
                            },
                            {
                                "type": "text",
                                "text": "."
                            },
                            {
                                "type": "text",
                                "text": " It reminded me of my own notes which I kept private"
                            },
                            {
                                "type": "text",
                                "text": "."
                            },
                            {
                                "type": "text",
                                "text": " Looking forward to find a opportunity to exchange on these ideas"
                            },
                            {
                                "type": "text",
                                "text": "."
                            },
                            {
                                "type": "text",
                                "text": " "
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UCUSW7WVD"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UJBAJNFLK",
        "type": "message",
        "ts": "1722956240.985899",
        "client_msg_id": "c766b2b2-4c9e-41aa-8dd0-3581f75b7721",
        "text": "Interesting notes!\n\nFirst reaction: the title says \"how\" but not \"what\". I think the two go together by necessity. If you first decide, in the abstract, _how_ you want to program, you end up constraining _what_ you can program. Which is fine, of course, if you are aware of it and give priority to methodology. And I like reading about such approaches because my own is almost the opposite: start from _what_ and then figuring out _how_.\n\nAnother surprise for me is the focus on \"a program\", meaning a relatively autonomous unit of software. In the context of situated software, which I am also a big fan of, this looks like an unwelcome constraint. My own tendency at the moment is the opposite: build extensions/plugins to frameworks such as Glamorous Toolkit (or my own Common Lisp inspector framework) to profit from their affordances and keep the problem-specific code small. But then, this means accepting large dependencies. In terms of durability, a \"program\" is probably the better bet.\n\nThe nine-point synthesis is very interesting. Points 1-3 agree with my own experience. Also 5 and 6. Point 4 is one reason why I like building on a framework: it makes experimentation cheaper (see point 7!). At the cost of durability. Tough trade-off.\n\nPoint 9 reminds me of Gilbert Simondon's \"The mode of existence of technical objects\". He considers a technical object mature when it no longer resembles independent parts bolted together. A single design taking into account everything all at once.",
        "team": "T5TCAFTA9",
        "thread_ts": "1722853687.265869",
        "parent_user_id": "UJFN50C00",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "m6P2Z",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Interesting notes!\n\nFirst reaction: the title says \"how\" but not \"what\". I think the two go together by necessity. If you first decide, in the abstract, "
                            },
                            {
                                "type": "text",
                                "text": "how",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " you want to program, you end up constraining "
                            },
                            {
                                "type": "text",
                                "text": "what",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " you can program. Which is fine, of course, if you are aware of it and give priority to methodology. And I like reading about such approaches because my own is almost the opposite: start from "
                            },
                            {
                                "type": "text",
                                "text": "what",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " and then figuring out "
                            },
                            {
                                "type": "text",
                                "text": "how",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ".\n\nAnother surprise for me is the focus on \"a program\", meaning a relatively autonomous unit of software. In the context of situated software, which I am also a big fan of, this looks like an unwelcome constraint. My own tendency at the moment is the opposite: build extensions/plugins to frameworks such as Glamorous Toolkit (or my own Common Lisp inspector framework) to profit from their affordances and keep the problem-specific code small. But then, this means accepting large dependencies. In terms of durability, a \"program\" is probably the better bet.\n\nThe nine-point synthesis is very interesting. Points 1-3 agree with my own experience. Also 5 and 6. Point 4 is one reason why I like building on a framework: it makes experimentation cheaper (see point 7!). At the cost of durability. Tough trade-off.\n\nPoint 9 reminds me of Gilbert Simondon's \"The mode of existence of technical objects\". He considers a technical object mature when it no longer resembles independent parts bolted together. A single design taking into account everything all at once."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UCUSW7WVD"
                ],
                "count": 1
            }
        ]
    }
]