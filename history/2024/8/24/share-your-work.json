[
    {
        "user": "UBN9AFS0N",
        "type": "message",
        "ts": "1724493284.880639",
        "client_msg_id": "a9249f69-872d-4e5f-bd4e-ed8530ec5a94",
        "text": ":vhs: Bootstrapping OOP Part 3: Who Parses the Parser?\n\nHow do we feed the prelude if there's no parser (yet)?\n\n:bulb: If code is data then a data serialization format is a binary representation of a program\n\n:writing_hand: <https://marianoguerra.org/posts/bootstrapping-oop-part-3-who-parses-the-parser/>",
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "from_url": "https://marianoguerra.org/posts/bootstrapping-oop-part-3-who-parses-the-parser/",
                "ts": 1724446519,
                "id": 1,
                "original_url": "https://marianoguerra.org/posts/bootstrapping-oop-part-3-who-parses-the-parser/",
                "fallback": "Mariano Guerra's Log: Bootstrapping OOP Part 3: Who Parses the Parser?",
                "text": "In Bootstrap post-collapse OOP technology with Wasm GC (Part 2)\nwe implemented the minimum viable runtime in raw WebAssembly to run our prelude and bootstrap a basic OOP language.\nBut the prelude was",
                "title": "Bootstrapping OOP Part 3: Who Parses the Parser?",
                "title_link": "https://marianoguerra.org/posts/bootstrapping-oop-part-3-who-parses-the-parser/",
                "service_name": "Mariano Guerra's Log"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "TdyaD",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "emoji",
                                "name": "vhs",
                                "unicode": "1f4fc"
                            },
                            {
                                "type": "text",
                                "text": " Bootstrapping OOP Part 3: Who Parses the Parser?\n\nHow do we feed the prelude if there's no parser (yet)?\n\n"
                            },
                            {
                                "type": "emoji",
                                "name": "bulb",
                                "unicode": "1f4a1"
                            },
                            {
                                "type": "text",
                                "text": " If code is data then a data serialization format is a binary representation of a program\n\n"
                            },
                            {
                                "type": "emoji",
                                "name": "writing_hand",
                                "unicode": "270d-fe0f"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "link",
                                "url": "https://marianoguerra.org/posts/bootstrapping-oop-part-3-who-parses-the-parser/"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "blue_heart",
                "users": [
                    "U07JALQGJRG"
                ],
                "count": 1
            }
        ]
    }
]