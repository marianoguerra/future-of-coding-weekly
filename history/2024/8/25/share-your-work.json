[
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1724621652.182299",
        "client_msg_id": "f08a1b4b-5925-43cd-b2e4-708c5dd52fe0",
        "text": ":studio_microphone: <https://futureofcoding.org/episodes/073|Future of Coding 73 \u2022 Moving Beyond Syntax: Lessons from 20 Years of Blocks Programming in AgentSheets by Alexander Repenning>\n\nFinally, a title with appropriate length given the duration and depth of its episode. May it swiftly be surpassed.\n\n<https://en.wikipedia.org/wiki/Alexander_Repenning|Alexander Repenning> created <https://en.wikipedia.org/wiki/AgentSheets|AgentSheets>, an environment to help kids develop computational thinking skills. It wrapped an unusual computational model with an even more unusual user interface. The result was divisive. It inspired so many other projects, whilst being rejected at every turn and failing to catch on the way Scratch later did. So in 2017, Repenning published this obit of a paper, <https://agentsheets.com/img/educators/20YearsofBlockProgramingLessonsLearned_published.pdf|Moving Beyond Syntax: Lessons from 20 Years of Blocks Programming in AgentSheets>, which covers his findings over the years as AgentSheets evolved and transformed, and gives perspective on block-based programming, programming-by-example, agents / rule / rewrite systems, automata, and more.\n\nThis is probably the most \u201cnormal\u201d episode we\u2019ve done in a while \u2014 we stay close to the text and un-clam many a thought-tickling pearl. I\u2019m saying that sincerely now to throw you off our scent the next time we get totally lost in the weeds. I hear a clock ticking.",
        "team": "T5TCAFTA9",
        "thread_ts": "1724621652.182299",
        "reply_count": 13,
        "reply_users_count": 6,
        "latest_reply": "1724727511.480069",
        "reply_users": [
            "U03CEGR3HSL",
            "UCUSW7WVD",
            "U03R0B9U1GD",
            "UMQ6LR9NZ",
            "U02U0AS3J49",
            "UC2A2ARPT"
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "sVntL",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "emoji",
                                "name": "studio_microphone",
                                "unicode": "1f399-fe0f"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "link",
                                "url": "https://futureofcoding.org/episodes/073",
                                "text": "Future of Coding 73 \u2022 Moving Beyond Syntax: Lessons from 20 Years of Blocks Programming in AgentSheets by Alexander Repenning"
                            },
                            {
                                "type": "text",
                                "text": "\n\nFinally, a title with appropriate length given the duration and depth of its episode. May it swiftly be surpassed.\n\n"
                            },
                            {
                                "type": "link",
                                "url": "https://en.wikipedia.org/wiki/Alexander_Repenning",
                                "text": "Alexander Repenning"
                            },
                            {
                                "type": "text",
                                "text": " created "
                            },
                            {
                                "type": "link",
                                "url": "https://en.wikipedia.org/wiki/AgentSheets",
                                "text": "AgentSheets"
                            },
                            {
                                "type": "text",
                                "text": ", an environment to help kids develop computational thinking skills. It wrapped an unusual computational model with an even more unusual user interface. The result was divisive. It inspired so many other projects, whilst being rejected at every turn and failing to catch on the way Scratch later did. So in 2017, Repenning published this obit of a paper, "
                            },
                            {
                                "type": "link",
                                "url": "https://agentsheets.com/img/educators/20YearsofBlockProgramingLessonsLearned_published.pdf",
                                "text": "Moving Beyond Syntax: Lessons from 20 Years of Blocks Programming in AgentSheets"
                            },
                            {
                                "type": "text",
                                "text": ", which covers his findings over the years as AgentSheets evolved and transformed, and gives perspective on block-based programming, programming-by-example, agents / rule / rewrite systems, automata, and more.\n\nThis is probably the most \u201cnormal\u201d episode we\u2019ve done in a while \u2014 we stay close to the text and un-clam many a thought-tickling pearl. I\u2019m saying that sincerely now to throw you off our scent the next time we get totally lost in the weeds. I hear a clock ticking."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "tada",
                "users": [
                    "U03CEGR3HSL",
                    "U0123H7JRDM",
                    "UJBAJNFLK",
                    "U06JCQL6ERJ",
                    "U03R0B9U1GD",
                    "U05UK5T7LPP",
                    "U07JALQGJRG"
                ],
                "count": 7
            },
            {
                "name": "headphones",
                "users": [
                    "U02QC0PPER3"
                ],
                "count": 1
            },
            {
                "name": "blue_heart",
                "users": [
                    "U07JALQGJRG"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U03CEGR3HSL",
        "type": "message",
        "ts": "1724626353.211109",
        "client_msg_id": "2d6da6a2-01bd-4318-b779-4b66034379b1",
        "text": "I haven't listened to the show yet, but in the notes I see \"Also couldn't find a good link for TORTIS. :/\"\n\nIs this the TORTIS from the Logo project? If so, you can find two papers about it at <https://el.media.mit.edu/logo-foundation/resources/mit_logo_memos.html|https://el.media.mit.edu/logo-foundation/resources/mit_logo_memos.html>",
        "team": "T5TCAFTA9",
        "thread_ts": "1724621652.182299",
        "parent_user_id": "UC2A2ARPT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "yr9/U",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I haven't listened to the show yet, but in the notes I see \"Also couldn't find a good link for TORTIS. :/\"\n\nIs this the TORTIS from the Logo project? If so, you can find two papers about it at "
                            },
                            {
                                "type": "link",
                                "url": "https://el.media.mit.edu/logo-foundation/resources/mit_logo_memos.html",
                                "text": "https://el.media.mit.edu/logo-foundation/resources/mit_logo_memos.html"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "amiga-tick",
                "users": [
                    "UC2A2ARPT",
                    "U013ZLJARC7"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1724627138.819649",
        "client_msg_id": "8a5ab8e9-407a-4805-a99d-eb6314b0d06d",
        "text": "Just from reading the description, I'm amazed I've never heard of it before, either here or elsewhere. Looks like it's come up just once here: <https://akkartik.name/archives/foc/thinking-together/1571241687.398100.html#1571296934.435900>",
        "team": "T5TCAFTA9",
        "thread_ts": "1724621652.182299",
        "parent_user_id": "UC2A2ARPT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "IeDya",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Just from reading the description, I'm amazed I've never heard of it before, either here or elsewhere. Looks like it's come up just once here: "
                            },
                            {
                                "type": "link",
                                "url": "https://akkartik.name/archives/foc/thinking-together/1571241687.398100.html#1571296934.435900"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U03R0B9U1GD",
        "type": "message",
        "ts": "1724661748.715609",
        "client_msg_id": "b1e91da4-e48c-49c0-be00-88fa9f1187d9",
        "text": "<@UCUSW7WVD> I'm glad we did an episode on it then :pray:",
        "team": "T5TCAFTA9",
        "thread_ts": "1724621652.182299",
        "parent_user_id": "UC2A2ARPT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "kaYCk",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UCUSW7WVD"
                            },
                            {
                                "type": "text",
                                "text": " I'm glad we did an episode on it then "
                            },
                            {
                                "type": "emoji",
                                "name": "pray",
                                "unicode": "1f64f"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UMQ6LR9NZ",
        "type": "message",
        "ts": "1724678335.048699",
        "client_msg_id": "16C422EC-2A39-4BDA-9840-7E1D3E1FDF4F",
        "text": "I loved y\u2019all\u2019s conversation around computational thinking and programming (active). \n\nThis is something I think about a lot in the context of array programming, especially APL and BQN. In a lot of ways the experience of programming with APL is similar to using Scratch, where you are combining and recombining a core set of well known pieces to build up to a desired effect, many times you have to build to an output you don\u2019t really actually want, and then have sort of a clean up pass that filters a thing down to what you need. \n\nI like APL because it feels like a billion million miles away from the computer. I thinking about it all as sort of transform rules to apply to data. \n\nI wonder if a tripping stone for scratch and the things described in the paper is that they mimic too closely things that make you think about the computer while pretending to be obscuring that away, like they need to go harder in one direction or another? ",
        "team": "T5TCAFTA9",
        "thread_ts": "1724621652.182299",
        "parent_user_id": "UC2A2ARPT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "0vpcy",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I loved y\u2019all\u2019s conversation around computational thinking and programming (active)"
                            },
                            {
                                "type": "text",
                                "text": "."
                            },
                            {
                                "type": "text",
                                "text": " \n\nThis is something "
                            },
                            {
                                "type": "text",
                                "text": "I"
                            },
                            {
                                "type": "text",
                                "text": " think about a lot in the context of array programming, especially APL and BQN"
                            },
                            {
                                "type": "text",
                                "text": "."
                            },
                            {
                                "type": "text",
                                "text": " In a lot of ways the experience of programming with APL is similar to using Scratch, where you are combining and recombining a core set of well known pieces to build up to a desired effect, many times you have to build to an output you "
                            },
                            {
                                "type": "text",
                                "text": "don\u2019t"
                            },
                            {
                                "type": "text",
                                "text": " really actually want, and then have sort of a clean up pass that filters a thing down to what you need"
                            },
                            {
                                "type": "text",
                                "text": "."
                            },
                            {
                                "type": "text",
                                "text": " \n\nI like APL because it feels like a billion million miles away from the computer"
                            },
                            {
                                "type": "text",
                                "text": "."
                            },
                            {
                                "type": "text",
                                "text": " I thinking about it all as sort of transform rules to apply to data"
                            },
                            {
                                "type": "text",
                                "text": "."
                            },
                            {
                                "type": "text",
                                "text": " \n\nI wonder if a tripping stone for scratch and the things described in the paper is that they mimic too closely things that make you think about the computer while pretending to be obscuring that away, like they need to go harder in one direction or another? "
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U02U0AS3J49",
        "type": "message",
        "ts": "1724717531.566169",
        "client_msg_id": "90f0ec4e-31f4-40e1-8b78-687d83b22d4b",
        "text": "Am I being nerd sniped? I feel targeted. :sweat_smile:",
        "team": "T5TCAFTA9",
        "thread_ts": "1724621652.182299",
        "parent_user_id": "UC2A2ARPT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "zOxL0",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Am I being nerd sniped? I feel targeted. "
                            },
                            {
                                "type": "emoji",
                                "name": "sweat_smile",
                                "unicode": "1f605"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1724717959.740399",
        "client_msg_id": "5B5BE158-4F2E-4034-B322-26A6E08C6348",
        "text": "<@U02U0AS3J49> Oh, say more!",
        "team": "T5TCAFTA9",
        "thread_ts": "1724621652.182299",
        "parent_user_id": "UC2A2ARPT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "4X5TT",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U02U0AS3J49"
                            },
                            {
                                "type": "text",
                                "text": " Oh, say more!"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U02U0AS3J49",
        "type": "message",
        "ts": "1724723830.271919",
        "client_msg_id": "9e6e1184-8abb-4216-b2f8-ebe1a8ec82e1",
        "text": "Well, my FoC project is Blawx, which is a block-based version of a stable model open world constraint logic programming language. It is targeted at representing statutory \"language\", which has its own rules of interpretation, and so Blawx is using a block interface to support a legal semantics and a logical syntax. It is also designed with explanations for query answers that make the semantics of the execution more visible in the output (not using blocks, but still aimed at semantic \"support\"). Then, I'm working on different UIs that are designed to facilitate reasoning over imperfect information, so that you can ask questions like \"in this hypothetical fact situation, is this additional fact relevant to answering this question, and if so, how?\" Which seems like it may be an example of what the author calls pragmatics. Maybe not as directly targeted \"for Jason\" as the Driver paper, but still... eerily relevant.",
        "team": "T5TCAFTA9",
        "thread_ts": "1724621652.182299",
        "parent_user_id": "UC2A2ARPT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "O80f2",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Well, my FoC project is Blawx, which is a block-based version of a stable model open world constraint logic programming language. It is targeted at representing statutory \"language\", which has its own rules of interpretation, and so Blawx is using a block interface to support a legal semantics and a logical syntax. It is also designed with explanations for query answers that make the semantics of the execution more visible in the output (not using blocks, but still aimed at semantic \"support\"). Then, I'm working on different UIs that are designed to facilitate reasoning over imperfect information, so that you can ask questions like \"in this hypothetical fact situation, is this additional fact relevant to answering this question, and if so, how?\" Which seems like it may be an example of what the author calls pragmatics. Maybe not as directly targeted \"for Jason\" as the Driver paper, but still... eerily relevant."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UCUSW7WVD",
                    "U05UK5T7LPP"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "U02U0AS3J49",
        "type": "message",
        "ts": "1724724893.226729",
        "client_msg_id": "fdbe9a6f-128a-48ed-8edc-bc634c955c14",
        "text": "I'm struggling with the definition of pragmatics, honestly. It feels like semantic support through the semantics-by-example seen in debugging tools.",
        "team": "T5TCAFTA9",
        "thread_ts": "1724621652.182299",
        "parent_user_id": "UC2A2ARPT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Ae8Y5",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I'm struggling with the definition of pragmatics, honestly. It feels like semantic support through the semantics-by-example seen in debugging tools."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U02U0AS3J49",
        "type": "message",
        "ts": "1724725384.083249",
        "client_msg_id": "70499f25-fd9a-4cbb-a0bb-157ccd8abe16",
        "text": "The cognitive/affective challenge for lawyers of computational thinking about statutes is also the whole reason for Blawx to exist. So I relate to the author's motivations pretty severely.",
        "team": "T5TCAFTA9",
        "thread_ts": "1724621652.182299",
        "parent_user_id": "UC2A2ARPT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "kBzWQ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The cognitive/affective challenge for lawyers of computational thinking about statutes is also the whole reason for Blawx to exist. So I relate to the author's motivations pretty severely."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U02U0AS3J49",
        "type": "message",
        "ts": "1724726011.120079",
        "client_msg_id": "4576a841-5254-46c1-b7de-c167e6b27058",
        "text": "I also struggle with an argument about whether lawyers want to \"learn to code,\" and whether it is _helpful_ to call using Blawx \"programming\" for the purpose of solving the cognitive/affective challenge, regardless of whether it is accurate. Both because programming is \"scary\", and because most people's experience of programming is dramatically different from logic programming knowledge representation.",
        "team": "T5TCAFTA9",
        "thread_ts": "1724621652.182299",
        "parent_user_id": "UC2A2ARPT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "F9nGa",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I also struggle with an argument about whether lawyers want to \"learn to code,\" and whether it is "
                            },
                            {
                                "type": "text",
                                "text": "helpful",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " to call using Blawx \"programming\" for the purpose of solving the cognitive/affective challenge, regardless of whether it is accurate. Both because programming is \"scary\", and because most people's experience of programming is dramatically different from logic programming knowledge representation."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "cake",
                "users": [
                    "UC2A2ARPT",
                    "U05UK5T7LPP"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1724726108.349249",
        "client_msg_id": "D2FBC01E-5E51-4779-9C9D-CF799AFE6018",
        "text": "Computational thinking: \"I'm right here!\"",
        "team": "T5TCAFTA9",
        "thread_ts": "1724621652.182299",
        "parent_user_id": "UC2A2ARPT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "BB9d7",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Computational thinking: \"I'm right here!\""
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U02U0AS3J49",
        "type": "message",
        "ts": "1724726432.136999",
        "client_msg_id": "ee7ddedb-a019-4233-bb6c-d7e03983c3fa",
        "text": "Syntonic computational thinking: \"I'm the turtle!\" :turtle:",
        "team": "T5TCAFTA9",
        "thread_ts": "1724621652.182299",
        "parent_user_id": "UC2A2ARPT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Gxz6Z",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Syntonic computational thinking: \"I'm the turtle!\" "
                            },
                            {
                                "type": "emoji",
                                "name": "turtle",
                                "unicode": "1f422"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "ivan",
                "users": [
                    "UC2A2ARPT"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U02U0AS3J49",
        "type": "message",
        "ts": "1724727511.480069",
        "client_msg_id": "f090cd96-22c0-49f5-a4a7-c67bf67b1b1d",
        "text": "I think that computational thinking is basically just an example of formalisms more generally. Attempting to apply a good formalism to your ideas will draw your attention to things that you might not otherwise consider. That has been enormously, dramatically useful to me in my attempts to understand laws. I regularly argue that Blawx will make you a better statutory drafter or client of a statutory drafter, even if no one _ever_ runs the code. But I think it may be difficult for people who are not, like me, on both the law and coding sides of things, to recognize how fundamentally not-computational legal thinking is now, and how large and juicy the low-hanging fruit are.",
        "team": "T5TCAFTA9",
        "thread_ts": "1724621652.182299",
        "parent_user_id": "UC2A2ARPT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "To+Or",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I think that computational thinking is basically just an example of formalisms more generally. Attempting to apply a good formalism to your ideas will draw your attention to things that you might not otherwise consider. That has been enormously, dramatically useful to me in my attempts to understand laws. I regularly argue that Blawx will make you a better statutory drafter or client of a statutory drafter, even if no one "
                            },
                            {
                                "type": "text",
                                "text": "ever",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " runs the code. But I think it may be difficult for people who are not, like me, on both the law and coding sides of things, to recognize how fundamentally not-computational legal thinking is now, and how large and juicy the low-hanging fruit are."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UCUSW7WVD",
                    "U05UK5T7LPP",
                    "U0112C10V4Y"
                ],
                "count": 3
            }
        ]
    }
]