[
    {
        "text": "Hey folks. I've been working on a VR ui for animation, inspired by Stop Drawing Dead Fish and a system called Projective Geometric Algebra. In this gif you can see me making something called a PGA Rotor, which is TLDR is an object that generalizes vectors and quaternions.",
        "files": [
            {
                "id": "F06M15AMZ0B",
                "created": 1709120249,
                "timestamp": 1709120249,
                "name": "chrome-capture-2024-1-28.gif",
                "title": "chrome-capture-2024-1-28.gif",
                "mimetype": "image/gif",
                "filetype": "gif",
                "pretty_type": "GIF",
                "user": "U017GNJM021",
                "user_team": "T5TCAFTA9",
                "editable": false,
                "size": 13086170,
                "mode": "hosted",
                "is_external": false,
                "external_type": "",
                "is_public": true,
                "public_url_shared": false,
                "display_as_bot": false,
                "username": "",
                "url_private": "https://files.slack.com/files-pri/T5TCAFTA9-F06M15AMZ0B/chrome-capture-2024-1-28.gif",
                "url_private_download": "https://files.slack.com/files-pri/T5TCAFTA9-F06M15AMZ0B/download/chrome-capture-2024-1-28.gif",
                "media_display_type": "unknown",
                "thumb_64": "https://files.slack.com/files-tmb/T5TCAFTA9-F06M15AMZ0B-afdd645c4b/chrome-capture-2024-1-28_64.png",
                "thumb_80": "https://files.slack.com/files-tmb/T5TCAFTA9-F06M15AMZ0B-afdd645c4b/chrome-capture-2024-1-28_80.png",
                "thumb_360": "https://files.slack.com/files-tmb/T5TCAFTA9-F06M15AMZ0B-afdd645c4b/chrome-capture-2024-1-28_360.png",
                "thumb_360_w": 356,
                "thumb_360_h": 360,
                "thumb_480": "https://files.slack.com/files-tmb/T5TCAFTA9-F06M15AMZ0B-afdd645c4b/chrome-capture-2024-1-28_480.png",
                "thumb_480_w": 475,
                "thumb_480_h": 480,
                "thumb_160": "https://files.slack.com/files-tmb/T5TCAFTA9-F06M15AMZ0B-afdd645c4b/chrome-capture-2024-1-28_160.png",
                "thumb_360_gif": "https://files.slack.com/files-tmb/T5TCAFTA9-F06M15AMZ0B-afdd645c4b/chrome-capture-2024-1-28_360.gif",
                "thumb_480_gif": "https://files.slack.com/files-tmb/T5TCAFTA9-F06M15AMZ0B-afdd645c4b/chrome-capture-2024-1-28_480.gif",
                "original_w": 505,
                "original_h": 510,
                "deanimate": "https://files.slack.com/files-tmb/T5TCAFTA9-F06M15AMZ0B-afdd645c4b/chrome-capture-2024-1-28_deanimate.png",
                "deanimate_gif": "https://files.slack.com/files-tmb/T5TCAFTA9-F06M15AMZ0B-afdd645c4b/chrome-capture-2024-1-28_deanimate_gif.png",
                "thumb_tiny": "AwAwAC+OilorsOUSloooEFLRRSAMUYp+33H504IPUfnS5kFmMVGY4UEn2oZCpwwIPvVuFRtZcde9RSKDgAHA9TUKepbhpcgxS4qTZRtqrkcrM7I7Ckopa5DoJrW5NuxO3cCOmab9ol3Ehzyc461HSUXAtLeMPvqD9OKmS5hbqdp96oUlUpMVj//Z",
                "permalink": "https://futureofcoding.slack.com/files/U017GNJM021/F06M15AMZ0B/chrome-capture-2024-1-28.gif",
                "permalink_public": "https://slack-files.com/T5TCAFTA9-F06M15AMZ0B-b02894142c",
                "is_starred": false,
                "has_rich_preview": false,
                "file_access": "visible"
            }
        ],
        "upload": false,
        "user": "U017GNJM021",
        "display_as_bot": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "8goP9",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Hey folks. I've been working on a VR ui for animation, inspired by Stop Drawing Dead Fish and a system called Projective Geometric Algebra. In this gif you can see me making something called a PGA Rotor, which is TLDR is an object that generalizes vectors and quaternions."
                            }
                        ]
                    }
                ]
            }
        ],
        "type": "message",
        "ts": "1709120368.482919",
        "client_msg_id": "665d3dc0-0252-4c5c-b807-ea8e218291a9",
        "reactions": [
            {
                "name": "cake",
                "users": [
                    "U013ZLJARC7",
                    "UCUSW7WVD",
                    "UMV4B97GT",
                    "U06JCQL6ERJ",
                    "U05UK5T7LPP"
                ],
                "count": 5
            },
            {
                "name": "fish",
                "users": [
                    "U03R0B9U1GD",
                    "UA14TGLTC"
                ],
                "count": 2
            },
            {
                "name": "eyes",
                "users": [
                    "U06H4766K42"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U017GNJM021",
        "type": "message",
        "ts": "1709120596.463029",
        "edited": {
            "user": "U017GNJM021",
            "ts": "1709120619.000000"
        },
        "client_msg_id": "32f5d2da-1feb-42af-8c12-d02b2964e74f",
        "text": "You animate by making a bunch of these things, and then \"snapping\" them together, so they are joined end-to-end for example, and that becomes constantly-updated behaviour. *Problem* that I'd appreciate input on an idea for is how to visualize the \"code\"",
        "team": "T5TCAFTA9",
        "thread_ts": "1709120596.463029",
        "reply_count": 1,
        "reply_users_count": 1,
        "latest_reply": "1709400884.024169",
        "reply_users": [
            "U06H4766K42"
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ugD6W",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "You animate by making a bunch of these things, and then \"snapping\" them together, so they are joined end-to-end for example, and that becomes constantly-updated behaviour. "
                            },
                            {
                                "type": "text",
                                "text": "Problem",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " that I'd appreciate input on an idea for is how to visualize the \"code\""
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U017GNJM021",
        "type": "message",
        "ts": "1709120794.130189",
        "client_msg_id": "073be392-69df-4d19-b8ec-b7b6c0f41e33",
        "text": "Problem: my setup is already cluttered. Eg, animated characters are already surrounded by a halo of crazy clockwork; it's all I can do to hide it. But sometimes you want to see a lot of it. And I don't want to add boxes-and-arrows, and I don't want to add spreadsheets much either. I'm thinking that instead of showing the relations, I just let you fiddle with the things and see what happens",
        "team": "T5TCAFTA9",
        "thread_ts": "1709120794.130189",
        "reply_count": 2,
        "reply_users_count": 2,
        "latest_reply": "1709401010.807889",
        "reply_users": [
            "UA14TGLTC",
            "U06H4766K42"
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "HkrLb",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Problem: my setup is already cluttered. Eg, animated characters are already surrounded by a halo of crazy clockwork; it's all I can do to hide it. But sometimes you want to see a lot of it. And I don't want to add boxes-and-arrows, and I don't want to add spreadsheets much either. I'm thinking that instead of showing the relations, I just let you fiddle with the things and see what happens"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U017GNJM021",
        "type": "message",
        "ts": "1709120835.200899",
        "client_msg_id": "cf72e057-4ffa-447b-9a54-bbac8172ee28",
        "text": "But maybe someone here has already tried this?",
        "team": "T5TCAFTA9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Z82ht",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "But maybe someone here has already tried this?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UA14TGLTC",
        "type": "message",
        "ts": "1709196739.136089",
        "client_msg_id": "e0cf147f-4783-4eeb-b875-c9838b14e194",
        "text": "While we're Bret Victoring, maybe jumping up and down the Ladder of Abstraction can help?  I'm thinking of braintruffle's animations <https://youtu.be/dhYqflvJMXc?si=2vElA6VD2uqBBk68>.  With so much going on, switching between cross sections helps keep all the diagrams from being too busy.",
        "team": "T5TCAFTA9",
        "thread_ts": "1709120794.130189",
        "parent_user_id": "U017GNJM021",
        "attachments": [
            {
                "from_url": "https://youtu.be/dhYqflvJMXc?si=2vElA6VD2uqBBk68",
                "service_icon": "https://a.slack-edge.com/80588/img/unfurl_icons/youtube.png",
                "thumb_url": "https://i.ytimg.com/vi/dhYqflvJMXc/hqdefault.jpg",
                "thumb_width": 480,
                "thumb_height": 360,
                "video_html": "<iframe width=\"400\" height=\"225\" src=\"https://www.youtube.com/embed/dhYqflvJMXc?feature=oembed&autoplay=1&iv_load_policy=3\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" allowfullscreen title=\"Master the Complexity of Spaceflight\"></iframe>",
                "video_html_width": 400,
                "video_html_height": 225,
                "id": 1,
                "original_url": "https://youtu.be/dhYqflvJMXc?si=2vElA6VD2uqBBk68",
                "fallback": "YouTube Video: Master the Complexity of Spaceflight",
                "title": "Master the Complexity of Spaceflight",
                "title_link": "https://youtu.be/dhYqflvJMXc?si=2vElA6VD2uqBBk68",
                "author_name": "braintruffle",
                "author_link": "https://www.youtube.com/@braintruffle",
                "service_name": "YouTube",
                "service_url": "https://www.youtube.com/"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "pS7/0",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "While we're Bret Victoring, maybe jumping up and down the Ladder of Abstraction can help?  I'm thinking of braintruffle's animations "
                            },
                            {
                                "type": "link",
                                "url": "https://youtu.be/dhYqflvJMXc?si=2vElA6VD2uqBBk68"
                            },
                            {
                                "type": "text",
                                "text": ".  With so much going on, switching between cross sections helps keep all the diagrams from being too busy."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "eyes",
                "users": [
                    "U06H4766K42"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U06H4766K42",
        "type": "message",
        "ts": "1709400884.024169",
        "client_msg_id": "9A4CD970-E5FD-47E8-8532-540809463F0D",
        "text": "I\u2019ve been stuck thinking about this also which i think is an unfortunate artifact of code being portrayed as text for so long. It sounds like the Actor Model could be similar enough to the modularity you\u2019re describing. Ironically i\u2019ve always visualized that as single arrows (like bow and arrow) where the air the arrow flows through is actually the data being modified by the flight of the function through it",
        "team": "T5TCAFTA9",
        "thread_ts": "1709120596.463029",
        "parent_user_id": "U017GNJM021",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "TR4DK",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I"
                            },
                            {
                                "type": "text",
                                "text": "\u2019"
                            },
                            {
                                "type": "text",
                                "text": "ve been stuck thinking about this also which i think is an unfortunate artifact of code being portrayed as text for so long"
                            },
                            {
                                "type": "text",
                                "text": "."
                            },
                            {
                                "type": "text",
                                "text": " It sounds like the Actor Model could be similar enough to the modularity "
                            },
                            {
                                "type": "text",
                                "text": "you\u2019re"
                            },
                            {
                                "type": "text",
                                "text": " describing"
                            },
                            {
                                "type": "text",
                                "text": "."
                            },
                            {
                                "type": "text",
                                "text": " Ironically i\u2019ve always visualized that as single arrows (like bow and arrow) where the air the arrow flows through is actually the data being modified by the flight of the function through it"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U06H4766K42",
        "type": "message",
        "ts": "1709401010.807889",
        "client_msg_id": "1B28AF08-597B-49FD-BF3E-F6C7D3C78F43",
        "text": "This is beautiful ",
        "team": "T5TCAFTA9",
        "thread_ts": "1709120794.130189",
        "parent_user_id": "U017GNJM021",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "20H/s",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "This is beautiful "
                            }
                        ]
                    }
                ]
            }
        ]
    }
]