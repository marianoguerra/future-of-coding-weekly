[
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1711861868.039109",
        "client_msg_id": "c6c9b79f-7b83-48fd-a39a-2e639582425e",
        "text": "A new category: infinite canvas apps\n\n<https://infinitecanvas.tools/gallery/>\n<https://jsoncanvas.org/>\n<https://www.canvasprotocol.org/>",
        "team": "T5TCAFTA9",
        "thread_ts": "1711861868.039109",
        "reply_count": 2,
        "reply_users_count": 2,
        "latest_reply": "1711894824.443919",
        "reply_users": [
            "U0123H7JRDM",
            "U06H4766K42"
        ],
        "is_locked": false,
        "subscribed": false,
        "attachments": [
            {
                "image_url": "https://infinitecanvas.tools/images/og_image.jpg",
                "image_width": 1200,
                "image_height": 630,
                "image_bytes": 603331,
                "from_url": "https://infinitecanvas.tools/gallery/",
                "service_icon": "https://infinitecanvas.tools/apple-touch-icon.png",
                "id": 1,
                "original_url": "https://infinitecanvas.tools/gallery/",
                "fallback": "Infinite Canvas app gallery",
                "text": "Explore infinite canvas tools that work the way we think",
                "title": "Infinite Canvas app gallery",
                "title_link": "https://infinitecanvas.tools/gallery/",
                "service_name": "infinitecanvas.tools"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "tb4RF",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "A new category: infinite canvas apps\n\n"
                            },
                            {
                                "type": "link",
                                "url": "https://infinitecanvas.tools/gallery/"
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "link",
                                "url": "https://jsoncanvas.org/"
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "link",
                                "url": "https://www.canvasprotocol.org/"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U0123H7JRDM",
                    "UJBAJNFLK",
                    "U06BUK2M2RH"
                ],
                "count": 3
            }
        ]
    },
    {
        "user": "U0123H7JRDM",
        "type": "message",
        "ts": "1711871160.281849",
        "client_msg_id": "F6A111E7-1F40-4ED7-B8FC-614377A3B3B8",
        "text": "A very nice initiative! I've been reading this too and watching the recording of the first meeting of the OCWG.\nSome thoughts that I had (from my visual-programming project perspective):\n\u2022 I am missing meta information in the canvas jsonschema like a schemaVersion\n\u2022 In my visual programming system the nodes and edges get stored together but not directly on the root level and allow for layers and separate node-compositions (which is not the same as groups)\n\u2022 For visual programming depending on the node-task-type (which in my case can be something like \"expression\" , \"condition\" , \"merge\" , \"map\" etc..) different ports are available and the edges connect to these ports. But perhaps this is also implementation specific.\n\u2022 Different node-task-types have different properties, so a custom property-bag per node is also missing for me\n",
        "team": "T5TCAFTA9",
        "thread_ts": "1711861868.039109",
        "parent_user_id": "UCUSW7WVD",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Kwsn2",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "A very nice initiative! I've been reading this too and watching the recording of the first meeting of the OCWG.\nSome thoughts that I had (from my visual-programming project perspective):"
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "I am missing meta information in the canvas jsonschema like a schemaVersion"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "In my visual programming system the nodes and edges get stored together but not directly on the root level and allow for layers and separate node-compositions (which is not the same as groups)"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "For visual programming depending on the node-task-type (which in my case can be something like \"expression\" , \"condition\" , \"merge\" , \"map\" etc..) different ports are available and the edges connect to these ports. But perhaps this is also implementation specific."
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Different node-task-types have different properties, so a custom property-bag per node is also missing for me"
                                    }
                                ]
                            }
                        ],
                        "style": "bullet",
                        "indent": 0,
                        "offset": 0,
                        "border": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\n"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U06H4766K42",
        "type": "message",
        "ts": "1711894824.443919",
        "edited": {
            "user": "U06H4766K42",
            "ts": "1711894858.000000"
        },
        "client_msg_id": "5B8901F5-5831-41D5-B89A-1532982750B4",
        "text": "This reminds me of sprout.place  <https://sprout.place/|https://sprout.place/>",
        "team": "T5TCAFTA9",
        "thread_ts": "1711861868.039109",
        "parent_user_id": "UCUSW7WVD",
        "attachments": [
            {
                "from_url": "https://sprout.place/",
                "image_url": "https://sprout.place/assets/opengraph_v1.1.1.jpg",
                "image_width": 2400,
                "image_height": 1260,
                "image_bytes": 277819,
                "service_icon": "https://sprout.place/assets/favicon-32x32.png",
                "id": 1,
                "original_url": "https://sprout.place/",
                "fallback": "Sprout | Your space, your call",
                "text": "Meet, create &amp; play in customizable spaces. Video chat. Take notes. Browse together. No login needed.",
                "title": "Sprout | Your space, your call",
                "title_link": "https://sprout.place/",
                "service_name": "sprout.place"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ilgbu",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "This reminds me of sprout.place  "
                            },
                            {
                                "type": "link",
                                "url": "https://sprout.place/",
                                "text": "https://sprout.place/"
                            }
                        ]
                    }
                ]
            }
        ]
    }
]