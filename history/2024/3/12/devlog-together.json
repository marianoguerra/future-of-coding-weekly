[
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1710263619.920659",
        "edited": {
            "user": "UCUSW7WVD",
            "ts": "1710263734.000000"
        },
        "client_msg_id": "43df9d8b-cab5-4748-bf1f-6ba702beda6f",
        "text": "A little thing like an 'edit' button introduces cascading issues:\n\n\u2022 L\u00d6VE (in combination with mobile restrictions) won't let me modify code files in place. I have to overlay my changes in a new location.\n\u2022 But now I can't pick up any upgrades to my app. Upgrades modify code files in place, but any overlay persists (otherwise you'd completely lose your changes after upgrading).\n\u2022 But hey I have a programmable editor here! I'll just create a new file called 'scratch' with a one-liner to blow away the overlay. (With my app user's hat on, I know in this case my changes are minor in a way that I don't with my app developer's hat on.)\n\u2022 (A few hours later.) Wait, now none of my changes are having any effect. And they're completely blown away when I go back to the code.\n\u2022 :face_palm::skin-tone-3: Oh it's that 'scratch' file still hanging around. So it needs to be a 2-liner. I have to make any changes I want to the file system -- and then delete 'scratch' to make this a one-time operation.\n\u2022 I could try to create a screen of helpers for this, along with a comment that says, \"insert file system operations here\" after which is a delete of 'scratch'.\nIn this way I find myself playing meta-Sokoban.. :face_with_rolling_eyes:\n\nTl;dr - the 'edit' button isn't really usable yet.\nI _really_ don't want to go down the road of building a compare and merge flow :face_with_rolling_eyes:",
        "team": "T5TCAFTA9",
        "thread_ts": "1710263619.920659",
        "reply_count": 4,
        "reply_users_count": 2,
        "latest_reply": "1710327627.122909",
        "reply_users": [
            "UCUSW7WVD",
            "UJBAJNFLK"
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Zsb4F",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "A little thing like an 'edit' button introduces cascading issues:\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "L\u00d6VE (in combination with mobile restrictions) won't let me modify code files in place. I have to overlay my changes in a new location."
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "But now I can't pick up any upgrades to my app. Upgrades modify code files in place, but any overlay persists (otherwise you'd completely lose your changes after upgrading)."
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "But hey I have a programmable editor here! I'll just create a new file called 'scratch' with a one-liner to blow away the overlay. (With my app user's hat on, I know in this case my changes are minor in a way that I don't with my app developer's hat on.)"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "(A few hours later.) Wait, now none of my changes are having any effect. And they're completely blown away when I go back to the code."
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "emoji",
                                        "name": "face_palm",
                                        "unicode": "1f926-1f3fc",
                                        "skin_tone": 3
                                    },
                                    {
                                        "type": "text",
                                        "text": " Oh it's that 'scratch' file still hanging around. So it needs to be a 2-liner. I have to make any changes I want to the file system -- and then delete 'scratch' to make this a one-time operation."
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "I could try to create a screen of helpers for this, along with a comment that says, \"insert file system operations here\" after which is a delete of 'scratch'."
                                    }
                                ]
                            }
                        ],
                        "style": "bullet",
                        "indent": 0,
                        "border": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nIn this way I find myself playing meta-Sokoban.. "
                            },
                            {
                                "type": "emoji",
                                "name": "face_with_rolling_eyes",
                                "unicode": "1f644"
                            },
                            {
                                "type": "text",
                                "text": "\n\nTl;dr - the 'edit' button isn't really usable yet.\nI "
                            },
                            {
                                "type": "text",
                                "text": "really",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " don't want to go down the road of building a compare and merge flow "
                            },
                            {
                                "type": "emoji",
                                "name": "face_with_rolling_eyes",
                                "unicode": "1f644"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UJBAJNFLK"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1710265193.348859",
        "edited": {
            "user": "UCUSW7WVD",
            "ts": "1710301844.000000"
        },
        "client_msg_id": "8b043a63-2634-4dd7-af00-65e4bb8a3337",
        "text": "More devlog stuff.\n\nI switched the next/previous level buttons to say just `>>` and `<<`. This kills two birds with one stone:\n\n\u2022 I was confusing the text in my \"buttons\" with the current level. In landscape mode the current level is on the top-left, but in portrait mode that rough location is where the button for going to the previous level goes. Only ever showing one number on screen improves matters.\n\u2022 My \"buttons\" were pretty atrocious, and now they're merely terrible, the text looks more vertically centered because it has no ascenders.\n<https://git.sr.ht/~akkartik/sokoban.love/commit/93432f0aa5>",
        "team": "T5TCAFTA9",
        "thread_ts": "1710263619.920659",
        "parent_user_id": "UCUSW7WVD",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "RD+Vu",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "More devlog stuff.\n\nI switched the next/previous level buttons to say just "
                            },
                            {
                                "type": "text",
                                "text": ">>",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " and "
                            },
                            {
                                "type": "text",
                                "text": "<<",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ". This kills two birds with one stone:\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "I was confusing the text in my \"buttons\" with the current level. In landscape mode the current level is on the top-left, but in portrait mode that rough location is where the button for going to the previous level goes. Only ever showing one number on screen improves matters."
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "My \"buttons\" were pretty atrocious, and now they're merely terrible, the text looks more vertically centered because it has no ascenders."
                                    }
                                ]
                            }
                        ],
                        "style": "bullet",
                        "indent": 0,
                        "border": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "link",
                                "url": "https://git.sr.ht/~akkartik/sokoban.love/commit/93432f0aa5"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJBAJNFLK",
        "type": "message",
        "ts": "1710321102.641329",
        "client_msg_id": "6b8fd20c-1b65-4af2-b434-2a07a5dce28c",
        "text": "&gt; (With my app user's hat on, I know in this case my changes are minor in a way that I don't with my app developer's hat on.)\nNot having distinct hats sounds a lot like convivial technology.",
        "team": "T5TCAFTA9",
        "thread_ts": "1710263619.920659",
        "parent_user_id": "UCUSW7WVD",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "yAj7i",
                "elements": [
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "(With my app user's hat on, I know in this case my changes are minor in a way that I don't with my app developer's hat on.)"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Not having distinct hats sounds a lot like convivial technology."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1710323420.565379",
        "client_msg_id": "d0e6cb5b-e22b-44b0-8dbd-efdef2d6c40c",
        "text": "Oh you and your idealism :slightly_smiling_face:\n\nYou can also think of it as compile time vs run-time. Convivial technology means I can go do unsafe things when I know what I'm doing, things I never want the computer to blindly do to me.",
        "team": "T5TCAFTA9",
        "thread_ts": "1710263619.920659",
        "parent_user_id": "UCUSW7WVD",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "PfK6I",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Oh you and your idealism "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            },
                            {
                                "type": "text",
                                "text": "\n\nYou can also think of it as compile time vs run-time. Convivial technology means I can go do unsafe things when I know what I'm doing, things I never want the computer to blindly do to me."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJBAJNFLK",
        "type": "message",
        "ts": "1710327627.122909",
        "client_msg_id": "9939c11c-68c7-4d2b-a463-c5810611b84d",
        "text": "I think convivial technology implies that you are yourself responsible for judging the safety of whatever you do. Though that's not an aspect I remember Ivan Illich talk about.",
        "team": "T5TCAFTA9",
        "thread_ts": "1710263619.920659",
        "parent_user_id": "UCUSW7WVD",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "v3e/U",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I think convivial technology implies that you are yourself responsible for judging the safety of whatever you do. Though that's not an aspect I remember Ivan Illich talk about."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "100",
                "users": [
                    "UCUSW7WVD",
                    "UML4ZEKDK"
                ],
                "count": 2
            }
        ]
    }
]