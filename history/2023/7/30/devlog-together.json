[
    {
        "client_msg_id": "cd56e08c-530f-4cd5-a19a-c44bcf8b0611",
        "type": "message",
        "text": "I implemented support for property paths in my native compiler.\n```scheme Hello \n{\n   /hi/:p1 {\n      get { \n\t'hello: ',p1.\n     }\n   }\n   -main:args\n   {\n        self waitOnPort: 8081 intValue.\n   }\n}```\nSo that little test program can now be fully compiler to an ARM64 binary.\n```]stc <http://SchemeDefHTTP.st|SchemeDefHTTP.st>\n]file SchemeDefHTTP\nSchemeDefHTTP: Mach-O 64-bit executable arm64\n]./SchemeDefHTTP \n2023-07-30 10:16:36.680 SchemeDefHTTP[51040:2409943] will listen on port: 8081```\nFrom another shell:\n```]curl  <http://localhost:8081/hi/Marcel>\nhello: Marcel%\n]wrk  <http://localhost:8081/hi/Marcel>\nRunning 10s test @ <http://localhost:8081/hi/Marcel>\n  2 threads and 10 connections\n  Thread Stats   Avg      Stdev     Max   +/- Stdev\n    Latency    57.33us   15.35us   1.13ms   80.91%\n    Req/Sec    75.02k     3.81k   78.81k    95.54%\n  1507905 requests in 10.10s, 198.45MB read\nRequests/sec: 149295.29\nTransfer/sec:     19.65MB```\nSo more expressive than something like sinatra, but running at cool 140K requests/s.\n\nThe dichotomy between expressiveness/comfort and performance is a false one, a bit like the one we used to have between user-friendly but crashy client-operating systems and solid but unfriendly server operating systems.  Now my phone and my watch both run Unix.",
        "user": "U017TE5R09M",
        "ts": "1690705409.442629",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "mSRm",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I implemented support for property paths in my native compiler.\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "scheme Hello \n{\n   /hi/:p1 {\n      get { \n\t'hello: ',p1.\n     }\n   }\n   -main:args\n   {\n        self waitOnPort: 8081 intValue.\n   }\n}"
                            }
                        ],
                        "border": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "So that little test program can now be fully compiler to an ARM64 binary.\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "]stc SchemeDefHTTP.st\n]file SchemeDefHTTP\nSchemeDefHTTP: Mach-O 64-bit executable arm64\n]./SchemeDefHTTP \n2023-07-30 10:16:36.680 SchemeDefHTTP[51040:2409943] will listen on port: 8081"
                            }
                        ],
                        "border": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "From another shell:\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "]curl  "
                            },
                            {
                                "type": "link",
                                "url": "http://localhost:8081/hi/Marcel"
                            },
                            {
                                "type": "text",
                                "text": "\nhello: Marcel%\n]wrk  "
                            },
                            {
                                "type": "link",
                                "url": "http://localhost:8081/hi/Marcel"
                            },
                            {
                                "type": "text",
                                "text": "\nRunning 10s test @ "
                            },
                            {
                                "type": "link",
                                "url": "http://localhost:8081/hi/Marcel"
                            },
                            {
                                "type": "text",
                                "text": "\n  2 threads and 10 connections\n  Thread Stats   Avg      Stdev     Max   +/- Stdev\n    Latency    57.33us   15.35us   1.13ms   80.91%\n    Req/Sec    75.02k     3.81k   78.81k    95.54%\n  1507905 requests in 10.10s, 198.45MB read\nRequests/sec: 149295.29\nTransfer/sec:     19.65MB"
                            }
                        ],
                        "border": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "So more expressive than something like sinatra, but running at cool 140K requests/s.\n\nThe dichotomy between expressiveness/comfort and performance is a false one, a bit like the one we used to have between user-friendly but crashy client-operating systems and solid but unfriendly server operating systems.  Now my phone and my watch both run Unix."
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "edited": {
            "user": "U017TE5R09M",
            "ts": "1690705509.000000"
        },
        "thread_ts": "1690705409.442629",
        "reply_count": 1,
        "reply_users_count": 1,
        "latest_reply": "1690743479.255319",
        "reply_users": [
            "UCUSW7WVD"
        ],
        "is_locked": false,
        "subscribed": false
    },
    {
        "client_msg_id": "7509e98f-7248-4659-9b78-59923b7c8852",
        "type": "message",
        "text": "Very interesting.\n\nAre your code samples in a shell? Hard to tell what you're typing and what's output.",
        "user": "UCUSW7WVD",
        "ts": "1690743479.255319",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "X6r",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Very interesting.\n\nAre your code samples in a shell? Hard to tell what you're typing and what's output."
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1690705409.442629",
        "parent_user_id": "U017TE5R09M"
    }
]