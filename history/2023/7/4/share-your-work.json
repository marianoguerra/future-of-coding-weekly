[
    {
        "client_msg_id": "bba78e41-4fce-4038-b504-98f550a73e14",
        "type": "message",
        "text": "Hiya - I've got a new article in my Object Network \"Lab Notes\" Substack:\n\n<https://duncancragg.substack.com/p/a-3d-operating-system-without-apps>\n\nIt would be great if you find it a stimulating read and dropped in some comments on the page!",
        "user": "UE6EFEPTQ",
        "ts": "1688481543.459979",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "XW0/",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Hiya - I've got a new article in my Object Network \"Lab Notes\" Substack:\n\n"
                            },
                            {
                                "type": "link",
                                "url": "https://duncancragg.substack.com/p/a-3d-operating-system-without-apps"
                            },
                            {
                                "type": "text",
                                "text": "\n\nIt would be great if you find it a stimulating read and dropped in some comments on the page!"
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1688481543.459979",
        "reply_count": 5,
        "reply_users_count": 3,
        "latest_reply": "1688673704.048079",
        "reply_users": [
            "UE6EFEPTQ",
            "UJBAJNFLK",
            "U5T9JLUAE"
        ],
        "is_locked": false,
        "subscribed": false
    },
    {
        "client_msg_id": "0273a555-2739-43dc-97c8-62e6953b02d7",
        "type": "message",
        "text": "... or subscribed of course!",
        "user": "UE6EFEPTQ",
        "ts": "1688481618.611999",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "uE=Jd",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "... or subscribed of course!"
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1688481543.459979",
        "parent_user_id": "UE6EFEPTQ"
    },
    {
        "client_msg_id": "84bcb88e-6512-463e-8046-cd13157b5c84",
        "type": "message",
        "text": "You say that there a no apps in the real world. Not sure I agree: I see apps as virtual tools, but tools that have grown too large and constrain their users rather than empowering them. There's a story by Cory Doctorow, about toasters that will accept only \"authorized bread\" (<https://www.defectivebydesign.org/blog/doctorows_novella_unauthorized_bread_explains_why_we_have_fight_drm_today_avoid_grim_future>). That's what apps would be like in the real world.",
        "user": "UJBAJNFLK",
        "ts": "1688543100.164249",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "CgKC",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "You say that there a no apps in the real world. Not sure I agree: I see apps as virtual tools, but tools that have grown too large and constrain their users rather than empowering them. There's a story by Cory Doctorow, about toasters that will accept only \"authorized bread\" ("
                            },
                            {
                                "type": "link",
                                "url": "https://www.defectivebydesign.org/blog/doctorows_novella_unauthorized_bread_explains_why_we_have_fight_drm_today_avoid_grim_future"
                            },
                            {
                                "type": "text",
                                "text": "). That's what apps would be like in the real world."
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1688481543.459979",
        "parent_user_id": "UE6EFEPTQ"
    },
    {
        "client_msg_id": "6997cc0a-3ad6-419b-a091-dd3f616be72a",
        "type": "message",
        "text": "In your example do you see things like the calendar and the to-do list as being governed by separate programs/pieces of code and using physics simulation as a sort of implicit API through which things interact with each other?\n\nIt kind of makes me think of this quote from the matrix\n\n_But\u2026 look- see those birds? At some point a program was written to govern them. A program was written to watch over the trees, and the wind, the sunrise, and sunset. There are programs running all over the place. The ones doing their job, doing what they were meant to do, are invisible. You\u2019d never even know they were here._",
        "user": "U5T9JLUAE",
        "ts": "1688659906.065089",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "/uRe",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "In your example do you see things like the calendar and the to-do list as being governed by separate programs/pieces of code and using physics simulation as a sort of implicit API through which things interact with each other?\n\nIt kind of makes me think of this quote from the matrix\n\n"
                            },
                            {
                                "type": "text",
                                "text": "But\u2026 look- see those birds? At some point a program was written to govern them. A program was written to watch over the trees, and the wind, the sunrise, and sunset. There are programs running all over the place. The ones doing their job, doing what they were meant to do, are invisible. You\u2019d never even know they were here.",
                                "style": {
                                    "italic": true
                                }
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1688481543.459979",
        "parent_user_id": "UE6EFEPTQ"
    },
    {
        "client_msg_id": "ac4a690d-7b77-4cfa-bca7-c8d0bdd321a9",
        "type": "message",
        "text": "<@UJBAJNFLK>: That's a really good point, and I completely agree about \"grown too large and constrain their users rather than empowering them\", but it's way worse than that excellent toaster example: what I'm describing is a virtual world where, if you tried to remove the toast to eat it, it turns to cardboard! You can only eat it by placing your face up to the toaster's Consumption Panel.  Taking it further, and back to the Canonical Tool - the hammer - and the Canonical Stuff - the nail. Now, not only does the nail only allow itself to be hammered in by its very specific hammer, but the hammer has to stay in the room, or all the nails turn to cardboard, and your furniture collapses.\n\nIn this app-trap-tool world, only the specific tool gives you access to the \"stuff\" and animates the properties and behaviour of that stuff, in all contexts. Some stuff can sometimes actually be animated by multiple app-tools, but you still have the same dependency, the same trap replicated, and random stuff can't mix with random other stuff. Outside of their tool, stuff turns to useless \"cardboard\" - also know as inert \"files\" or \"export dumps\" in the app-based world of computers.\n\nIn our physical reality we know that tools are made by tools and so are \"stuff\" while that happens, that non-tool stuff can be repurposed as tools, and so on. There's no significant difference in the real world, except sometimes in our minds, between \"tool\" and \"stuff\". We can hammer in a nail with a rock, then use a wheelbarrow to carry a load of rocks that the wheelbarrow-maker never even imagined. We can pull out the nail at any time in the future and use it as a tool to dig out some dirt from a fence panel. Everything is remashable in any way that works.",
        "user": "UE6EFEPTQ",
        "ts": "1688672898.827849",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "b83",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UJBAJNFLK"
                            },
                            {
                                "type": "text",
                                "text": ": That's a really good point, and I completely agree about \"grown too large and constrain their users rather than empowering them\", but it's way worse than that excellent toaster example: what I'm describing is a virtual world where, if you tried to remove the toast to eat it, it turns to cardboard! You can only eat it by placing your face up to the toaster's Consumption Panel.  Taking it further, and back to the Canonical Tool - the hammer - and the Canonical Stuff - the nail. Now, not only does the nail only allow itself to be hammered in by its very specific hammer, but the hammer has to stay in the room, or all the nails turn to cardboard, and your furniture collapses.\n\nIn this app-trap-tool world, only the specific tool gives you access to the \"stuff\" and animates the properties and behaviour of that stuff, in all contexts. Some stuff can sometimes actually be animated by multiple app-tools, but you still have the same dependency, the same trap replicated, and random stuff can't mix with random other stuff. Outside of their tool, stuff turns to useless \"cardboard\" - also know as inert \"files\" or \"export dumps\" in the app-based world of computers.\n\nIn our physical reality we know that tools are made by tools and so are \"stuff\" while that happens, that non-tool stuff can be repurposed as tools, and so on. There's no significant difference in the real world, except sometimes in our minds, between \"tool\" and \"stuff\". We can hammer in a nail with a rock, then use a wheelbarrow to carry a load of rocks that the wheelbarrow-maker never even imagined. We can pull out the nail at any time in the future and use it as a tool to dig out some dirt from a fence panel. Everything is remashable in any way that works."
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1688481543.459979",
        "parent_user_id": "UE6EFEPTQ"
    },
    {
        "client_msg_id": "080ad09a-07c4-47df-bef0-8e096b6073d7",
        "type": "message",
        "text": "<@U5T9JLUAE> Thanks for the Matrix quote - yes that's a good description of what I mean by \"internally animated\". You can have animation code written in C or Python if you like, or something like spreadsheet formulae, or Realtalk. Objects interact not always or specifically through physics-based simulation, although that's a very likely medium, but simply through the \"API\" of mutual current-state awareness, which is basically how I believe reality works. It doesn't need to be 3D or physics state, but can be 2D current state too.\n\nSo if you attach a to-do to a calendar in 3D, there's a physical proximity and possibly a physics interaction, which is kinda lower level, and involves structural links between them, in the scenegraph. But you can also have what I call \"semantic links\", which go up the abstraction levels. So the to-do may know what it means when attached to a calendar event - e.g., it now knows when its job is due to be finished, etc.",
        "user": "UE6EFEPTQ",
        "ts": "1688673704.048079",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "vu2h",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U5T9JLUAE"
                            },
                            {
                                "type": "text",
                                "text": " Thanks for the Matrix quote - yes that's a good description of what I mean by \"internally animated\". You can have animation code written in C or Python if you like, or something like spreadsheet formulae, or Realtalk. Objects interact not always or specifically through physics-based simulation, although that's a very likely medium, but simply through the \"API\" of mutual current-state awareness, which is basically how I believe reality works. It doesn't need to be 3D or physics state, but can be 2D current state too.\n\nSo if you attach a to-do to a calendar in 3D, there's a physical proximity and possibly a physics interaction, which is kinda lower level, and involves structural links between them, in the scenegraph. But you can also have what I call \"semantic links\", which go up the abstraction levels. So the to-do may know what it means when attached to a calendar event - e.g., it now knows when its job is due to be finished, etc."
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1688481543.459979",
        "parent_user_id": "UE6EFEPTQ",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U5T9JLUAE"
                ],
                "count": 1
            }
        ]
    }
]