[
    {
        "client_msg_id": "3416e02b-2a1f-4e02-8758-bce1f1b7e96c",
        "type": "message",
        "text": "<https://www.youtube.com/watch?v=OJv8rFap0Nw|Beyond functional programming: a taste of Verse. Simon Peyton Jones &amp; Tim Sweeney | Lambda Days 2023>\n\n&gt; Verse is a new programming language, being designed at Epic Games as the language of the metaverse. Verse is a functional logic language, with a bunch of innovative ideas. Like Haskell, Verse is declarative (a variable in Verse stands for just one, immutable value), and higher order (lambdas are first class). But Verse goes well beyond Haskell, with existential variables, unification, expressions that yield multiple values, and much more besides. In this talk we'll give you a sense of what functional logic programming is about, what it looks like to program in Verse, and how we can give meaning to Verse programs using rewrite rules.",
        "user": "UBN9AFS0N",
        "ts": "1689018476.139799",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "q8d",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "link",
                                "url": "https://www.youtube.com/watch?v=OJv8rFap0Nw",
                                "text": "Beyond functional programming: a taste of Verse. Simon Peyton Jones & Tim Sweeney | Lambda Days 2023"
                            },
                            {
                                "type": "text",
                                "text": "\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Verse is a new programming language, being designed at Epic Games as the language of the metaverse. Verse is a functional logic language, with a bunch of innovative ideas. Like Haskell, Verse is declarative (a variable in Verse stands for just one, immutable value), and higher order (lambdas are first class). But Verse goes well beyond Haskell, with existential variables, unification, expressions that yield multiple values, and much more besides. In this talk we'll give you a sense of what functional logic programming is about, what it looks like to program in Verse, and how we can give meaning to Verse programs using rewrite rules."
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "from_url": "https://www.youtube.com/watch?v=OJv8rFap0Nw",
                "service_icon": "https://a.slack-edge.com/80588/img/unfurl_icons/youtube.png",
                "thumb_url": "https://i.ytimg.com/vi/OJv8rFap0Nw/hqdefault.jpg",
                "thumb_width": 480,
                "thumb_height": 360,
                "video_html": "<iframe width=\"400\" height=\"225\" src=\"https://www.youtube.com/embed/OJv8rFap0Nw?feature=oembed&autoplay=1&iv_load_policy=3\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" allowfullscreen title=\"Beyond functional programming: a taste of Verse. Simon Peyton Jones &amp; Tim Sweeney | Lambda Days 2023\"></iframe>",
                "video_html_width": 400,
                "video_html_height": 225,
                "id": 1,
                "original_url": "https://www.youtube.com/watch?v=OJv8rFap0Nw",
                "fallback": "YouTube Video: Beyond functional programming: a taste of Verse. Simon Peyton Jones & Tim Sweeney | Lambda Days 2023",
                "title": "Beyond functional programming: a taste of Verse. Simon Peyton Jones &amp; Tim Sweeney | Lambda Days 2023",
                "title_link": "https://www.youtube.com/watch?v=OJv8rFap0Nw",
                "author_name": "Code Sync",
                "author_link": "https://www.youtube.com/@CodeSync",
                "service_name": "YouTube",
                "service_url": "https://www.youtube.com/"
            }
        ],
        "thread_ts": "1689018476.139799",
        "reply_count": 2,
        "reply_users_count": 1,
        "latest_reply": "1689030502.398029",
        "reply_users": [
            "U02U0AS3J49"
        ],
        "is_locked": false,
        "subscribed": true,
        "last_read": "1689030502.398029"
    },
    {
        "client_msg_id": "a29c2eeb-dcf9-4e05-ba82-6669b275b721",
        "type": "message",
        "text": "<https://www.nngroup.com/articles/ai-paradigm/|AI: First New UI Paradigm in 60 Years>\n\n*Summary:* AI is introducing the third user-interface paradigm in computing history, shifting to a new interaction mechanism where users tell the computer what they want, not how to do it \u2014 thus reversing the locus of control.",
        "user": "UBN9AFS0N",
        "ts": "1689020107.746899",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "2ml8",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "link",
                                "url": "https://www.nngroup.com/articles/ai-paradigm/",
                                "text": "AI: First New UI Paradigm in 60 Years"
                            },
                            {
                                "type": "text",
                                "text": "\n\n"
                            },
                            {
                                "type": "text",
                                "text": "Summary:",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " AI is introducing the third user-interface paradigm in computing history, shifting to a new interaction mechanism where users tell the computer what they want, not how to do it \u2014 thus reversing the locus of control."
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1689020107.746899",
        "reply_count": 2,
        "reply_users_count": 2,
        "latest_reply": "1689165003.677719",
        "reply_users": [
            "U04JY2BF24E",
            "UGWUJUZHT"
        ],
        "is_locked": false,
        "subscribed": true,
        "last_read": "1689165003.677719"
    },
    {
        "client_msg_id": "3ead707a-0b61-45ad-aa4a-3e13ae6f1631",
        "type": "message",
        "text": "Interesting... a lot of things feel very familiar to me given my familiarity with Prolog, but evidently strike functional programmers as odd...",
        "user": "U02U0AS3J49",
        "ts": "1689027390.929849",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "5kJBX",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Interesting... a lot of things feel very familiar to me given my familiarity with Prolog, but evidently strike functional programmers as odd..."
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1689018476.139799",
        "parent_user_id": "UBN9AFS0N"
    },
    {
        "client_msg_id": "db868644-7fed-48b1-8cd2-98e300675fa2",
        "type": "message",
        "text": "I would quibble with what keywords they are using in a few places, but it sure seems interesting. My work is less interested in making sure the program is correct, because I'm trying to do knowledge representation of a thing that might not be. Being able to still run queries when part of the code doesn't make any sense - because the law it models doesn't make any sense - is part of what I need. So verification is sort of worthless to me. The \"we don't know, we might convert it to first order logic and throw z3 at it or something\" approach seems a bit... sketchy. That doesn't give me a lot of hope that it delivers on the promises of validation. But co-opting a bunch of game developers into testing your language by deploying it as the scripting language for your huge hit game is a unique play.",
        "user": "U02U0AS3J49",
        "ts": "1689030502.398029",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ldJZn",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I would quibble with what keywords they are using in a few places, but it sure seems interesting. My work is less interested in making sure the program is correct, because I'm trying to do knowledge representation of a thing that might not be. Being able to still run queries when part of the code doesn't make any sense - because the law it models doesn't make any sense - is part of what I need. So verification is sort of worthless to me. The \"we don't know, we might convert it to first order logic and throw z3 at it or something\" approach seems a bit... sketchy. That doesn't give me a lot of hope that it delivers on the promises of validation. But co-opting a bunch of game developers into testing your language by deploying it as the scripting language for your huge hit game is a unique play."
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1689018476.139799",
        "parent_user_id": "UBN9AFS0N"
    },
    {
        "client_msg_id": "e67e4a0c-d743-48ee-953e-4c8484f95271",
        "type": "message",
        "text": "There is something to be said here around the difference between  expressing \"intent\" and acting with \"intent\". I heard recently with respect to craft (not software specifically, but craft in general): _\"Craft is not just the intent but also the hand of the maker and the process, trial, and error all coming together to make something careful and intentional.\"_ Is the intention here shared between programmer and AI? Can we consider the AI to hold intent? Or are we moving into a world where some of that intention is lost?",
        "user": "U04JY2BF24E",
        "ts": "1689131165.241309",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Xdw",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "There is something to be said here around the difference between  expressing \"intent\" and acting with \"intent\". I heard recently with respect to craft (not software specifically, but craft in general): "
                            },
                            {
                                "type": "text",
                                "text": "\"Craft is not just the intent but also the hand of the maker and the process, trial, and error all coming together to make something careful and intentional.\" ",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "Is the intention here shared between programmer and AI? Can we consider the AI to hold intent? Or are we moving into a world where some of that intention is lost?"
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1689020107.746899",
        "parent_user_id": "UBN9AFS0N"
    },
    {
        "client_msg_id": "6aee3473-4682-40ca-8ac2-6d325ff97894",
        "type": "message",
        "text": "FTR: I think that the phrase \u201c..tell the computer what they want, not how to do it...\u201d does not capture the difference between software-GUIs and AI-based interaction.\n\n<https://publish.obsidian.md/programmingsimplicity/2023-07-11-First+New+UI+Paradigm+In+60+Years%3F>",
        "user": "UGWUJUZHT",
        "ts": "1689165003.677719",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "UEa7z",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "FTR: I think that the phrase \u201c..tell the computer what they want, not how to do it...\u201d does not capture the difference between software-GUIs and AI-based interaction.\n\n"
                            },
                            {
                                "type": "link",
                                "url": "https://publish.obsidian.md/programmingsimplicity/2023-07-11-First+New+UI+Paradigm+In+60+Years%3F"
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "image_url": "https://ogimage.obsidian.md/og-image.png?title=2023-07-11-First+New+UI+Paradigm+In+60+Years%3F&description=...+Reading+and+thinking+about%3A+https%3A%2F%2Fwww.nngroup.com%2Farticles%2Fai-paradigm%2F+The+above+article+claims+that+AI+is+the+first+New+GUI+paradigm+in+60+years.+I+think+that+the+phrase+%22..tell+the+computer+%E2%80%A6",
                "image_width": 1200,
                "image_height": 630,
                "image_bytes": 59660,
                "from_url": "https://publish.obsidian.md/programmingsimplicity/2023-07-11-First+New+UI+Paradigm+In+60+Years%3F",
                "id": 1,
                "original_url": "https://publish.obsidian.md/programmingsimplicity/2023-07-11-First+New+UI+Paradigm+In+60+Years%3F",
                "fallback": "2023-07-11-First New UI Paradigm In 60 Years? - Obsidian Publish",
                "text": "... Reading and thinking about: <https://www.nngroup.com/articles/ai-paradigm/> The above article claims that AI is the first New GUI paradigm in 60 years. I think that the phrase \"..tell the computer \u2026",
                "title": "2023-07-11-First New UI Paradigm In 60 Years? - Obsidian Publish",
                "title_link": "https://publish.obsidian.md/programmingsimplicity/2023-07-11-First+New+UI+Paradigm+In+60+Years%3F",
                "service_name": "publish.obsidian.md"
            }
        ],
        "thread_ts": "1689020107.746899",
        "parent_user_id": "UBN9AFS0N"
    }
]