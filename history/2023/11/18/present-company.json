[
    {
        "client_msg_id": "5cbb0a1e-2b3f-4357-a928-a50de44a22b9",
        "type": "message",
        "text": "So I know the \"node based\"/\"boxes and arrows\" style interfaces come up a lot around here...\n\nIs there any current consensus on good/best options for a library to support building/prototyping them? Does everyone just roll their own from scratch?",
        "user": "UL2SJ88Q3",
        "ts": "1700291724.896059",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "vhziq",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "So I know the \"node based\"/\"boxes and arrows\" style interfaces come up a lot around here...\n\nIs there any current consensus on good/best options for a library to support building/prototyping them? Does everyone just roll their own from scratch?"
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1700291724.896059",
        "reply_count": 7,
        "reply_users_count": 6,
        "latest_reply": "1700343422.957379",
        "reply_users": [
            "U05SU27S1M2",
            "UGWUJUZHT",
            "U066DHAPLAU",
            "U023V63MF6V",
            "UC2A2ARPT",
            "UL2SJ88Q3"
        ],
        "is_locked": false,
        "subscribed": false
    },
    {
        "client_msg_id": "3c1497fc-6792-4bbc-95b6-562e2d00b447",
        "type": "message",
        "text": "I haven't used it but this looks nice <https://reactflow.dev/>",
        "user": "U05SU27S1M2",
        "ts": "1700299833.010429",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "IRPdc",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I haven't used it but this looks nice "
                            },
                            {
                                "type": "link",
                                "url": "https://reactflow.dev/"
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "image_url": "https://reactflow.dev/img/og/react-flow-og.jpg",
                "image_width": 1200,
                "image_height": 640,
                "image_bytes": 117405,
                "from_url": "https://reactflow.dev/",
                "service_icon": "https://reactflow.dev/img/favicon.ico",
                "id": 1,
                "original_url": "https://reactflow.dev/",
                "fallback": "Node-Based UIs in React \u2013 React Flow",
                "text": "Highly customizable React library for workflow builders, no-code apps, image processing, visualizers, and more",
                "title": "Node-Based UIs in React \u2013 React Flow",
                "title_link": "https://reactflow.dev/",
                "service_name": "reactflow.dev"
            }
        ],
        "thread_ts": "1700291724.896059",
        "parent_user_id": "UL2SJ88Q3",
        "reactions": [
            {
                "name": "eyes",
                "users": [
                    "UL2SJ88Q3"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "41d6a713-a3af-44fd-8224-0da2f49f409e",
        "type": "message",
        "text": "This isn\u2019t what you\u2019re asking for... I (we) use existing diagram editors and \u201cmake do\u201d with what they are able to draw.  The editor(s) we use save diagrams as XML.  We parse the XML and compile to executable code.  Some day, we\u2019ll write a proper box-and-arrow editor using a box-and-arrow programming language (properly reactive).  Currently, we\u2019re using <http://draw.io|draw.io> by force of momentum.  I\u2019ve used yEd and have looked at Excalidraw (both would be suitable).",
        "user": "UGWUJUZHT",
        "ts": "1700306561.264879",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "cVsOG",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "This isn\u2019t what you\u2019re asking for... I (we) use existing diagram editors and \u201cmake do\u201d with what they are able to draw.  The editor(s) we use save diagrams as XML.  We parse the XML and compile to executable code.  Some day, we\u2019ll write a proper box-and-arrow editor using a box-and-arrow programming language (properly reactive).  Currently, we\u2019re using "
                            },
                            {
                                "type": "link",
                                "url": "http://draw.io",
                                "text": "draw.io"
                            },
                            {
                                "type": "text",
                                "text": " by force of momentum.  I\u2019ve used yEd and have looked at Excalidraw (both would be suitable)."
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1700291724.896059",
        "parent_user_id": "UL2SJ88Q3"
    },
    {
        "client_msg_id": "19824385-9007-465c-b407-491723a4581c",
        "type": "message",
        "text": "Are you trying to implement the node editor UI into some other user-facing aspect of your project, or are you trying to use the node diagram for something internal to the project?",
        "user": "U066DHAPLAU",
        "ts": "1700325055.337499",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "PssuK",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Are you trying to implement the node editor UI into some other user-facing aspect of your project, or are you trying to use the node diagram for something internal to the project?"
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1700291724.896059",
        "parent_user_id": "UL2SJ88Q3"
    },
    {
        "client_msg_id": "555bf968-23c8-4cd9-94df-f9caddef2ebe",
        "type": "message",
        "text": "We went home-grown for our main programming interface. We also have an embedded state machine diagramme editor which is constrained enough that we use graphviz for that and let it auto-layout.",
        "user": "U023V63MF6V",
        "ts": "1700325135.196159",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "a3f+a",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "We went home-grown for our main programming interface. We also have an embedded state machine diagramme editor which is constrained enough that we use graphviz for that and let it auto-layout."
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1700291724.896059",
        "parent_user_id": "UL2SJ88Q3"
    },
    {
        "client_msg_id": "8499FF05-EC88-4794-8360-E40D433A6A47",
        "type": "message",
        "text": "I always roll my own :shrug: \n\nThe interface is where I can do interesting work. If someone has an off the shelf solution for the _semantics_ of a node-wire interface, I would take that :)",
        "user": "UC2A2ARPT",
        "ts": "1700330432.543789",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "cSyt0",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I always roll my own "
                            },
                            {
                                "type": "emoji",
                                "name": "shrug",
                                "unicode": "1f937"
                            },
                            {
                                "type": "text",
                                "text": " \n\nThe interface is where I can do interesting work. If someone has an off the shelf solution for the "
                            },
                            {
                                "type": "text",
                                "text": "semantics",
                                "style": {
                                    "bold": false,
                                    "italic": true,
                                    "strike": false
                                }
                            },
                            {
                                "type": "text",
                                "text": " of a node-wire interface, I would take that :)"
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UC2A2ARPT",
            "ts": "1700330549.000000"
        },
        "thread_ts": "1700291724.896059",
        "parent_user_id": "UL2SJ88Q3"
    },
    {
        "client_msg_id": "3d6b7430-98c5-4f2b-8a6f-5470de47cd17",
        "type": "message",
        "text": "Further on node-based UIs, and actually looking for judgement for a change: does anyone else find themselves mainly frustrated by the layout problems, such as...\n\u2022 frequently needing to move sets of nodes around to make the layout more comprehensible/memorable\n\u2022 no easy way to add nodes in the middle of a flow without having to reorganise\n\u2022 zooming out far enough to get a good sense of the overall layout leaves you unable to read any labels\n... and how often these UIs just leave these problems as exercises for the user, without any automated assistance?\n\nI love the idea of node-based code, but in practice I've yet to see systems like this that are as readable as well laid-out and formatted code. Don't get me wrong, I think most traditional textual code could be laid out and formatted much better too, but _in general_ I find it easier to scan and understand the top-down flow of textual code than nodes.\n\nMaybe I just haven't seen the right tools which do this better? Or maybe I'm in a tiny minority? What do folks here think? (And please forgive me if this conversation has been done to death in this Slack already, I've not seen it.)",
        "user": "UFV8P4472",
        "ts": "1700339302.831259",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "CUczW",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Further on node-based UIs, and actually looking for judgement for a change: does anyone else find themselves mainly frustrated by the layout problems, such as...\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "frequently needing to move sets of nodes around to make the layout more comprehensible/memorable"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "no easy way to add nodes in the middle of a flow without having to reorganise"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "zooming out far enough to get a good sense of the overall layout leaves you unable to read any labels"
                                    }
                                ]
                            }
                        ],
                        "style": "bullet",
                        "indent": 0,
                        "border": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "... and how often these UIs just leave these problems as exercises for the user, without any automated assistance?\n\nI love the idea of node-based code, but in practice I've yet to see systems like this that are as readable as well laid-out and formatted code. Don't get me wrong, I think most traditional textual code could be laid out and formatted much better too, but "
                            },
                            {
                                "type": "text",
                                "text": "in general",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " I find it easier to scan and understand the top-down flow of textual code than nodes.\n\nMaybe I just haven't seen the right tools which do this better? Or maybe I'm in a tiny minority? What do folks here think? (And please forgive me if this conversation has been done to death in this Slack already, I've not seen it.)"
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UFV8P4472",
            "ts": "1700339344.000000"
        },
        "thread_ts": "1700339302.831259",
        "reply_count": 15,
        "reply_users_count": 6,
        "latest_reply": "1700434653.422679",
        "reply_users": [
            "UL2SJ88Q3",
            "UK3LH8CF5",
            "UFV8P4472",
            "UC2A2ARPT",
            "U03U0SCU5LH",
            "UGWUJUZHT"
        ],
        "is_locked": false,
        "subscribed": false,
        "reactions": [
            {
                "name": "100",
                "users": [
                    "UL2SJ88Q3"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "b2b9daee-af30-43fd-bf6e-8d061dbc3205",
        "type": "message",
        "text": "&gt; Are you trying to implement the node editor UI into some other user-facing aspect of your project, or are you trying to use the node diagram for something internal to the project?\n&gt; \nI'm way more in the \"prototype\" than \"project\" phase... but my goal is to explore some ideas for tools/interfaces/experiences around building and managing these types of things, somewhat in general,  though hopefully with some demos actually working on/with some real systems. So I suppose the answer is a little of both.",
        "user": "UL2SJ88Q3",
        "ts": "1700342811.538679",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "oLE+B",
                "elements": [
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Are you trying to implement the node editor UI into some other user-facing aspect of your project, or are you trying to use the node diagram for something internal to the project?\n"
                            }
                        ],
                        "border": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nI'm way more in the \"prototype\" than \"project\" phase... but my goal is to explore some ideas for tools/interfaces/experiences around building and managing these types of things, somewhat in general,  though hopefully with some demos actually working on/with some real systems. So I suppose the answer is a little of both."
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1700291724.896059",
        "parent_user_id": "UL2SJ88Q3"
    },
    {
        "client_msg_id": "ac4a491f-feb6-4b43-b868-37b329b9b0a6",
        "type": "message",
        "text": "&gt; The interface is where I can do interesting work.\n&gt; \nI agree in some sense, but also see potential value in hewing close enough to the current state of technical implementation to make specific differences stand out as distinct, since part of my goal is to drive/encourage changes in existing projects vs just building something completely novel.",
        "user": "UL2SJ88Q3",
        "ts": "1700343422.957379",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "qoSpj",
                "elements": [
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The interface is where I can do interesting work.\n"
                            }
                        ],
                        "border": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nI agree in some sense, but also see potential value in hewing close enough to the current state of technical implementation to make specific differences stand out as distinct, since part of my goal is to drive/encourage changes in existing projects vs just building something completely novel."
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1700291724.896059",
        "parent_user_id": "UL2SJ88Q3"
    },
    {
        "client_msg_id": "d3d5a690-bff9-4a39-b65a-5e694207a45b",
        "type": "message",
        "text": "I don't know that I'd say I'm \"mainly frustrated by layout problems\"... but that's largely because I'm _also_ frustrated by so many other things. :sweat_smile:",
        "user": "UL2SJ88Q3",
        "ts": "1700344983.488489",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "0k21Y",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I don't know that I'd say I'm \"mainly frustrated by layout problems\"... but that's largely because I'm "
                            },
                            {
                                "type": "text",
                                "text": "also",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " frustrated by so many other things. "
                            },
                            {
                                "type": "emoji",
                                "name": "sweat_smile",
                                "unicode": "1f605"
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1700339302.831259",
        "parent_user_id": "UFV8P4472"
    },
    {
        "client_msg_id": "6e5396ab-8fb9-45d1-81a2-5d40e8c9f2fd",
        "type": "message",
        "text": "I absolutely do agree with those points though",
        "user": "UL2SJ88Q3",
        "ts": "1700345004.987049",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Evtp4",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I absolutely do agree with those points though"
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1700339302.831259",
        "parent_user_id": "UFV8P4472"
    },
    {
        "client_msg_id": "c0b4d1e6-269d-4cba-baf9-833115ee4b76",
        "type": "message",
        "text": "My interest in the area is driven by the increasing presence of these types of tools in more business systems where I need to interact with them and have learned to deeply resent the general breadth and quality of the tooling",
        "user": "UL2SJ88Q3",
        "ts": "1700345222.267579",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "tZHdt",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "My interest in the area is driven by the increasing presence of these types of tools in more business systems where I need to interact with them and have learned to deeply resent the general breadth and quality of the tooling"
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1700339302.831259",
        "parent_user_id": "UFV8P4472"
    },
    {
        "client_msg_id": "BBFF8818-CC45-44C9-BF59-CE9748C84B5A",
        "type": "message",
        "text": "Have you listened to <@UC2A2ARPT>\u2019s hest podcast? He talks about all these kinds of problems <https://ivanish.ca/hest-podcast/|https://ivanish.ca/hest-podcast/>",
        "user": "UK3LH8CF5",
        "ts": "1700353517.427239",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "VEbHq",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Have you listened to "
                            },
                            {
                                "type": "user",
                                "user_id": "UC2A2ARPT"
                            },
                            {
                                "type": "text",
                                "text": "\u2019s hest podcast"
                            },
                            {
                                "type": "text",
                                "text": "?"
                            },
                            {
                                "type": "text",
                                "text": " He talks about all these kinds of problems "
                            },
                            {
                                "type": "link",
                                "url": "https://ivanish.ca/hest-podcast/",
                                "text": "https://ivanish.ca/hest-podcast/"
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1700339302.831259",
        "parent_user_id": "UFV8P4472"
    },
    {
        "client_msg_id": "632f50d2-7a29-4214-8abf-1fdb3f644e58",
        "type": "message",
        "text": "<@UK3LH8CF5> I haven't, thanks for the tip! Any particular episode, and is there a transcript?",
        "user": "UFV8P4472",
        "ts": "1700364851.631489",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "KCQ8e",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UK3LH8CF5"
                            },
                            {
                                "type": "text",
                                "text": " I haven't, thanks for the tip! Any particular episode, and is there a transcript?"
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1700339302.831259",
        "parent_user_id": "UFV8P4472"
    },
    {
        "client_msg_id": "F8E97572-BE6D-401A-84E4-AB4C05E318BD",
        "type": "message",
        "text": "There\u2019s no transcript. I\u2019d definitely recommend starting from the beginning personally. It is definitely a progression of Ivan exploring what he wants out of hest. But I\u2019ll also let him reply since he is currently typing",
        "user": "UK3LH8CF5",
        "ts": "1700365574.387329",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "e/DZc",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "There\u2019s no transcript. I\u2019d definitely recommend starting from the beginning personally. It is definitely a progression of Ivan exploring what he wants out of hest. But I\u2019ll also let him reply since he is currently typing"
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UK3LH8CF5",
            "ts": "1700365597.000000"
        },
        "thread_ts": "1700339302.831259",
        "parent_user_id": "UFV8P4472",
        "reactions": [
            {
                "name": "cake",
                "users": [
                    "UC2A2ARPT"
                ],
                "count": 1
            },
            {
                "name": "+1",
                "users": [
                    "UFV8P4472"
                ],
                "count": 1
            },
            {
                "name": "thank-you",
                "users": [
                    "UFV8P4472"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "03e88991-2e78-4c65-aa2f-ef87a3647529",
        "type": "message",
        "text": "<@UFV8P4472> I'll butt in \u2014 I don't remember which episodes contain which thoughts, and yeah there's no transcript, sorry. But this notion that _the interfaces to existing visual programming tools are dreadfully lacklustre_ is a significant motivator of my work. In addition to the podcast, I've done <https://github.com/ivanreese/visual-programming-codex/blob/main/impressions/origami.md|some> writing <https://github.com/ivanreese/visual-programming-codex/blob/main/impressions/app-store-illustration.md|about> these things, and would love to dig into this subject with you.\n\nOne quick hit \u2014 you mentioned \"these UIs just leave these problems as exercises for the user, without any automated assistance.\" I'm strongly of the opinion that, say, force-directed layout of nodes is directionally wrong. But I'm also in favor of assistance. Max/MSP has a couple of \"clean up my layout for me\" tools, for instance, which are fine on principal but (last I used them ~3 years ago) woefully underdeveloped. I long to see someone take the approach to a visual programming interface that, say, Steve Ruiz took with tldraw, or <@U05M5A8E0NT> took with his carrot editors \u2014 sweating every tiny detail of the interactions, trying to make something that feels so _right_ it disappears.",
        "user": "UC2A2ARPT",
        "ts": "1700365800.166489",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "u2Php",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UFV8P4472"
                            },
                            {
                                "type": "text",
                                "text": " I'll butt in \u2014 I don't remember which episodes contain which thoughts, and yeah there's no transcript, sorry. But this notion that "
                            },
                            {
                                "type": "text",
                                "text": "the interfaces to existing visual programming tools are dreadfully lacklustre ",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "is a significant motivator of my work. In addition to the podcast, I've done "
                            },
                            {
                                "type": "link",
                                "url": "https://github.com/ivanreese/visual-programming-codex/blob/main/impressions/origami.md",
                                "text": "some"
                            },
                            {
                                "type": "text",
                                "text": " writing "
                            },
                            {
                                "type": "link",
                                "url": "https://github.com/ivanreese/visual-programming-codex/blob/main/impressions/app-store-illustration.md",
                                "text": "about"
                            },
                            {
                                "type": "text",
                                "text": " these things, and would love to dig into this subject with you.\n\nOne quick hit \u2014 you mentioned \"these UIs just leave these problems as exercises for the user, without any automated assistance.\" I'm strongly of the opinion that, say, force-directed layout of nodes is directionally wrong. But I'm also in favor of assistance. Max/MSP has a couple of \"clean up my layout for me\" tools, for instance, which are fine on principal but (last I used them ~3 years ago) woefully underdeveloped. I long to see someone take the approach to a visual programming interface that, say, Steve Ruiz took with tldraw, or "
                            },
                            {
                                "type": "user",
                                "user_id": "U05M5A8E0NT"
                            },
                            {
                                "type": "text",
                                "text": " took with his carrot editors \u2014 sweating every tiny detail of the interactions, trying to make something that feels so "
                            },
                            {
                                "type": "text",
                                "text": "right ",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "it disappears."
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1700339302.831259",
        "parent_user_id": "UFV8P4472",
        "reactions": [
            {
                "name": "clap",
                "users": [
                    "UFV8P4472",
                    "U0123H7JRDM"
                ],
                "count": 2
            }
        ]
    },
    {
        "client_msg_id": "b49a53e0-b915-4a11-9504-2b0a63dd033d",
        "type": "message",
        "text": "One other quick one \u2014 you mentioned \"zooming out far enough to get a good sense of the overall layout leaves you unable to read any labels\". Yeah, this is baffling. Like, the fact that visual programming (at least of the node-wire style) typically takes place in a zoomable canvas ought to be a superpower! Like, zooming out from text code is pretty useful (eg: minimaps, or stuff like Makepad, or in some sense code folding), and that only leverages the _accidental_ geometry of the syntax. If you're in a graphical canvas, you should be able to do so much more with the sense of scale.",
        "user": "UC2A2ARPT",
        "ts": "1700365975.015599",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "A7+GY",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "One other quick one \u2014 you mentioned \"zooming out far enough to get a good sense of the overall layout leaves you unable to read any labels\". Yeah, this is baffling. Like, the fact that visual programming (at least of the node-wire style) typically takes place in a zoomable canvas ought to be a superpower! Like, zooming out from text code is pretty useful (eg: minimaps, or stuff like Makepad, or in some sense code folding), and that only leverages the "
                            },
                            {
                                "type": "text",
                                "text": "accidental",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " geometry of the syntax. If you're in a graphical canvas, you should be able to do so much more with the sense of scale."
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1700339302.831259",
        "parent_user_id": "UFV8P4472"
    },
    {
        "client_msg_id": "384bca5b-03c4-4b0c-b186-947def35d792",
        "type": "message",
        "text": "In text you also frequently rearrange lines of text, split them to multiple lines extract a function, rename variables etc. All changes that have no effect, just to make it more pleasing, more readable. Arranging nodes is the same. It actually helps me to think and get into the flow. As for zooming out, even if I can't read any labels, I find it easier to read a graph, as I can quickly spot a \"neighborhood\" and be reminded what I've done there. While a text minimap is less distinct. But you do have to zoom out more often, as nodes are less compact.",
        "user": "U03U0SCU5LH",
        "ts": "1700378888.548419",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "WLeZH",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "In text you also frequently rearrange lines of text, split them to multiple lines extract a function, rename variables etc. All changes that have no effect, just to make it more pleasing, more readable. Arranging nodes is the same. It actually helps me to think and get into the flow. As for zooming out, even if I can't read any labels, I find it easier to read a graph, as I can quickly spot a \"neighborhood\" and be reminded what I've done there. While a text minimap is less distinct. But you do have to zoom out more often, as nodes are less compact."
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1700339302.831259",
        "parent_user_id": "UFV8P4472",
        "reactions": [
            {
                "name": "cake",
                "users": [
                    "UC2A2ARPT"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "428ebd02-f090-488b-aad4-cf91c1a5e86b",
        "type": "message",
        "text": "<@UC2A2ARPT> <@U03U0SCU5LH> Wow, thank you both! Tons to chew on here, and it's already way past my bedtime so I'm just going to rattle off a few hurried things to explore in more depth tomorrow...\n1. LOVE <@UC2A2ARPT>'s <https://github.com/ivanreese/visual-programming-codex/blob/main/impressions/app-store-illustration.md|notes on the App Store illustration>, so many great points and ideas that I want to explore further\n2. <@U03U0SCU5LH>'s point about the shape of a \"neighbourhood\" is really interesting, makes me wonder if it's like geographic maps where you get some sense of a place by its layout. But does it work that way with visual code you haven't seen before, or is it just that you remember particular shapes after having spent some time creating and tweaking them?\n3. \"But you do have to zoom out more often, as nodes are less compact.\" - yep, this is another problem I have with VPLs: much lower density",
        "user": "UFV8P4472",
        "ts": "1700387679.223809",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "bnFhd",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UC2A2ARPT"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "user",
                                "user_id": "U03U0SCU5LH"
                            },
                            {
                                "type": "text",
                                "text": " Wow, thank you both! Tons to chew on here, and it's already way past my bedtime so I'm just going to rattle off a few hurried things to explore in more depth tomorrow...\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "LOVE "
                                    },
                                    {
                                        "type": "user",
                                        "user_id": "UC2A2ARPT"
                                    },
                                    {
                                        "type": "text",
                                        "text": "'s "
                                    },
                                    {
                                        "type": "link",
                                        "url": "https://github.com/ivanreese/visual-programming-codex/blob/main/impressions/app-store-illustration.md",
                                        "text": "notes on the App Store illustration"
                                    },
                                    {
                                        "type": "text",
                                        "text": ", so many great points and ideas that I want to explore further"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "user",
                                        "user_id": "U03U0SCU5LH"
                                    },
                                    {
                                        "type": "text",
                                        "text": "'s point about the shape of a \"neighbourhood\" is really interesting, makes me wonder if it's like geographic maps where you get some sense of a place by its layout. But does it work that way with visual code you haven't seen before, or is it just that you remember particular shapes after having spent some time creating and tweaking them?"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "\"But you do have to zoom out more often, as nodes are less compact.\" - yep, this is another problem I have with VPLs: much lower density"
                                    }
                                ]
                            }
                        ],
                        "style": "ordered",
                        "indent": 0,
                        "border": 0
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1700339302.831259",
        "parent_user_id": "UFV8P4472"
    },
    {
        "client_msg_id": "b70ed6c6-79fe-4c2b-9957-27eb04432a53",
        "type": "message",
        "text": "I'm wary of going deeper into the issues I perceive with VPLs given my lack of experience with them. I'd love to see some examples of really good VPL code that shows the strengths of the format.",
        "user": "UFV8P4472",
        "ts": "1700387882.627829",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Y65TL",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I'm wary of going deeper into the issues I perceive with VPLs given my lack of experience with them. I'd love to see some examples of really good VPL code that shows the strengths of the format."
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1700339302.831259",
        "parent_user_id": "UFV8P4472"
    },
    {
        "client_msg_id": "49e5bb9a-9670-407c-b060-6ec835020593",
        "type": "message",
        "text": "No it doesn't help with a graph I haven't seen. Different people may prefer different layouts even. Just like in textual code. To understand a graph, live coding is what helps the most. That is really the number one reason nodes and wires even exist and are so popular! Jump into every part of a program and see and edit the data. I take that over any inconveniences of nodes and wires. (for some domains?)",
        "user": "U03U0SCU5LH",
        "ts": "1700401123.552319",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "tPEXJ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "No it doesn't help with a graph I haven't seen. Different people may prefer different layouts even. Just like in textual code. To understand a graph, live coding is what helps the most. That is really the number one reason nodes and wires even exist and are so popular! Jump into every part of a program and see and edit the data. I take that over any inconveniences of nodes and wires. (for some domains?)"
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "edited": {
            "user": "U03U0SCU5LH",
            "ts": "1700403289.000000"
        },
        "thread_ts": "1700339302.831259",
        "parent_user_id": "UFV8P4472"
    },
    {
        "client_msg_id": "61927A38-3451-4C6A-88FD-E705F94A2E0A",
        "type": "message",
        "text": "<@UFV8P4472> have you played with Max/MSP? It's one of the more polished node-wire GUIs out there. They've done some good work to support lots of different editing interactions.",
        "user": "UC2A2ARPT",
        "ts": "1700405369.654619",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "7puFV",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UFV8P4472"
                            },
                            {
                                "type": "text",
                                "text": " have you played with Max/MSP? It's one of the more polished node-wire GUIs out there. They've done some good work to support lots of different editing interactions."
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1700339302.831259",
        "parent_user_id": "UFV8P4472"
    },
    {
        "client_msg_id": "0b18c662-e383-43a7-81ca-c60f34ec6b5a",
        "type": "message",
        "text": "I\u2019m in the minority here, but, FWIW ...\n\nI conclude that VPLs are a much better way to program than using text-only programming languages.  After all, text-only PLs are, but, 1950\u2019s caveman IDEs for programming.\n\nI conclude that auto-layout is downright evil and counter-productive.\n\n... my thoughts ... <https://guitarvydas.github.io/2023/11/19/The-Meaning-of-Layout.html>",
        "user": "UGWUJUZHT",
        "ts": "1700427071.276899",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "SHRHR",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I\u2019m in the minority here, but, FWIW ...\n\nI conclude that VPLs are a much better way to program than using text-only programming languages.  After all, text-only PLs are, but, 1950\u2019s caveman IDEs for programming.\n\nI conclude that auto-layout is downright evil and counter-productive.\n\n... my thoughts ... "
                            },
                            {
                                "type": "link",
                                "url": "https://guitarvydas.github.io/2023/11/19/The-Meaning-of-Layout.html"
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1700339302.831259",
        "parent_user_id": "UFV8P4472"
    },
    {
        "client_msg_id": "e9e62362-7ac0-4b3e-bb28-87ac6ffe70ec",
        "type": "message",
        "text": "&gt; I\u2019m in the minority here, but, FWIW ...\nI'm not sure about that. I even sympathize with a lot of this from a certain perspective, despite generally disagreeing with most of your conclusions. Not gonna nit-pick everything, but can't resist this one:\n\n&gt; text-only PLs are, but, 1950\u2019s caveman IDEs for programming\nyeah, like scratching surfaces with pointy sticks is actual caveman's IDE for writing, yet I still do the same thing every day with a just slightly more advanced pointy stick, and it would still be a loss to leave it behind despite all the newer tools available. :smile: There's a lot of \"horses for courses\" in tool selection.\n\nOn the overall point; like I said I think I at least understand the thought process when I look at it from the perspective of the art and craft of programming. I feel a lot of The Architect's pride in their craftsmanship coming through in that. But when I look at it from the perspective of the actual trade of writing software... giving the infinite flexibility of The Architect's powerful tools for daily work feels a bit like handing out 12 gauge shotguns to a classroom full of kindergartners to swat a fly. Will they kill it? Sure, but I wouldn't want to see the collateral damage that will come along with that.",
        "user": "UL2SJ88Q3",
        "ts": "1700434653.422679",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "DMdwA",
                "elements": [
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I\u2019m in the minority here, but, FWIW ..."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nI'm not sure about that. I even sympathize with a lot of this from a certain perspective, despite generally disagreeing with most of your conclusions. Not gonna nit-pick everything, but can't resist this one:\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "text-only PLs are, but, 1950\u2019s caveman IDEs for programming"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nyeah, like scratching surfaces with pointy sticks is actual caveman's IDE for writing, yet I still do the same thing every day with a just slightly more advanced pointy stick, and it would still be a loss to leave it behind despite all the newer tools available. "
                            },
                            {
                                "type": "emoji",
                                "name": "smile",
                                "unicode": "1f604"
                            },
                            {
                                "type": "text",
                                "text": " There's a lot of \"horses for courses\" in tool selection.\n\nOn the overall point; like I said I think I at least understand the thought process when I look at it from the perspective of the art and craft of programming. I feel a lot of The Architect's pride in their craftsmanship coming through in that. But when I look at it from the perspective of the actual trade of writing software... giving the infinite flexibility of The Architect's powerful tools for daily work feels a bit like handing out 12 gauge shotguns to a classroom full of kindergartners to swat a fly. Will they kill it? Sure, but I wouldn't want to see the collateral damage that will come along with that."
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1700339302.831259",
        "parent_user_id": "UFV8P4472"
    }
]