[
    {
        "type": "message",
        "subtype": "tombstone",
        "text": "This message was deleted.",
        "user": "USLACKBOT",
        "hidden": true,
        "ts": "1700983351.706029",
        "thread_ts": "1700983351.706029",
        "parent_user_id": "USLACKBOT",
        "reply_count": 3,
        "reply_users_count": 3,
        "latest_reply": "1700998282.163969",
        "reply_users": [
            "U8A5MS6R1",
            "U03CEGR3HSL",
            "UE6EFEPTQ"
        ],
        "is_locked": false,
        "subscribed": false
    },
    {
        "client_msg_id": "f9ee97f8-917a-481b-acbf-ada8d7f6c04d",
        "type": "message",
        "text": "there\u2019s a thread here <https://futureofcoding.slack.com/archives/CCL5VVBAN/p1700373745504449>",
        "user": "U8A5MS6R1",
        "ts": "1700986029.266029",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "uTrrd",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "there\u2019s a thread here "
                            },
                            {
                                "type": "link",
                                "url": "https://futureofcoding.slack.com/archives/CCL5VVBAN/p1700373745504449"
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "from_url": "https://futureofcoding.slack.com/archives/CCL5VVBAN/p1700373745504449",
                "ts": "1700373745.504449",
                "author_id": "UC2A2ARPT",
                "channel_id": "CCL5VVBAN",
                "channel_team": "T5TCAFTA9",
                "is_msg_unfurl": true,
                "is_thread_root_unfurl": true,
                "message_blocks": [
                    {
                        "team": "T5TCAFTA9",
                        "channel": "CCL5VVBAN",
                        "ts": "1700373745.504449",
                        "message": {
                            "blocks": [
                                {
                                    "type": "rich_text",
                                    "block_id": "aQwvH",
                                    "elements": [
                                        {
                                            "type": "rich_text_section",
                                            "elements": [
                                                {
                                                    "type": "text",
                                                    "text": "Future of Coding \u2022 Episode 68\nPhilip Wadler \u2022 Propositions as Types\n\ud808\udcb6 "
                                                },
                                                {
                                                    "type": "link",
                                                    "url": "https://futureofcoding.org/episodes/068"
                                                },
                                                {
                                                    "type": "text",
                                                    "text": "\n\nThe subject of this episode\u2019s paper \u2014 "
                                                },
                                                {
                                                    "type": "link",
                                                    "url": "https://homepages.inf.ed.ac.uk/wadler/papers/propositions-as-types/propositions-as-types.pdf",
                                                    "text": "Propositions as Types"
                                                },
                                                {
                                                    "type": "text",
                                                    "text": " by "
                                                },
                                                {
                                                    "type": "link",
                                                    "url": "https://en.wikipedia.org/wiki/Philip_Wadler",
                                                    "text": "Philip Wadler"
                                                },
                                                {
                                                    "type": "text",
                                                    "text": " \u2014 is one of those grand ideas that makes you want to go stargazing. To stare out into space and just disassociate from your body and become one with the heavens. "
                                                },
                                                {
                                                    "type": "text",
                                                    "text": "Everything \u2014 life, space, time, existence \u2014 all of it is a joke!",
                                                    "style": {
                                                        "italic": true
                                                    }
                                                },
                                                {
                                                    "type": "text",
                                                    "text": " A cosmic ribbing delivered by the laws of the universe or some higher power or, perhaps, higher order. Humanity waited two thousand years, from the time of the ancient Greeks through until the 1930s, for a means to answer questions of calculability, when three suddenly arrived all at once:\n"
                                                }
                                            ]
                                        },
                                        {
                                            "type": "rich_text_list",
                                            "elements": [
                                                {
                                                    "type": "rich_text_section",
                                                    "elements": [
                                                        {
                                                            "type": "text",
                                                            "text": "General recursive functions by G\u00f6del in 1934, with functions of sets of natural numbers."
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "rich_text_section",
                                                    "elements": [
                                                        {
                                                            "type": "text",
                                                            "text": "Lambda calculus by Alonzo Church in 1936, with anonymous single-variable functions."
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "rich_text_section",
                                                    "elements": [
                                                        {
                                                            "type": "text",
                                                            "text": "Turing machines by Alan Turing in 1937, with a process for evaluating symbols on a tape."
                                                        }
                                                    ]
                                                }
                                            ],
                                            "style": "bullet",
                                            "indent": 0,
                                            "border": 0
                                        },
                                        {
                                            "type": "rich_text_section",
                                            "elements": [
                                                {
                                                    "type": "text",
                                                    "text": "Then it was discovered that these three models of computation were, in fact, perfectly equivalent. That any statement made in one could be made in the others. A striking coincidence, sure, but not "
                                                },
                                                {
                                                    "type": "link",
                                                    "url": "https://en.wikipedia.org/wiki/Multiple_discovery",
                                                    "text": "without precedent"
                                                },
                                                {
                                                    "type": "text",
                                                    "text": ". But "
                                                },
                                                {
                                                    "type": "text",
                                                    "text": "then",
                                                    "style": {
                                                        "italic": true
                                                    }
                                                },
                                                {
                                                    "type": "text",
                                                    "text": " it was quietly determined (in 1934, again in 1969, and finally published in 1980) that computation itself is in a direct correspondence with logic. That every proposition in a given logic corresponds with a type in a given programming language, every proof corresponds with a program, and the simplification of the proof corresponds with the evaluation of the program.\nThe implications boggle the mind. "
                                                },
                                                {
                                                    "type": "text",
                                                    "text": "How could this be so?",
                                                    "style": {
                                                        "italic": true
                                                    }
                                                },
                                                {
                                                    "type": "text",
                                                    "text": " Well, how could it be any other way? Why did it take so long to discover? What other discoveries like this are perched on the precipice of revelation?\nPhilip Wadler is here to walk us through this bit of history, suggest answers to some of these questions, and point us in a direction to search for more.\nAnd "
                                                },
                                                {
                                                    "type": "text",
                                                    "text": "we",
                                                    "style": {
                                                        "italic": true
                                                    }
                                                },
                                                {
                                                    "type": "text",
                                                    "text": " are here, dear listener, to level with you that a lot of this stuff is miserably hard to approach, presented with the symbols and language of formal logic that is so often inscrutable to outsiders. By walking you through Wadler\u2019s paper (and the much more approachable "
                                                },
                                                {
                                                    "type": "link",
                                                    "url": "https://www.youtube.com/watch?v=IOiZatlZtGU",
                                                    "text": "Strange Loop talk"
                                                },
                                                {
                                                    "type": "text",
                                                    "text": "), and tying it in with the cultural context of modern functional programming, we hope you\u2019ll gain an appreciation for this remarkable, divine "
                                                },
                                                {
                                                    "type": "text",
                                                    "text": "pun",
                                                    "style": {
                                                        "italic": true
                                                    }
                                                },
                                                {
                                                    "type": "text",
                                                    "text": " that sits beneath all of computation."
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                ],
                "id": 1,
                "original_url": "https://futureofcoding.slack.com/archives/CCL5VVBAN/p1700373745504449",
                "fallback": "[November 18th, 2023 10:02 PM] ivanreese: Future of Coding \u2022 Episode 68\nPhilip Wadler \u2022 Propositions as Types\n\ud808\udcb6 <https://futureofcoding.org/episodes/068>\n\nThe subject of this episode\u2019s paper \u2014 <https://homepages.inf.ed.ac.uk/wadler/papers/propositions-as-types/propositions-as-types.pdf|Propositions as Types> by <https://en.wikipedia.org/wiki/Philip_Wadler|Philip Wadler> \u2014 is one of those grand ideas that makes you want to go stargazing. To stare out into space and just disassociate from your body and become one with the heavens. _Everything \u2014 life, space, time, existence \u2014 all of it is a joke!_ A cosmic ribbing delivered by the laws of the universe or some higher power or, perhaps, higher order. Humanity waited two thousand years, from the time of the ancient Greeks through until the 1930s, for a means to answer questions of calculability, when three suddenly arrived all at once:\n\u2022 General recursive functions by G\u00f6del in 1934, with functions of sets of natural numbers.\n\u2022 Lambda calculus by Alonzo Church in 1936, with anonymous single-variable functions.\n\u2022 Turing machines by Alan Turing in 1937, with a process for evaluating symbols on a tape.\nThen it was discovered that these three models of computation were, in fact, perfectly equivalent. That any statement made in one could be made in the others. A striking coincidence, sure, but not <https://en.wikipedia.org/wiki/Multiple_discovery|without precedent>. But _then_ it was quietly determined (in 1934, again in 1969, and finally published in 1980) that computation itself is in a direct correspondence with logic. That every proposition in a given logic corresponds with a type in a given programming language, every proof corresponds with a program, and the simplification of the proof corresponds with the evaluation of the program.\nThe implications boggle the mind. _How could this be so?_ Well, how could it be any other way? Why did it take so long to discover? What other discoveries like this are perched on the precipice of revelation?\nPhilip Wadler is here to walk us through this bit of history, suggest answers to some of these questions, and point us in a direction to search for more.\nAnd _we_ are here, dear listener, to level with you that a lot of this stuff is miserably hard to approach, presented with the symbols and language of formal logic that is so often inscrutable to outsiders. By walking you through Wadler\u2019s paper (and the much more approachable <https://www.youtube.com/watch?v=IOiZatlZtGU|Strange Loop talk>), and tying it in with the cultural context of modern functional programming, we hope you\u2019ll gain an appreciation for this remarkable, divine _pun_ that sits beneath all of computation.",
                "text": "Future of Coding \u2022 Episode 68\nPhilip Wadler \u2022 Propositions as Types\n\ud808\udcb6 <https://futureofcoding.org/episodes/068>\n\nThe subject of this episode\u2019s paper \u2014 <https://homepages.inf.ed.ac.uk/wadler/papers/propositions-as-types/propositions-as-types.pdf|Propositions as Types> by <https://en.wikipedia.org/wiki/Philip_Wadler|Philip Wadler> \u2014 is one of those grand ideas that makes you want to go stargazing. To stare out into space and just disassociate from your body and become one with the heavens. _Everything \u2014 life, space, time, existence \u2014 all of it is a joke!_ A cosmic ribbing delivered by the laws of the universe or some higher power or, perhaps, higher order. Humanity waited two thousand years, from the time of the ancient Greeks through until the 1930s, for a means to answer questions of calculability, when three suddenly arrived all at once:\n\u2022 General recursive functions by G\u00f6del in 1934, with functions of sets of natural numbers.\n\u2022 Lambda calculus by Alonzo Church in 1936, with anonymous single-variable functions.\n\u2022 Turing machines by Alan Turing in 1937, with a process for evaluating symbols on a tape.\nThen it was discovered that these three models of computation were, in fact, perfectly equivalent. That any statement made in one could be made in the others. A striking coincidence, sure, but not <https://en.wikipedia.org/wiki/Multiple_discovery|without precedent>. But _then_ it was quietly determined (in 1934, again in 1969, and finally published in 1980) that computation itself is in a direct correspondence with logic. That every proposition in a given logic corresponds with a type in a given programming language, every proof corresponds with a program, and the simplification of the proof corresponds with the evaluation of the program.\nThe implications boggle the mind. _How could this be so?_ Well, how could it be any other way? Why did it take so long to discover? What other discoveries like this are perched on the precipice of revelation?\nPhilip Wadler is here to walk us through this bit of history, suggest answers to some of these questions, and point us in a direction to search for more.\nAnd _we_ are here, dear listener, to level with you that a lot of this stuff is miserably hard to approach, presented with the symbols and language of formal logic that is so often inscrutable to outsiders. By walking you through Wadler\u2019s paper (and the much more approachable <https://www.youtube.com/watch?v=IOiZatlZtGU|Strange Loop talk>), and tying it in with the cultural context of modern functional programming, we hope you\u2019ll gain an appreciation for this remarkable, divine _pun_ that sits beneath all of computation.",
                "author_name": "Ivan Reese",
                "author_link": "https://futureofcoding.slack.com/team/UC2A2ARPT",
                "author_icon": "https://secure.gravatar.com/avatar/6f94d2ed5e188be9865a531021b0afcd.jpg?s=48&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-48.png",
                "author_subname": "Ivan Reese",
                "mrkdwn_in": [
                    "text"
                ],
                "footer": "Thread in Slack Conversation"
            }
        ],
        "thread_ts": "1700983351.706029",
        "parent_user_id": "USLACKBOT"
    },
    {
        "client_msg_id": "9e8e3050-29da-4048-8ebf-3a41ed0d7102",
        "type": "message",
        "text": "Thanks, I'm not sure how I missed it",
        "user": "U03CEGR3HSL",
        "ts": "1700992086.119269",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "v1OFj",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Thanks, I'm not sure how I missed it"
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1700983351.706029",
        "parent_user_id": "USLACKBOT"
    },
    {
        "client_msg_id": "3e99ece6-5f3b-4232-9ecc-567a27a1436e",
        "type": "message",
        "text": "Oh - I was coming back to have a think about all those excellent questions, <@U03CEGR3HSL>!!",
        "user": "UE6EFEPTQ",
        "ts": "1700998282.163969",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "2uMpG",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Oh - I was coming back to have a think about all those excellent questions, "
                            },
                            {
                                "type": "user",
                                "user_id": "U03CEGR3HSL"
                            },
                            {
                                "type": "text",
                                "text": "!!"
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1700983351.706029",
        "parent_user_id": "USLACKBOT"
    }
]