[
    {
        "client_msg_id": "e9510154-2067-4766-8599-ff0515018f97",
        "type": "message",
        "text": "<https://www.applevis.com/forum/app-development-programming/work-progress-vosh-third-party-screen-reader-macintosh|I\u2019m excited to see where this 3rd party screen-reader for macOS goes.> On windows there are 2 first-in-class options available outside of the OS, JAWS and NVDA. On macOS there is only the system provided VoiceOver.\n\nI think VoiceOver is a pretty solid competitor to NVDA, but, it is very very very opinionated, and makes some unusual choices. I think this has a knock on effect where, since VoiceOver is the easiest screen-reader for most web devs to reach for, a lot of implementations end up being hyper-focused on supporting VoiceOver\u2019s specific flavor of handling the accessibility tree. Having more diversity in the space, I think could hopefully mitigate this. While this isn\u2019t directly related to the future of coding as we normally talk about it here, I think projects like this are just the sort of thing that can help to shape things for years to come.",
        "user": "UMQ6LR9NZ",
        "ts": "1699887382.712269",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Vkxac",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "link",
                                "url": "https://www.applevis.com/forum/app-development-programming/work-progress-vosh-third-party-screen-reader-macintosh",
                                "text": "I\u2019m excited to see where this 3rd party screen-reader for macOS goes."
                            },
                            {
                                "type": "text",
                                "text": " On windows there are 2 first-in-class options available outside of the OS, JAWS and NVDA. On macOS there is only the system provided VoiceOver.\n\nI think VoiceOver is a pretty solid competitor to NVDA, but, it is very very very opinionated, and makes some unusual choices. I think this has a knock on effect where, since VoiceOver is the easiest screen-reader for most web devs to reach for, a lot of implementations end up being hyper-focused on supporting VoiceOver\u2019s specific flavor of handling the accessibility tree. Having more diversity in the space, I think could hopefully mitigate this. While this isn\u2019t directly related to the future of coding as we normally talk about it here, I think projects like this are just the sort of thing that can help to shape things for years to come."
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UMQ6LR9NZ",
            "ts": "1699892199.000000"
        },
        "reactions": [
            {
                "name": "cake",
                "users": [
                    "U05UBCXHWM6"
                ],
                "count": 1
            },
            {
                "name": "heart",
                "users": [
                    "U05UBCXHWM6"
                ],
                "count": 1
            },
            {
                "name": "speaking_head_in_silhouette",
                "users": [
                    "U05UBCXHWM6",
                    "U013ZLJARC7"
                ],
                "count": 2
            },
            {
                "name": "eyes",
                "users": [
                    "U062B0U0FU4"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "dd4944b6-508c-4b98-88a5-2a2bd154c8f5",
        "type": "message",
        "text": "Inferring SVG animations from motion graphics videos, then providing various tools to edit the inferred material:\n<https://www.youtube.com/watch?v=5uZnTskMOTc>",
        "user": "U013ZLJARC7",
        "ts": "1699893266.976659",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "r75F2",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Inferring SVG animations from motion graphics videos, then providing various tools to edit the inferred material:\n"
                            },
                            {
                                "type": "link",
                                "url": "https://www.youtube.com/watch?v=5uZnTskMOTc"
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "from_url": "https://www.youtube.com/watch?v=5uZnTskMOTc",
                "service_icon": "https://a.slack-edge.com/80588/img/unfurl_icons/youtube.png",
                "thumb_url": "https://i.ytimg.com/vi/5uZnTskMOTc/hqdefault.jpg",
                "thumb_width": 480,
                "thumb_height": 360,
                "video_html": "<iframe width=\"400\" height=\"225\" src=\"https://www.youtube.com/embed/5uZnTskMOTc?feature=oembed&autoplay=1&iv_load_policy=3\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" allowfullscreen title=\"Editing Motion Graphics Video via Motion Vectorization and Transformation\"></iframe>",
                "video_html_width": 400,
                "video_html_height": 225,
                "id": 1,
                "original_url": "https://www.youtube.com/watch?v=5uZnTskMOTc",
                "fallback": "YouTube Video: Editing Motion Graphics Video via Motion Vectorization and Transformation",
                "title": "Editing Motion Graphics Video via Motion Vectorization and Transformation",
                "title_link": "https://www.youtube.com/watch?v=5uZnTskMOTc",
                "author_name": "Sharon Zhang",
                "author_link": "https://www.youtube.com/@sharonzhang7621",
                "service_name": "YouTube",
                "service_url": "https://www.youtube.com/"
            }
        ],
        "reactions": [
            {
                "name": "fire",
                "users": [
                    "UMV4B97GT",
                    "U023V63MF6V"
                ],
                "count": 2
            },
            {
                "name": "eyes",
                "users": [
                    "UGWUJUZHT",
                    "U04JY2BF24E"
                ],
                "count": 2
            }
        ]
    }
]