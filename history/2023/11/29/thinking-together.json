[
    {
        "client_msg_id": "D2DD6224-AAD0-42A1-8C4A-16EEAD76FB97",
        "type": "message",
        "text": "But have y\u2019all seen this? <https://scrapscript.org/|https://scrapscript.org/>\n\nThis is my kind of thinking.",
        "user": "U05PY5AQCA2",
        "ts": "1701226974.834729",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "LHh6Y",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "But have y\u2019all seen this? "
                            },
                            {
                                "type": "link",
                                "url": "https://scrapscript.org/",
                                "text": "https://scrapscript.org/"
                            },
                            {
                                "type": "text",
                                "text": "\n\nThis is my kind of thinking."
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1701226974.834729",
        "reply_count": 18,
        "reply_users_count": 7,
        "latest_reply": "1701355234.121019",
        "reply_users": [
            "U0584S0ULF8",
            "UFEQUBNNT",
            "UF71PR58X",
            "U03U0SCU5LH",
            "U04E5QAD6DD",
            "UJBAJNFLK",
            "U05PY5AQCA2"
        ],
        "is_locked": false,
        "subscribed": false,
        "reactions": [
            {
                "name": "clap",
                "users": [
                    "U066PUFV6LA"
                ],
                "count": 1
            },
            {
                "name": "heart",
                "users": [
                    "UFEQUBNNT",
                    "UJBAJNFLK",
                    "U03LJBR6THT"
                ],
                "count": 3
            },
            {
                "name": "+1",
                "users": [
                    "USH01JEDQ"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "2bbe81d5-f2f8-411d-9a48-ad04c28b2adc",
        "type": "message",
        "text": "Author here! Let me know if you have any questions :slightly_smiling_face: Just hit another major milestone this week and I'm expecting to open up the repo in Jan",
        "user": "U0584S0ULF8",
        "ts": "1701227147.095389",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ItoWS",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Author here! Let me know if you have any questions "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            },
                            {
                                "type": "text",
                                "text": " Just hit another major milestone this week and I'm expecting to open up the repo in Jan"
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1701226974.834729",
        "parent_user_id": "U05PY5AQCA2",
        "reactions": [
            {
                "name": "clap",
                "users": [
                    "U066PUFV6LA",
                    "UJBAJNFLK",
                    "U05UBCXHWM6"
                ],
                "count": 3
            },
            {
                "name": "clap::skin-tone-3",
                "users": [
                    "UCUSW7WVD"
                ],
                "count": 1
            },
            {
                "name": "wave",
                "users": [
                    "U013ZLJARC7"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "69D0D44A-2B23-4B6A-B8D4-09FC2B21C107",
        "type": "message",
        "text": "I haven\u2019t seen it, but I like it. I can\u2019t think of a project to try with it offhand, though. How will I know when I have an idea that would make a good scrapscript project?",
        "user": "UFEQUBNNT",
        "ts": "1701230518.464999",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Myl9R",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I haven\u2019t seen it, but I like it. I can\u2019t think of a project to try with it offhand"
                            },
                            {
                                "type": "text",
                                "text": ","
                            },
                            {
                                "type": "text",
                                "text": " though"
                            },
                            {
                                "type": "text",
                                "text": "."
                            },
                            {
                                "type": "text",
                                "text": " How will I know when I have an idea that would make a good scrapscript project?"
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1701226974.834729",
        "parent_user_id": "U05PY5AQCA2"
    },
    {
        "client_msg_id": "00c1189b-3794-4257-9844-101b074c8658",
        "type": "message",
        "text": "Reminds me of Unison ... could you compare and contrast?",
        "user": "UF71PR58X",
        "ts": "1701251728.764029",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "zbxyg",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Reminds me of Unison ... could you compare and contrast?"
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1701226974.834729",
        "parent_user_id": "U05PY5AQCA2",
        "reactions": [
            {
                "name": "clap",
                "users": [
                    "U051DSNTHCJ"
                ],
                "count": 1
            }
        ]
    },
    {
        "type": "message",
        "text": "Thinking about a modern agent orchestration / business process modeling / workflow language. Here is how the standard BPMN example might look like:\n\n```# Tasks are enqueued jobs to specific queues. They emit events like started, success, failure, cancelled as well as custom intermediate events.\n# Tasks cannot consume events. Task invoker can cancel those tasks.\n# Tasks are triggerred by specific events indicated by their corresponding \"when\" clause.\n# Process is a stateful workflow which orchestrates tasks based on events.\n\nprocess pizza() do\n    x = @customer.select_pizza when $start\n    y = @customer.order_pizza(kind: x.kind) when x\n    z = @chef.make_pizza(order: y.order) when y\n    \n    p = y.order.line_items.map do |item| # array processing\n        subprocess procure(item: item) #invoke a subprocess\n    end when z\n    q = @clerk.pack when p.all?\n    \n    w = @delivery_boy.deliver_pizza(to: y.address) when z\n    u = @customer.pay_for_pizza when w\n    v = @customer.eat_pizza when u\n    success $hunger_satisfied when v\n\n    r = @customer.ask_for_pizza when (y or r[-1] + 60.minutes) and w.pending?\n    s = @clerk.calm_the_customer when r\nend```",
        "files": [
            {
                "id": "F068661L14H",
                "created": 1701260586,
                "timestamp": 1701260586,
                "name": "image.png",
                "title": "image.png",
                "mimetype": "image/png",
                "filetype": "png",
                "pretty_type": "PNG",
                "user": "U018S42NMMM",
                "user_team": "T5TCAFTA9",
                "editable": false,
                "size": 322613,
                "mode": "hosted",
                "is_external": false,
                "external_type": "",
                "is_public": true,
                "public_url_shared": false,
                "display_as_bot": false,
                "username": "",
                "url_private": "https://files.slack.com/files-pri/T5TCAFTA9-F068661L14H/image.png",
                "url_private_download": "https://files.slack.com/files-pri/T5TCAFTA9-F068661L14H/download/image.png",
                "media_display_type": "unknown",
                "thumb_64": "https://files.slack.com/files-tmb/T5TCAFTA9-F068661L14H-b7f61d3851/image_64.png",
                "thumb_80": "https://files.slack.com/files-tmb/T5TCAFTA9-F068661L14H-b7f61d3851/image_80.png",
                "thumb_360": "https://files.slack.com/files-tmb/T5TCAFTA9-F068661L14H-b7f61d3851/image_360.png",
                "thumb_360_w": 360,
                "thumb_360_h": 203,
                "thumb_480": "https://files.slack.com/files-tmb/T5TCAFTA9-F068661L14H-b7f61d3851/image_480.png",
                "thumb_480_w": 480,
                "thumb_480_h": 271,
                "thumb_160": "https://files.slack.com/files-tmb/T5TCAFTA9-F068661L14H-b7f61d3851/image_160.png",
                "thumb_720": "https://files.slack.com/files-tmb/T5TCAFTA9-F068661L14H-b7f61d3851/image_720.png",
                "thumb_720_w": 720,
                "thumb_720_h": 407,
                "thumb_800": "https://files.slack.com/files-tmb/T5TCAFTA9-F068661L14H-b7f61d3851/image_800.png",
                "thumb_800_w": 800,
                "thumb_800_h": 452,
                "thumb_960": "https://files.slack.com/files-tmb/T5TCAFTA9-F068661L14H-b7f61d3851/image_960.png",
                "thumb_960_w": 960,
                "thumb_960_h": 543,
                "thumb_1024": "https://files.slack.com/files-tmb/T5TCAFTA9-F068661L14H-b7f61d3851/image_1024.png",
                "thumb_1024_w": 1024,
                "thumb_1024_h": 579,
                "original_w": 2560,
                "original_h": 1447,
                "thumb_tiny": "AwAbADDRGcCjBo5x3pMk+tAC5x2/Sjr/APqoAzS496ADBowfbFGPc0EcdTQAgHFGD6UA8UZNAC/hScY6Gik7UAO49KD06GmjGc4GfWlJOKAP/9k=",
                "permalink": "https://futureofcoding.slack.com/files/U018S42NMMM/F068661L14H/image.png",
                "permalink_public": "https://slack-files.com/T5TCAFTA9-F068661L14H-c9983af5d0",
                "is_starred": false,
                "has_rich_preview": false,
                "file_access": "visible"
            }
        ],
        "upload": false,
        "user": "U018S42NMMM",
        "display_as_bot": false,
        "ts": "1701260604.791659",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "e30+d",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Thinking about a modern agent orchestration / business process modeling / workflow language. Here is how the standard BPMN example might look like:\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "# Tasks are enqueued jobs to specific queues. They emit events like started, success, failure, cancelled as well as custom intermediate events.\n# Tasks cannot consume events. Task invoker can cancel those tasks.\n# Tasks are triggerred by specific events indicated by their corresponding \"when\" clause.\n# Process is a stateful workflow which orchestrates tasks based on events.\n\nprocess pizza() do\n    x = @customer.select_pizza when $start\n    y = @customer.order_pizza(kind: x.kind) when x\n    z = @chef.make_pizza(order: y.order) when y\n    \n    p = y.order.line_items.map do |item| # array processing\n        subprocess procure(item: item) #invoke a subprocess\n    end when z\n    q = @clerk.pack when p.all?\n    \n    w = @delivery_boy.deliver_pizza(to: y.address) when z\n    u = @customer.pay_for_pizza when w\n    v = @customer.eat_pizza when u\n    success $hunger_satisfied when v\n\n    r = @customer.ask_for_pizza when (y or r[-1] + 60.minutes) and w.pending?\n    s = @clerk.calm_the_customer when r\nend"
                            }
                        ],
                        "border": 0
                    }
                ]
            }
        ],
        "edited": {
            "user": "U018S42NMMM",
            "ts": "1701260647.000000"
        },
        "client_msg_id": "e4fc81ac-7f0d-4639-80f1-7fa1acdfec92",
        "thread_ts": "1701260604.791659",
        "reply_count": 13,
        "reply_users_count": 3,
        "latest_reply": "1701411305.633929",
        "reply_users": [
            "UFEQUBNNT",
            "U018S42NMMM",
            "U02U0AS3J49"
        ],
        "is_locked": false,
        "subscribed": false
    },
    {
        "client_msg_id": "b3bfdd44-41e5-4cc6-8c7d-2160131d427f",
        "type": "message",
        "text": "&gt; How will I know when I have an idea that would make a good scrapscript project?\nGoing to be a while before people are building projects with it haha. For the foreseeable future, it's likely going to sit somewhere between zsh and wolfram language. And then hopefully something like flash/geocities :slightly_smiling_face: I'll try to put out frequent demos once it's usable\n\n&gt; Reminds me of Unison ... could you compare and contrast?\nYes! Both projects are functional languages that use content addressability. Main difference is goals:\n\u2022 unison focuses on building software with novel team collaboration and distributed systems\n\u2022 scrapscript focuses on being a good global package manager and messaging format... that also might be a good general-purpose programming language one day haha",
        "user": "U0584S0ULF8",
        "ts": "1701260976.788379",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "G1V0X",
                "elements": [
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "How will I know when I have an idea that would make a good scrapscript project?"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nGoing to be a while before people are building projects with it haha. For the foreseeable future, it's likely going to sit somewhere between zsh and wolfram language. And then hopefully something like flash/geocities "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            },
                            {
                                "type": "text",
                                "text": " I'll try to put out frequent demos once it's usable\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Reminds me of Unison ... could you compare and contrast?"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nYes! Both projects are functional languages that use content addressability. Main difference is goals:\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "unison focuses on building software with novel team collaboration and distributed systems"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "scrapscript focuses on being a good global package manager and messaging format... that also might be a good general-purpose programming language one day haha"
                                    }
                                ]
                            }
                        ],
                        "style": "bullet",
                        "indent": 0,
                        "border": 0
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1701226974.834729",
        "parent_user_id": "U05PY5AQCA2",
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UFEQUBNNT",
                    "U05UBCXHWM6"
                ],
                "count": 2
            }
        ]
    },
    {
        "client_msg_id": "f684876c-5738-4fd3-b225-ad2362d4e121",
        "type": "message",
        "text": "Could you imagine writing something similar-ish to scrapscript as a Unison library?",
        "user": "UF71PR58X",
        "ts": "1701261164.435299",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "MNRbL",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Could you imagine writing something similar-ish to scrapscript as a Unison library?"
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1701226974.834729",
        "parent_user_id": "U05PY5AQCA2"
    },
    {
        "client_msg_id": "c13b0010-5bb7-4346-93b1-df68e1dbb396",
        "type": "message",
        "text": "After talking to paul chiusano about it a few years ago, it didn't seem like there was really enough overlap\n\nHaven't really kept up with the project though, so maybe things have changed",
        "user": "U0584S0ULF8",
        "ts": "1701261859.212669",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "u+m+s",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "After talking to paul chiusano about it a few years ago, it didn't seem like there was really enough overlap\n\nHaven't really kept up with the project though, so maybe things have changed"
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1701226974.834729",
        "parent_user_id": "U05PY5AQCA2",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UF71PR58X"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "dea9dae3-8bd7-4f05-b139-9e3601314922",
        "type": "message",
        "text": "Oh, my language used to have \"text\" instead of \"string\" aswell. But after a long time, I felt I didn't want to use my \"strangeness\" budget on old and proven name. So.. why text?",
        "user": "U03U0SCU5LH",
        "ts": "1701262192.549729",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "arQJj",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Oh, my language used to have \"text\" instead of \"string\" aswell. But after a long time, I felt I didn't want to use my \"strangeness\" budget on old and proven name. So.. why text?"
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1701226974.834729",
        "parent_user_id": "U05PY5AQCA2"
    },
    {
        "client_msg_id": "cf817c9c-308a-4385-bb0a-aef4965ce880",
        "type": "message",
        "text": "More than anything, I think I'm most interested in how non-programmers might interact with this language one day. And much like SQL, when you're thinking about non-programmers, you start to choose some non-standard naming conventions :slightly_smiling_face:",
        "user": "U0584S0ULF8",
        "ts": "1701263354.532079",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "0KaAI",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "More than anything, I think I'm most interested in how non-programmers might interact with this language one day. And much like SQL, when you're thinking about non-programmers, you start to choose some non-standard naming conventions "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1701226974.834729",
        "parent_user_id": "U05PY5AQCA2",
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "U05PY5AQCA2",
                    "UP00ZLX6G"
                ],
                "count": 2
            }
        ]
    },
    {
        "client_msg_id": "631563f6-b1ad-4317-ae59-b7da7481ead2",
        "type": "message",
        "text": "I just wrote a <https://taylor.town/pardon-2023|really long essay> on why I think many of the on-ramps into engineering are broken. I'd love to rekindle some of the hypercard/flash/myspace/geocities magic of yore",
        "user": "U0584S0ULF8",
        "ts": "1701263507.193709",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Awvun",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I just wrote a "
                            },
                            {
                                "type": "link",
                                "url": "https://taylor.town/pardon-2023",
                                "text": "really long essay"
                            },
                            {
                                "type": "text",
                                "text": " on why I think many of the on-ramps into engineering are broken. I'd love to rekindle some of the hypercard/flash/myspace/geocities magic of yore"
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "from_url": "https://taylor.town/pardon-2023",
                "service_icon": "https://taylor.town/apple-touch-icon.png",
                "id": 1,
                "original_url": "https://taylor.town/pardon-2023",
                "fallback": "I hereby pardon all junior engineers",
                "text": "Shortsighted engineering practices have eroded public trust in technology. We can reclaim that trust by building better things together.",
                "title": "I hereby pardon all junior engineers",
                "title_link": "https://taylor.town/pardon-2023",
                "service_name": "taylor.town"
            }
        ],
        "thread_ts": "1701226974.834729",
        "parent_user_id": "U05PY5AQCA2",
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "U05PY5AQCA2",
                    "UMV4B97GT",
                    "USH01JEDQ"
                ],
                "count": 3
            }
        ]
    },
    {
        "client_msg_id": "d447d5ed-9919-4367-b568-d531779fbe76",
        "type": "message",
        "text": "I think I'd need to be more of a historian to really understand what _exactly_ the \"magic of yore\" encompassed \u2014 even though I miss it a lot myself! \u2014 but one complicating factor is how much more complicated systems have gotten, for good reasons. A few examples:\n\n\u2022 desktop apps and web pages once could be written assuming a fixed window size in many cases, *much* simpler than making a UI that scales from a phone to a 6K display\n\u2022 ASCII is *much* simpler than Unicode\n\u2022 anything without a network is *much* simpler than something with one \u2014 security is so much easier if you don't have the world at your door\nIt's fascinating to me that <https://beyondloom.com/decker/|Decker> chose to ignore so many modern bits \u2014 color, Unicode, scaling UI \u2014 and ended up with something that I think captures some of that magic.\n\n\u2026and, yet, I haven't built anything with it, either.",
        "user": "U04E5QAD6DD",
        "ts": "1701275158.233239",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "GLHVL",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I think I'd need to be more of a historian to really understand what "
                            },
                            {
                                "type": "text",
                                "text": "exactly",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " the \"magic of yore\" encompassed \u2014 even though I miss it a lot myself! \u2014 but one complicating factor is how much more complicated systems have gotten, for good reasons. A few examples:\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "desktop apps and web pages once could be written assuming a fixed window size in many cases, "
                                    },
                                    {
                                        "type": "text",
                                        "text": "much",
                                        "style": {
                                            "bold": true
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "text": " simpler than making a UI that scales from a phone to a 6K display"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "ASCII is "
                                    },
                                    {
                                        "type": "text",
                                        "text": "much",
                                        "style": {
                                            "bold": true
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "text": " simpler than Unicode"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "anything without a network is "
                                    },
                                    {
                                        "type": "text",
                                        "text": "much",
                                        "style": {
                                            "bold": true
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "text": " simpler than something with one \u2014 security is so much easier if you don't have the world at your door"
                                    }
                                ]
                            }
                        ],
                        "style": "bullet",
                        "indent": 0,
                        "border": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nIt's fascinating to me that "
                            },
                            {
                                "type": "link",
                                "url": "https://beyondloom.com/decker/",
                                "text": "Decker"
                            },
                            {
                                "type": "text",
                                "text": " chose to ignore so many modern bits \u2014 color, Unicode, scaling UI \u2014 and ended up with something that I think captures some of that magic.\n\n\u2026and, yet, I haven't built anything with it, either."
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1701226974.834729",
        "parent_user_id": "U05PY5AQCA2",
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "U0584S0ULF8"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "F18428A5-79FA-426A-A944-5471182A5313",
        "type": "message",
        "text": "Is the text the language, the chart, or both?",
        "user": "UFEQUBNNT",
        "ts": "1701275401.287149",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "4cD9g",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Is the text the language"
                            },
                            {
                                "type": "text",
                                "text": ","
                            },
                            {
                                "type": "text",
                                "text": " the chart, or both?"
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1701260604.791659",
        "parent_user_id": "U018S42NMMM"
    },
    {
        "client_msg_id": "46bd8cd2-e7f5-4bd5-98bf-9282b4490564",
        "type": "message",
        "text": "Linking one of my points to your essay \u2014 one of the reasons that software projects keep needing maintenance and aren't _finished_ is because of the network and security requirements.",
        "user": "U04E5QAD6DD",
        "ts": "1701275522.480619",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "8eX+4",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Linking one of my points to your essay \u2014 one of the reasons that software projects keep needing maintenance and aren't "
                            },
                            {
                                "type": "text",
                                "text": "finished",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " is because of the network and security requirements."
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1701226974.834729",
        "parent_user_id": "U05PY5AQCA2",
        "reactions": [
            {
                "name": "amiga-tick",
                "users": [
                    "U0584S0ULF8"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "6eac79c2-ff52-49eb-b9da-7a5c3b864230",
        "type": "message",
        "text": "wow, this is the first time i've seen decker, and i've been desparately searching for something like it for a long time!! thank you thank you",
        "user": "U0584S0ULF8",
        "ts": "1701286432.043119",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "sA3FH",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "wow, this is the first time i've seen decker, and i've been desparately searching for something like it for a long time!! thank you thank you"
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1701226974.834729",
        "parent_user_id": "U05PY5AQCA2",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U04E5QAD6DD"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "b2619b8f-ba89-4694-9e9a-37a9c66e9725",
        "type": "message",
        "text": "Scrapscript looks interesting to me, if only for the overlap with an idea I have been toying with myself: a language defined in terms of IPFS data blocks, i.e. linked CBOR.\n\n<@U0584S0ULF8> You mention IPFS but it looks like you don't actually use it, right? I see hashes that are not IPFS CIDs. Any reason for rolling your own? Building on IPFS would give you data exchange with the wide world, which I think it worth having.\n\nHow does scrapscript interact with the rest of the computing universe? How can I write code that works on my address book or my e-mail, for example? It looks like all inputs have to be in scrapscript syntax.",
        "user": "UJBAJNFLK",
        "ts": "1701287312.180259",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "1du6t",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Scrapscript looks interesting to me, if only for the overlap with an idea I have been toying with myself: a language defined in terms of IPFS data blocks, i.e. linked CBOR.\n\n"
                            },
                            {
                                "type": "user",
                                "user_id": "U0584S0ULF8"
                            },
                            {
                                "type": "text",
                                "text": " You mention IPFS but it looks like you don't actually use it, right? I see hashes that are not IPFS CIDs. Any reason for rolling your own? Building on IPFS would give you data exchange with the wide world, which I think it worth having.\n\nHow does scrapscript interact with the rest of the computing universe? How can I write code that works on my address book or my e-mail, for example? It looks like all inputs have to be in scrapscript syntax."
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1701226974.834729",
        "parent_user_id": "U05PY5AQCA2"
    },
    {
        "client_msg_id": "9D889F29-2E0E-4085-A26D-04D520C99C6D",
        "type": "message",
        "text": "Decker?",
        "user": "U05PY5AQCA2",
        "ts": "1701287456.218059",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "RBwdE",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Decker?"
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1701226974.834729",
        "parent_user_id": "U05PY5AQCA2"
    },
    {
        "client_msg_id": "EE2ED8DF-E938-45CF-A26D-7825D2F6CD0F",
        "type": "message",
        "text": "<@U05PY5AQCA2>  <https://beyondloom.com/decker/|https://beyondloom.com/decker/>",
        "user": "U04E5QAD6DD",
        "ts": "1701287921.466569",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "wZSg3",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U05PY5AQCA2"
                            },
                            {
                                "type": "text",
                                "text": "  "
                            },
                            {
                                "type": "link",
                                "url": "https://beyondloom.com/decker/",
                                "text": "https://beyondloom.com/decker/"
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1701226974.834729",
        "parent_user_id": "U05PY5AQCA2"
    },
    {
        "client_msg_id": "4023f52d-70a9-496f-8373-17efa00cd0d5",
        "type": "message",
        "text": "&gt; Any reason for rolling your own? Building on IPFS would give you data exchange with the wide world, which I think it worth having.\nScrapscript is storage-agnostic, so theoretically somebody could host a scrapyard on top of ipfs, filecoin, whatever. But I don't want to bite off too much at once, so I think we should start with a simple centralized kv store\n\nI've also tried to make it namespace agnostic, so theoretically, you should be able to use ipns for scrapnames too! There are a few more tricky bits there, but the concept definitely works.\n\n&gt; How does scrapscript interact with the rest of the computing universe? How can I write code that works on my address book or my e-mail, for example? It looks like all inputs have to be in scrapscript syntax.\nScrapscript is just like any other programming language, so not very e-mail friendly haha. Open to ideas though",
        "user": "U0584S0ULF8",
        "ts": "1701288024.019539",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "EkLAW",
                "elements": [
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Any reason for rolling your own? Building on IPFS would give you data exchange with the wide world, which I think it worth having."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nScrapscript is storage-agnostic, so theoretically somebody could host a scrapyard on top of ipfs, filecoin, whatever. But I don't want to bite off too much at once, so I think we should start with a simple centralized kv store\n\nI've also tried to make it namespace agnostic, so theoretically, you should be able to use ipns for scrapnames too! There are a few more tricky bits there, but the concept definitely works.\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "How does scrapscript interact with the rest of the computing universe? How can I write code that works on my address book or my e-mail, for example? It looks like all inputs have to be in scrapscript syntax."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nScrapscript is just like any other programming language, so not very e-mail friendly haha. Open to ideas though"
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1701226974.834729",
        "parent_user_id": "U05PY5AQCA2"
    },
    {
        "client_msg_id": "03c04dba-f974-4fab-981a-45141d6e911d",
        "type": "message",
        "text": "Text is the proposed language. The chart is that of the classic example used in BPMN docs.",
        "user": "U018S42NMMM",
        "ts": "1701302286.152279",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "X8ALS",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Text is the proposed language. The chart is that of the classic example used in BPMN docs."
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1701260604.791659",
        "parent_user_id": "U018S42NMMM"
    },
    {
        "client_msg_id": "66FD5F99-09A8-4455-A5CC-D38B5726BCF6",
        "type": "message",
        "text": "It\u2019s nice that the \u201cwhen\u201d syntax reads left-to-right. It necessitates naming every single task, though, and those names are the hardest part to follow for me (x, y, z, p, etc).",
        "user": "UFEQUBNNT",
        "ts": "1701303782.864939",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "bIhSl",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "It\u2019s nice that the \u201cwhen\u201d syntax reads left-to-right"
                            },
                            {
                                "type": "text",
                                "text": "."
                            },
                            {
                                "type": "text",
                                "text": " It necessitates naming every single task, though, and those names are the hardest part to follow for me (x, y, z, p, etc)."
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1701260604.791659",
        "parent_user_id": "U018S42NMMM"
    },
    {
        "client_msg_id": "e375e041-c795-4fa1-ba96-9c2002a33b38",
        "type": "message",
        "text": "Yeah. Naming of tasks is needed because they are used to specify event conditions to trigger followup tasks. I couldn't think of a way out of this.",
        "user": "U018S42NMMM",
        "ts": "1701303929.920379",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ZprQb",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yeah. Naming of tasks is needed because they are used to specify event conditions to trigger followup tasks. I couldn't think of a way out of this."
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1701260604.791659",
        "parent_user_id": "U018S42NMMM"
    },
    {
        "type": "message",
        "text": "Similar approach in Spotify's Prefect framework: <https://docs.prefect.io/latest/concepts/tasks/#wait-for>",
        "files": [
            {
                "id": "F067URRLPUM",
                "created": 1701304135,
                "timestamp": 1701304135,
                "name": "image.png",
                "title": "image.png",
                "mimetype": "image/png",
                "filetype": "png",
                "pretty_type": "PNG",
                "user": "U018S42NMMM",
                "user_team": "T5TCAFTA9",
                "editable": false,
                "size": 142756,
                "mode": "hosted",
                "is_external": false,
                "external_type": "",
                "is_public": true,
                "public_url_shared": false,
                "display_as_bot": false,
                "username": "",
                "url_private": "https://files.slack.com/files-pri/T5TCAFTA9-F067URRLPUM/image.png",
                "url_private_download": "https://files.slack.com/files-pri/T5TCAFTA9-F067URRLPUM/download/image.png",
                "media_display_type": "unknown",
                "thumb_64": "https://files.slack.com/files-tmb/T5TCAFTA9-F067URRLPUM-463146fb40/image_64.png",
                "thumb_80": "https://files.slack.com/files-tmb/T5TCAFTA9-F067URRLPUM-463146fb40/image_80.png",
                "thumb_360": "https://files.slack.com/files-tmb/T5TCAFTA9-F067URRLPUM-463146fb40/image_360.png",
                "thumb_360_w": 360,
                "thumb_360_h": 266,
                "thumb_480": "https://files.slack.com/files-tmb/T5TCAFTA9-F067URRLPUM-463146fb40/image_480.png",
                "thumb_480_w": 480,
                "thumb_480_h": 354,
                "thumb_160": "https://files.slack.com/files-tmb/T5TCAFTA9-F067URRLPUM-463146fb40/image_160.png",
                "thumb_720": "https://files.slack.com/files-tmb/T5TCAFTA9-F067URRLPUM-463146fb40/image_720.png",
                "thumb_720_w": 720,
                "thumb_720_h": 531,
                "thumb_800": "https://files.slack.com/files-tmb/T5TCAFTA9-F067URRLPUM-463146fb40/image_800.png",
                "thumb_800_w": 800,
                "thumb_800_h": 590,
                "thumb_960": "https://files.slack.com/files-tmb/T5TCAFTA9-F067URRLPUM-463146fb40/image_960.png",
                "thumb_960_w": 960,
                "thumb_960_h": 708,
                "thumb_1024": "https://files.slack.com/files-tmb/T5TCAFTA9-F067URRLPUM-463146fb40/image_1024.png",
                "thumb_1024_w": 1024,
                "thumb_1024_h": 755,
                "original_w": 1600,
                "original_h": 1180,
                "thumb_tiny": "AwAjADDRzz1NG4UEnNLmgBNwpdwoooAAwNLn2NJQOtACHrRQaT86AFooooAKUdaSlHWgBaKKKACiiigAooooA//Z",
                "permalink": "https://futureofcoding.slack.com/files/U018S42NMMM/F067URRLPUM/image.png",
                "permalink_public": "https://slack-files.com/T5TCAFTA9-F067URRLPUM-62344f9fab",
                "is_starred": false,
                "has_rich_preview": false,
                "file_access": "visible"
            }
        ],
        "upload": false,
        "user": "U018S42NMMM",
        "display_as_bot": false,
        "ts": "1701304138.879779",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "9ypRI",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Similar approach in Spotify's Prefect framework: "
                            },
                            {
                                "type": "link",
                                "url": "https://docs.prefect.io/latest/concepts/tasks/#wait-for"
                            }
                        ]
                    }
                ]
            }
        ],
        "client_msg_id": "904186de-3d00-4e95-82fd-7b5b5e85e2ab",
        "thread_ts": "1701260604.791659",
        "parent_user_id": "U018S42NMMM",
        "attachments": [
            {
                "image_url": "https://docs.prefect.io/latest/assets/images/social/concepts/tasks.png",
                "image_width": 1200,
                "image_height": 630,
                "image_bytes": 23353,
                "from_url": "https://docs.prefect.io/latest/concepts/tasks/#wait-for",
                "service_icon": "https://docs.prefect.io/latest/img/favicon.png",
                "id": 1,
                "original_url": "https://docs.prefect.io/latest/concepts/tasks/#wait-for",
                "fallback": "Tasks - Prefect Docs",
                "text": "Prefect tasks represents a discrete unit of work in a Prefect workflow.",
                "title": "Tasks - Prefect Docs",
                "title_link": "https://docs.prefect.io/latest/concepts/tasks/#wait-for",
                "service_name": "docs.prefect.io"
            }
        ]
    },
    {
        "client_msg_id": "B6CDE267-E673-4AC4-BDA3-0B7A59FC85BA",
        "type": "message",
        "text": "I don\u2019t see any of the task initializers being reused except procure, so I wonder if you could use _those_ to identify and give the tasks names only when necessary? Along the lines of \u201c@chef.make_pizza(\u2026) when @customer.order_pizza\u201d?",
        "user": "UFEQUBNNT",
        "ts": "1701304145.001689",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "e33K5",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I don\u2019t see any of the task initializers being reused except procure, so I wonder if you could use "
                            },
                            {
                                "type": "text",
                                "text": "those",
                                "style": {
                                    "bold": false,
                                    "italic": true,
                                    "strike": false
                                }
                            },
                            {
                                "type": "text",
                                "text": " to identify and give the tasks names only when necessary? Along the lines of \u201c@chef.make_pizza(\u2026) when @customer.order_pizza\u201d?"
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UFEQUBNNT",
            "ts": "1701304167.000000"
        },
        "thread_ts": "1701260604.791659",
        "parent_user_id": "U018S42NMMM"
    },
    {
        "client_msg_id": "4633509e-39b0-4f55-9ecd-b23d6b69c709",
        "type": "message",
        "text": "No, the same task could be used at multiple times with say, different arguments.",
        "user": "U018S42NMMM",
        "ts": "1701304188.895219",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "/K4kk",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "No, the same task could be used at multiple times with say, different arguments."
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1701260604.791659",
        "parent_user_id": "U018S42NMMM"
    },
    {
        "client_msg_id": "FCB62047-D33F-4CB0-8FDE-8D874CA3C23A",
        "type": "message",
        "text": "I\u2019ve seen serial syntax like &gt;&gt; used too, but that doesn\u2019t help with so much fanout.",
        "user": "UFEQUBNNT",
        "ts": "1701304206.668749",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Ya6QJ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I\u2019ve seen serial syntax like >> used too, but that doesn\u2019t help with so much fanout."
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1701260604.791659",
        "parent_user_id": "U018S42NMMM"
    },
    {
        "client_msg_id": "8FAE8CC2-7C73-418E-B461-6C51E12F276B",
        "type": "message",
        "text": "Oh yeah, I\u2019m just saying that I don\u2019t actually see that happening almost at all in this workflow, so maybe the cases that need disambiguation can use the \u201cx, y, z\u201d names if they\u2019re more exceptional? Just a thought.",
        "user": "UFEQUBNNT",
        "ts": "1701304276.736969",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "tsX0e",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Oh yeah, I\u2019m just saying that I don\u2019t actually see that happening almost at all in this workflow, so maybe the cases that need disambiguation can use the \u201cx, y, z\u201d names if "
                            },
                            {
                                "type": "text",
                                "text": "th"
                            },
                            {
                                "type": "text",
                                "text": "ey\u2019re more exceptional? Just a thought."
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UFEQUBNNT",
            "ts": "1701304309.000000"
        },
        "thread_ts": "1701260604.791659",
        "parent_user_id": "U018S42NMMM"
    },
    {
        "client_msg_id": "edb0bdd6-6af4-44fd-8aba-f96e8ef5fb11",
        "type": "message",
        "text": "Yeah, good point.",
        "user": "U018S42NMMM",
        "ts": "1701305561.117729",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "iHfxb",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yeah, good point."
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1701260604.791659",
        "parent_user_id": "U018S42NMMM"
    },
    {
        "client_msg_id": "6af0d313-9852-4914-878c-eec18972845c",
        "type": "message",
        "text": "&gt; Scrapscript is just like any other programming language, so not very e-mail friendly haha. Open to ideas though\nIf Scrapscript does networking, you can implement the IMAP protocol. If Scrapscript can read local files, you can delegate IMAP to an external tool such as isync. In both cases you need a MIME parser. Just like with any other programming languages.\n\nSo in the end, my question comes down to whether Scrapscript has access to local files and to network protocols.",
        "user": "UJBAJNFLK",
        "ts": "1701328075.747539",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "WUisf",
                "elements": [
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Scrapscript is just like any other programming language, so not very e-mail friendly haha. Open to ideas though"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nIf Scrapscript does networking, you can implement the IMAP protocol. If Scrapscript can read local files, you can delegate IMAP to an external tool such as isync. In both cases you need a MIME parser. Just like with any other programming languages.\n\nSo in the end, my question comes down to whether Scrapscript has access to local files and to network protocols."
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1701226974.834729",
        "parent_user_id": "U05PY5AQCA2"
    },
    {
        "client_msg_id": "549bfa98-88d0-4633-99d2-ca220cae12c1",
        "type": "message",
        "text": "oh sorry i misunderstood what you were asking. yes, you will be able to access local files and network through the cli",
        "user": "U0584S0ULF8",
        "ts": "1701355234.121019",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "4lHxN",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "oh sorry i misunderstood what you were asking. yes, you will be able to access local files and network through the cli"
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1701226974.834729",
        "parent_user_id": "U05PY5AQCA2",
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UJBAJNFLK"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "fefca721-c201-41bb-819f-8b9b300fb74c",
        "type": "message",
        "text": "\"do\" is a bit awkward, because it's not imperative code. It's declarative, describing a process that may never be initiated. When $start also feels like it should be implicit for anything that doesn't have a different trigger. The names could be more descriptive than lowercase letters. I might be inclined to use \"when {name} happens\" , and \"step: {name} is\" to make it clearer, too. But all that should be taken with a grain of salt, because I have never been able to understand why I would want to use BPMN. All my use cases seem deeply ill-suited to it.",
        "user": "U02U0AS3J49",
        "ts": "1701410325.428109",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "zrxlt",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\"do\" is a bit awkward, because it's not imperative code. It's declarative, describing a process that may never be initiated. When $start also feels like it should be implicit for anything that doesn't have a different trigger. The names could be more descriptive than lowercase letters. I might be inclined to use \"when {name} happens\" , and \"step: {name} is\" to make it clearer, too. But all that should be taken with a grain of salt, because I have never been able to understand why I would want to use BPMN. All my use cases seem deeply ill-suited to it."
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1701260604.791659",
        "parent_user_id": "U018S42NMMM"
    },
    {
        "client_msg_id": "61cc2bc9-33b9-4261-bad6-a6ad99938d1f",
        "type": "message",
        "text": "<@U02U0AS3J49> All good points. `do ... end` is just a construct I copied from Ruby's block syntax.\nBPMN has around 120 types of elements including exclusive gateways, parallel gateways which seems highly unnecessary. I'm trying to avoid all those elements with some kind of composable event algebra. I think workflow engines (where some tasks could be done by humans) have been underutilized by developers precisely because of BPMN's complexity.",
        "user": "U018S42NMMM",
        "ts": "1701410578.705949",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "B5+kX",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U02U0AS3J49"
                            },
                            {
                                "type": "text",
                                "text": " All good points. "
                            },
                            {
                                "type": "text",
                                "text": "do ... end",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " is just a construct I copied from Ruby's block syntax.\nBPMN has around 120 types of elements including exclusive gateways, parallel gateways which seems highly unnecessary. I'm trying to avoid all those elements with some kind of composable event algebra. I think workflow engines (where some tasks could be done by humans) have been underutilized by developers precisely because of BPMN's complexity."
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "edited": {
            "user": "U018S42NMMM",
            "ts": "1701410953.000000"
        },
        "thread_ts": "1701260604.791659",
        "parent_user_id": "U018S42NMMM"
    },
    {
        "client_msg_id": "ee6c2fd2-71ad-4165-b4d7-3d0719513fcf",
        "type": "message",
        "text": "I think BPMN not having a semantics has been the biggest issue in people not using BPMN for workflow. But there are other ways to do workflow, and the ones that get used the most don't require BPMN.",
        "user": "U02U0AS3J49",
        "ts": "1701411305.633929",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "lR3Pr",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I think BPMN not having a semantics has been the biggest issue in people not using BPMN for workflow. But there are other ways to do workflow, and the ones that get used the most don't require BPMN."
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1701260604.791659",
        "parent_user_id": "U018S42NMMM"
    }
]