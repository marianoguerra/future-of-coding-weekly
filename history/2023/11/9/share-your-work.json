[
    {
        "client_msg_id": "bece9573-b8a4-4bd4-946c-8662089790e7",
        "type": "message",
        "text": "It's still early, but what do you all think about <https://levlo.com>? Any feedback is welcome, but I'd especially love to hear how do you understand the product based on the messaging on the site. What would you build with it?",
        "user": "U0296ACR13M",
        "ts": "1699513446.034469",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "CQ8yX",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "It's still early, but what do you all think about "
                            },
                            {
                                "type": "link",
                                "url": "https://levlo.com"
                            },
                            {
                                "type": "text",
                                "text": "? Any feedback is welcome, but I'd especially love to hear how do you understand the product based on the messaging on the site. What would you build with it?"
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "from_url": "https://levlo.com/",
                "service_icon": "http://img1.wsimg.com/isteam/ip/516639c6-bfb7-4a3c-8326-8b55d86e1b95/Logo_white_green.svg/:/rs=w:57,h:57,m",
                "thumb_url": "https://i.vimeocdn.com/video/1739492311-071393385d7144698f353f8540588d27b53bc38ff7a3c2d09f9b49f9fbfe1d1b-d_1280x720?r=pad",
                "thumb_width": 1280,
                "thumb_height": 720,
                "id": 1,
                "original_url": "https://levlo.com",
                "fallback": "Levlo",
                "text": "Levlo is a textual no-code platform that allows you to create, share, and monetize expert applications without coding. Start building your app today!",
                "title": "Levlo",
                "title_link": "https://levlo.com/",
                "service_name": "levlo.com"
            }
        ],
        "thread_ts": "1699513446.034469",
        "reply_count": 17,
        "reply_users_count": 4,
        "latest_reply": "1699651083.069209",
        "reply_users": [
            "U05SU27S1M2",
            "U0296ACR13M",
            "U0625T25APL",
            "U05PESXCC2E"
        ],
        "is_locked": false,
        "subscribed": false
    },
    {
        "client_msg_id": "00bfdabd-ed17-413f-a634-968f383ef4bc",
        "type": "message",
        "text": "I've published an essay <https://www.latentcenters.com/personification-of-computer-processes|Personification of computer processes> where I introduce a metaphor that will allow us to program computers in a game-like (and also in \"<https://dynamicland.org|Dynamic Land>\"-like) environments. The website Latent Centers is a digital garden I started recently where I will continue to publish related work. The aim is to invent <https://www.latentcenters.com|computing that makes us feel more alive>.\n\nI'm looking forward to hearing your thoughts!",
        "user": "U01DBLH2DN1",
        "ts": "1699521932.966449",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "7lp6a",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I've published an essay "
                            },
                            {
                                "type": "link",
                                "url": "https://www.latentcenters.com/personification-of-computer-processes",
                                "text": "Personification of computer processes"
                            },
                            {
                                "type": "text",
                                "text": " where I introduce a metaphor that will allow us to program computers in a game-like (and also in \""
                            },
                            {
                                "type": "link",
                                "url": "https://dynamicland.org",
                                "text": "Dynamic Land"
                            },
                            {
                                "type": "text",
                                "text": "\"-like) environments. The website Latent Centers is a digital garden I started recently where I will continue to publish related work. The aim is to invent "
                            },
                            {
                                "type": "link",
                                "url": "https://www.latentcenters.com",
                                "text": "computing that makes us feel more alive"
                            },
                            {
                                "type": "text",
                                "text": ".\n\nI'm looking forward to hearing your thoughts!"
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1699521932.966449",
        "reply_count": 10,
        "reply_users_count": 3,
        "latest_reply": "1699652914.943779",
        "reply_users": [
            "U01DBLH2DN1",
            "U05PESXCC2E",
            "UC21F8Q48"
        ],
        "is_locked": false,
        "subscribed": false
    },
    {
        "client_msg_id": "ba98b438-0a5d-4a3f-a9c8-ff2a9cdf53a4",
        "type": "message",
        "text": "(For the best experience, visit it on a desktop device. I haven't adapted it to touch devices.)",
        "user": "U01DBLH2DN1",
        "ts": "1699522224.207639",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ACwti",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "(For the best experience, visit it on a desktop device. I haven't adapted it to touch devices.)"
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1699521932.966449",
        "parent_user_id": "U01DBLH2DN1"
    },
    {
        "client_msg_id": "3058e365-2922-4a86-9ac9-950d87674474",
        "type": "message",
        "text": "'textual no-code' looks a lot like code to me! what am I missing?",
        "user": "U05SU27S1M2",
        "ts": "1699531062.761439",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "w6h4H",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "'textual no-code' looks a lot like code to me! what am I missing?"
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1699513446.034469",
        "parent_user_id": "U0296ACR13M"
    },
    {
        "client_msg_id": "0b1a1af7-b208-4a6a-b548-4679ad557cbd",
        "type": "message",
        "text": "yeah, it's a bit difficult term, but the best I came up with.. The point is that you're not actually writing text, but using a graphical user interface that, among other things, only allows you to input valid tokens for any given location.",
        "user": "U0296ACR13M",
        "ts": "1699531249.605489",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "o1WRf",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "yeah, it's a bit difficult term, but the best I came up with.. The point is that you're not actually writing text, but using a graphical user interface that, among other things, only allows you to input valid tokens for any given location."
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1699513446.034469",
        "parent_user_id": "U0296ACR13M"
    },
    {
        "client_msg_id": "b1276cdb-cb12-4733-a45a-2c95ae8b47c7",
        "type": "message",
        "text": "there is no parsing, so the 'code' can look a lot more like natural language. \"Programming in plain English\" is another label I've used for it.",
        "user": "U0296ACR13M",
        "ts": "1699531332.197799",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Kz6ZB",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "there is no parsing, so the 'code' can look a lot more like natural language. \"Programming in plain English\" is another label I've used for it."
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "edited": {
            "user": "U0296ACR13M",
            "ts": "1699531400.000000"
        },
        "thread_ts": "1699513446.034469",
        "parent_user_id": "U0296ACR13M"
    },
    {
        "client_msg_id": "f17c3707-d8d3-4cf2-a4fd-656e6de352a5",
        "type": "message",
        "text": "Fair enough! I'm being picky. I think if you squinted I think you could say any text editor \"only allows you to input valid tokens for any given location\". I'm not sure if it's plain English. I think this might be called a 'structure editor'?",
        "user": "U05SU27S1M2",
        "ts": "1699531507.988889",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ujcvD",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Fair enough! I'm being picky. I think if you squinted I think you could say any text editor \"only allows you to input valid tokens for any given location\". I'm not sure if it's plain English. I think this might be called a 'structure editor'?"
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1699513446.034469",
        "parent_user_id": "U0296ACR13M"
    },
    {
        "client_msg_id": "7dd731ad-746a-4b64-94d7-6bca51a8239e",
        "type": "message",
        "text": "I'd say basically all text editors allow you to type anything anywhere. Like you can type \"1 ++\" into your codebase even if anything you would add afterwards wouldn't make it valid code. And yes, this is structured/projectional editing.",
        "user": "U0296ACR13M",
        "ts": "1699531856.572899",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "7KHC5",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I'd say basically all text editors allow you to type anything anywhere. Like you can type \"1 ++\" into your codebase even if anything you would add afterwards wouldn't make it valid code. And yes, this is structured/projectional editing."
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1699513446.034469",
        "parent_user_id": "U0296ACR13M"
    },
    {
        "client_msg_id": "d0a2a5b2-3fc0-4854-ad3d-2702ba82842c",
        "type": "message",
        "text": "I mean you can only type characters in a particular set (e.g. ascii, unicode) within a fixed grid.",
        "user": "U05SU27S1M2",
        "ts": "1699532069.551089",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "MUHfH",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I mean you can only type characters in a particular set (e.g. ascii, unicode) within a fixed grid."
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1699513446.034469",
        "parent_user_id": "U0296ACR13M",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U0296ACR13M"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "edc7904d-17fd-4f6f-89c6-fc7a242753b0",
        "type": "message",
        "text": "I think the term you might be looking for is <https://en.wikipedia.org/wiki/Literate_programming|literate programming>?",
        "user": "U0625T25APL",
        "ts": "1699543804.600249",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "mF2IA",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I think the term you might be looking for is "
                            },
                            {
                                "type": "link",
                                "url": "https://en.wikipedia.org/wiki/Literate_programming",
                                "text": "literate programming"
                            },
                            {
                                "type": "text",
                                "text": "?"
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1699513446.034469",
        "parent_user_id": "U0296ACR13M"
    },
    {
        "client_msg_id": "2a706c70-e78e-4aef-8eb9-d558fd95c7a5",
        "type": "message",
        "text": "Well that's the programming language research field term yes, but would tell absolutely nothing to potential users :slightly_smiling_face:",
        "user": "U0296ACR13M",
        "ts": "1699545635.285159",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "j/QyQ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Well that's the programming language research field term yes, but would tell absolutely nothing to potential users "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1699513446.034469",
        "parent_user_id": "U0296ACR13M"
    },
    {
        "client_msg_id": "8e632fc4-0215-448f-8412-0c2984c1b3f6",
        "type": "message",
        "text": "Hmm, yeah it's still code with if/else/+/-/</> tokens. If there's a small grammar, it could be nice to use, but for example AppleScript... I can't stand it, as a developer or non-developer. There are so many rules to the grammar that it makes it impossible to remember how to write it correctly.\n\n... set AppleScript's text item delimiters to theSearchString\n\nThe order of nouns, prepositions, verbs, plurality, it's not just longer than code, it's more confusing.",
        "user": "U05PESXCC2E",
        "ts": "1699564509.828579",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "7NB8S",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Hmm, yeah it's still code with if/else/+/-/</> tokens. If there's a small grammar, it could be nice to use, but for example AppleScript... I can't stand it, as a developer or non-developer. There are so many rules to the grammar that it makes it impossible to remember how to write it correctly.\n\n... set AppleScript's text item delimiters to theSearchString\n\nThe order of nouns, prepositions, verbs, plurality, it's not just longer than code, it's more confusing."
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "edited": {
            "user": "U05PESXCC2E",
            "ts": "1699564570.000000"
        },
        "thread_ts": "1699513446.034469",
        "parent_user_id": "U0296ACR13M"
    },
    {
        "client_msg_id": "eef4379b-ecae-4f04-a780-d9d00d401298",
        "type": "message",
        "text": "How do you build a UI with it? What does a simple application such as a To-do list look like?",
        "user": "U05PESXCC2E",
        "ts": "1699564746.233089",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "mnXcB",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "How do you build a UI with it? What does a simple application such as a To-do list look like?"
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1699513446.034469",
        "parent_user_id": "U0296ACR13M"
    },
    {
        "client_msg_id": "abcee6f2-a301-4cc3-a63c-92447fd7e237",
        "type": "message",
        "text": "For me, coding comes down to functions, variables, and values, as you mention in the article. If you were to do the same personification to math for example, how would you do it?",
        "user": "U05PESXCC2E",
        "ts": "1699565491.119829",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "dJF54",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "For me, coding comes down to functions, variables, and values, as you mention in the article. If you were to do the same personification to math for example, how would you do it?"
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1699521932.966449",
        "parent_user_id": "U01DBLH2DN1"
    },
    {
        "client_msg_id": "0f1c6765-0c4b-49d1-80db-bb6801d0172b",
        "type": "message",
        "text": "Will there be support for numerical units? \"travel distance  &gt;  10\". 10 what? I think I understand it more.. it's like a textual (vs grid) spreadsheet?",
        "user": "U05PESXCC2E",
        "ts": "1699566491.659149",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "JOAbE",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Will there be support for numerical units? \"travel distance  >  10\". 10 what? I think I understand it more.. it's like a textual (vs grid) spreadsheet?"
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1699513446.034469",
        "parent_user_id": "U0296ACR13M"
    },
    {
        "client_msg_id": "e379920b-9aff-4eac-bdb6-70c588338ebb",
        "type": "message",
        "text": "The Program Counter represented as the active entity, walking through function execution. I like it better than I thought I would. It has ToonTalk vibes, but with fewer agents, so much more constrained, more grounded, and less confusing.",
        "user": "UC21F8Q48",
        "ts": "1699575441.429309",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "sLURJ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The Program Counter represented as the active entity, walking through function execution. I like it better than I thought I would. It has ToonTalk vibes, but with fewer agents, so much more constrained, more grounded, and less confusing."
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1699521932.966449",
        "parent_user_id": "U01DBLH2DN1"
    },
    {
        "client_msg_id": "ddb75ff4-745e-4ad8-86ac-476a7d21b0e4",
        "type": "message",
        "text": "I suppose it's bit of an academic discussion that what is code and what's not. I do still like to refer to what's written with Levlo as \"Levlo code\" too. I'd just point out that natural English does have if/else and mathematical operators when used in specific domains. The operators could easily be replaced with words in Levlo, but I thought it'd be unnecessarily verbose.\n\nInitially the idea is to target use-cases where a custom UI is not necessary (such as spreadsheet use-cases), however you'll be able to hide parts of the code and apply some styling to end up with a form UI. You can also host your Levlo App as a REST API so that it takes some of the inputs as query parameters and returns some of the computed values as results. This would allow you to build a completely custom UI for the logic implemented with Levlo.",
        "user": "U0296ACR13M",
        "ts": "1699597870.645509",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "P3VR0",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I suppose it's bit of an academic discussion that what is code and what's not. I do still like to refer to what's written with Levlo as \"Levlo code\" too. I'd just point out that natural English does have if/else and mathematical operators when used in specific domains. The operators could easily be replaced with words in Levlo, but I thought it'd be unnecessarily verbose.\n\nInitially the idea is to target use-cases where a custom UI is not necessary (such as spreadsheet use-cases), however you'll be able to hide parts of the code and apply some styling to end up with a form UI. You can also host your Levlo App as a REST API so that it takes some of the inputs as query parameters and returns some of the computed values as results. This would allow you to build a completely custom UI for the logic implemented with Levlo."
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1699513446.034469",
        "parent_user_id": "U0296ACR13M"
    },
    {
        "client_msg_id": "a61c0098-c9b0-47e6-afa2-c6540e00ad07",
        "type": "message",
        "text": "You're probably right that if the grammar ends up being massive with many ways to write the same thing, it'll probably get difficult to use. But Levlo is not parsed so there's a lot more flexibility in designing the grammar than what AppleScript developers had. Also Levlo is able to offer the user an exhaustive list of valid tokens for any given location, so 'browsing' how to continue should be a lot easier.",
        "user": "U0296ACR13M",
        "ts": "1699598249.136099",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "1AlEd",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "You're probably right that if the grammar ends up being massive with many ways to write the same thing, it'll probably get difficult to use. But Levlo is not parsed so there's a lot more flexibility in designing the grammar than what AppleScript developers had. Also Levlo is able to offer the user an exhaustive list of valid tokens for any given location, so 'browsing' how to continue should be a lot easier."
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1699513446.034469",
        "parent_user_id": "U0296ACR13M"
    },
    {
        "client_msg_id": "d6bf57c9-033f-4a3d-aa67-192ba5dfc6d7",
        "type": "message",
        "text": "Also, yes, my intention is to take the type system very far with numerical units, ranges, sets,  and verified computations between different units.",
        "user": "U0296ACR13M",
        "ts": "1699598508.292859",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "cZuar",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Also, yes, my intention is to take the type system very far with numerical units, ranges, sets,  and verified computations between different units."
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1699513446.034469",
        "parent_user_id": "U0296ACR13M",
        "reactions": [
            {
                "name": "clap",
                "users": [
                    "U05PESXCC2E"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "f7b60c92-5c1f-43ed-b0d2-4209b19a7b89",
        "type": "message",
        "text": "> For me, coding comes down to functions, variables, and values, as you mention in the article. If you were to do the same personification to math for example, how would you do it?\n<@U05PESXCC2E> I'm curious if you had in mind some examples from math when you wrote the question. I assume that the subsets of math can be personified in the same way. I'm curious what examples you have in mind! Thanks for asking!",
        "user": "U01DBLH2DN1",
        "ts": "1699642986.125099",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "KiQh8",
                "elements": [
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "For me, coding comes down to functions, variables, and values, as you mention in the article. If you were to do the same personification to math for example, how would you do it?"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U05PESXCC2E"
                            },
                            {
                                "type": "text",
                                "text": " I'm curious if you had in mind some examples from math when you wrote the question. I assume that the subsets of math can be personified in the same way. I'm curious what examples you have in mind! Thanks for asking!"
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "edited": {
            "user": "U01DBLH2DN1",
            "ts": "1699643004.000000"
        },
        "thread_ts": "1699521932.966449",
        "parent_user_id": "U01DBLH2DN1"
    },
    {
        "client_msg_id": "566af3e3-1020-4682-8b3a-2848d69ec1f3",
        "type": "message",
        "text": "> The Program Counter represented as the active entity, walking through function execution. I like it better than I thought I would. It has ToonTalk vibes, but with fewer agents, so much more constrained, more grounded, and less confusing.\n<@UC21F8Q48> it does have ToonTalk vibes, happy to hear you find the idea compelling!\n\nFor many years I tried to find something similar to \"beings\" as the personification of processes. (I still haven't found it). Then at some point it occurred to me that maybe I can ask Alan Kay himself if he knows of anything like it, explaining the idea along the way. If I recall correctly I heard him claim in a couple of talks that most of the things have been invented in 80s or something along those lines. So I thought, well, let's put it to a test! To my surprise he replied back and pointed out Ken Kahn's ToonTalk. It is indeed done in a similar spirit, but not quite. The closest thing to beings in ToonTalk I would say are \"robots\", but they can't be controlled directly as beings can. They have a more specific role, not as general as beings. Like you say, there are many metaphors in Toontalk and it gets confusing because of that.\n\nInteresting that you had an association with the Program Counter. What part of the article made you bring it up?",
        "user": "U01DBLH2DN1",
        "ts": "1699643920.051829",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "3bl+2",
                "elements": [
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The Program Counter represented as the active entity, walking through function execution. I like it better than I thought I would. It has ToonTalk vibes, but with fewer agents, so much more constrained, more grounded, and less confusing."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UC21F8Q48"
                            },
                            {
                                "type": "text",
                                "text": " it does have ToonTalk vibes, happy to hear you find the idea compelling!\n\nFor many years I tried to find something similar to \"beings\" as the personification of processes. (I still haven't found it). Then at some point it occurred to me that maybe I can ask Alan Kay himself if he knows of anything like it, explaining the idea along the way. If I recall correctly I heard him claim in a couple of talks that most of the things have been invented in 80s or something along those lines. So I thought, well, let's put it to a test! To my surprise he replied back and pointed out Ken Kahn's ToonTalk. It is indeed done in a similar spirit, but not quite. The closest thing to beings in ToonTalk I would say are \"robots\", but they can't be controlled directly as beings can. They have a more specific role, not as general as beings. Like you say, there are many metaphors in Toontalk and it gets confusing because of that.\n\nInteresting that you had an association with the Program Counter. What part of the article made you bring it up?"
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "edited": {
            "user": "U01DBLH2DN1",
            "ts": "1699644088.000000"
        },
        "thread_ts": "1699521932.966449",
        "parent_user_id": "U01DBLH2DN1"
    },
    {
        "client_msg_id": "f3742f32-0277-42f0-bbce-01154f758fbb",
        "type": "message",
        "text": "Maybe it's not \"code\", but it is logic (logical and/or) and math, which code also uses. A structured editor that feels free-form is always nice. Some possibly related links:\n\n<https://news.ycombinator.com/item?id=28009218>\n<https://www.ibm.com/products/operational-decision-manager>",
        "user": "U05PESXCC2E",
        "ts": "1699644139.281959",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "IdJYd",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Maybe it's not \"code\", but it is logic (logical and/or) and math, which code also uses. A structured editor that feels free-form is always nice. Some possibly related links:\n\n"
                            },
                            {
                                "type": "link",
                                "url": "https://news.ycombinator.com/item?id=28009218"
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "link",
                                "url": "https://www.ibm.com/products/operational-decision-manager"
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1699513446.034469",
        "parent_user_id": "U0296ACR13M"
    },
    {
        "client_msg_id": "50eb33c6-2316-4741-a68b-6977c38f596b",
        "type": "message",
        "text": "<@U01DBLH2DN1> You could say that code is (mostly) just logic and math. If you turn variables, values, and function into different abstractions, what about the math and logic? What makes it different that those abstractions aren't changed? My head is kind of cloudy today, the right words aren't coming out :slightly_smiling_face:",
        "user": "U05PESXCC2E",
        "ts": "1699644567.329609",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "BqH/T",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U01DBLH2DN1"
                            },
                            {
                                "type": "text",
                                "text": " You could say that code is (mostly) just logic and math. If you turn variables, values, and function into different abstractions, what about the math and logic? What makes it different that those abstractions aren't changed? My head is kind of cloudy today, the right words aren't coming out "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1699521932.966449",
        "parent_user_id": "U01DBLH2DN1"
    },
    {
        "client_msg_id": "a198737a-5df4-497f-b102-ece487335a08",
        "type": "message",
        "text": "Another example, how would you describe an anonymous function: `(x => x + 1)(5)`. It is a function, but has no space/portal equivalent if I understand.",
        "user": "U05PESXCC2E",
        "ts": "1699644667.886139",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "DZWKw",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Another example, how would you describe an anonymous function: "
                            },
                            {
                                "type": "text",
                                "text": "(x => x + 1)(5)",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ". It is a function, but has no space/portal equivalent if I understand."
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "edited": {
            "user": "U05PESXCC2E",
            "ts": "1699644699.000000"
        },
        "thread_ts": "1699521932.966449",
        "parent_user_id": "U01DBLH2DN1"
    },
    {
        "client_msg_id": "17d850db-7120-440f-ba2c-e5d0fd07725f",
        "type": "message",
        "text": "> Another example, how would you describe an anonymous function: `(x => x + 1)(5)`. It is a function, but has no space/portal equivalent if I understand. (edited)\nGood question, the future examples will make that more clear. The anonymous function has a definition, which maps to a space, and even though it is \"anonymous\" it is still possible to point to it one way or another. I think the \"portal -> function name\" is confusing, I need to change it to \"portal -> pointer to a function\". Does that make it more clear?",
        "user": "U01DBLH2DN1",
        "ts": "1699644928.908049",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "S/qKq",
                "elements": [
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Another example, how would you describe an anonymous function: "
                            },
                            {
                                "type": "text",
                                "text": "(x => x + 1)(5)",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ". It is a function, but has no space/portal equivalent if I understand. (edited)"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Good question, the future examples will make that more clear. The anonymous function has a definition, which maps to a space, and even though it is \"anonymous\" it is still possible to point to it one way or another. I think the \"portal -> function name\" is confusing, I need to change it to \"portal -> pointer to a function\". Does that make it more clear?"
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "edited": {
            "user": "U01DBLH2DN1",
            "ts": "1699645241.000000"
        },
        "thread_ts": "1699521932.966449",
        "parent_user_id": "U01DBLH2DN1"
    },
    {
        "client_msg_id": "d60e3c20-e36b-4979-9d7a-e97e4f122455",
        "type": "message",
        "text": "&gt; what about the math and logic?\nI don't have a good answer to this one, I'll have to think about it",
        "user": "U01DBLH2DN1",
        "ts": "1699645107.974819",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "4CsHc",
                "elements": [
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "what about the math and logic?"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I don't have a good answer to this one, I'll have to think about it"
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1699521932.966449",
        "parent_user_id": "U01DBLH2DN1"
    },
    {
        "client_msg_id": "568e0f7a-c4a9-450b-96fe-a3c50696b597",
        "type": "message",
        "text": "Yeah, it's certainly logic and maybe I'd call any textual definition of logic \"code\", but then no-code refers to \"not general purpose programming language code\", not \"not definition of logic\", and textual doesn't mean a sequence of unicode/ascii/etc, but something that you can read as you read text. :sweat_smile:\n\nInteresting links! Thanks! Although, I'll pick Levlo over any of the tech listed :smile:",
        "user": "U0296ACR13M",
        "ts": "1699646750.213979",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "IxtQm",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yeah, it's certainly logic and maybe I'd call any textual definition of logic \"code\", but then no-code refers to \"not general purpose programming language code\", not \"not definition of logic\", and textual doesn't mean a sequence of unicode/ascii/etc, but something that you can read as you read text. "
                            },
                            {
                                "type": "emoji",
                                "name": "sweat_smile",
                                "unicode": "1f605"
                            },
                            {
                                "type": "text",
                                "text": "\n\nInteresting links! Thanks! Although, I'll pick Levlo over any of the tech listed "
                            },
                            {
                                "type": "emoji",
                                "name": "smile",
                                "unicode": "1f604"
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1699513446.034469",
        "parent_user_id": "U0296ACR13M"
    },
    {
        "client_msg_id": "51026e0e-e7c2-4e60-8faa-52e2335dd4ec",
        "type": "message",
        "text": "It is sounding more like <https://en.wikipedia.org/wiki/Logic_programming>, with rules/clauses, formal logic.",
        "user": "U05PESXCC2E",
        "ts": "1699651083.069209",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "uJ7JP",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "It is sounding more like "
                            },
                            {
                                "type": "link",
                                "url": "https://en.wikipedia.org/wiki/Logic_programming"
                            },
                            {
                                "type": "text",
                                "text": ", with rules/clauses, formal logic."
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1699513446.034469",
        "parent_user_id": "U0296ACR13M"
    },
    {
        "client_msg_id": "b37d86db-e378-46ae-865e-97a1a65c4c5f",
        "type": "message",
        "text": "&gt; the Program Counter\nI watched the vid and only skimmed the writeup. The Being is doing the current step of execution. That\u2019s what the Program Counter Register is in hardware: the current step of execution.",
        "user": "UC21F8Q48",
        "ts": "1699652914.943779",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Z7vez",
                "elements": [
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "the Program Counter"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I watched the vid and only skimmed the writeup. The Being is doing the current step of execution. That\u2019s what the Program Counter Register is in hardware: the current step of execution."
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1699521932.966449",
        "parent_user_id": "U01DBLH2DN1",
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "U01DBLH2DN1"
                ],
                "count": 1
            }
        ]
    }
]