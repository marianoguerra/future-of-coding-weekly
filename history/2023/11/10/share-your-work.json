[
    {
        "client_msg_id": "e4c807b1-4fd7-4a28-ae8c-8633cfc1eec5",
        "type": "message",
        "text": "Hi everyone, my latest article on The Object Network and OnexOS is out:\n\n<https://open.substack.com/pub/duncancragg/p/turning-the-blob-inside-out?r=1sq2dz&amp;utm_campaign=post&amp;utm_medium=email>\n\nIt discusses \"The Blob\" - apps - and how we can free our data by \"simply\" not having those nasty apps coming between us and our precious digital stuff...",
        "user": "UE6EFEPTQ",
        "ts": "1699626549.753869",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "nWd79",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Hi everyone, my latest article on The Object Network and OnexOS is out:\n\n"
                            },
                            {
                                "type": "link",
                                "url": "https://open.substack.com/pub/duncancragg/p/turning-the-blob-inside-out?r=1sq2dz&utm_campaign=post&utm_medium=email"
                            },
                            {
                                "type": "text",
                                "text": "\n\nIt discusses \"The Blob\" - apps - and how we can free our data by \"simply\" not having those nasty apps coming between us and our precious digital stuff..."
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "from_url": "https://open.substack.com/pub/duncancragg/p/turning-the-blob-inside-out?r=1sq2dz&utm_campaign=post&utm_medium=email",
                "image_url": "https://substackcdn.com/image/fetch/w_1200,h_600,c_fill,f_jpg,q_auto:good,fl_progressive:steep,g_auto/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F62a495a4-c561-4037-aff1-307fedf9ab9e_960x540.png",
                "image_width": 960,
                "image_height": 540,
                "image_bytes": 33081,
                "service_icon": "https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fbucketeer-e05bbc84-baa3-437e-9518-adb32be77984.s3.amazonaws.com%2Fpublic%2Fimages%2F97f0bc34-daa0-452a-b2c4-04bc1aaeee43%2Fapple-touch-icon-57x57.png",
                "id": 1,
                "original_url": "https://open.substack.com/pub/duncancragg/p/turning-the-blob-inside-out?r=1sq2dz&amp;utm_campaign=post&amp;utm_medium=email",
                "fallback": "Turning the Blob inside out",
                "text": "Idiosyncratic apps come between you and your data...",
                "title": "Turning the Blob inside out",
                "title_link": "https://open.substack.com/pub/duncancragg/p/turning-the-blob-inside-out?r=1sq2dz&utm_campaign=post&utm_medium=email",
                "service_name": "duncancragg.substack.com"
            }
        ],
        "thread_ts": "1699626549.753869",
        "reply_count": 2,
        "reply_users_count": 1,
        "latest_reply": "1699626665.245029",
        "reply_users": [
            "UE6EFEPTQ"
        ],
        "is_locked": false,
        "subscribed": false
    },
    {
        "client_msg_id": "d2924d98-1078-4333-a3bb-967d0a70f28f",
        "type": "message",
        "text": "It's quite short and readable, I think. Let me know what you think!",
        "user": "UE6EFEPTQ",
        "ts": "1699626603.125179",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Ju1Ul",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "It's quite short and readable, I think. Let me know what you think!"
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1699626549.753869",
        "parent_user_id": "UE6EFEPTQ"
    },
    {
        "client_msg_id": "50405da3-3bb1-4891-9de2-f79c06ce42aa",
        "type": "message",
        "text": "The Inversion illustrated is actually the inversion from imperative to declarative architectural style.",
        "user": "UE6EFEPTQ",
        "ts": "1699626665.245029",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "pDO9W",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The Inversion illustrated is actually the inversion from imperative to declarative architectural style."
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1699626549.753869",
        "parent_user_id": "UE6EFEPTQ"
    },
    {
        "type": "message",
        "text": "We're experimenting with a novel form of \"Programming by Example\", similar to Excel macros: <https://www.plato.io/blog/introducing-macros>\n\nI think it can scale quite well to a complete programming system with branching, looping, etc.. Thoughts?",
        "files": [
            {
                "id": "F065YBMC596",
                "created": 1699645023,
                "timestamp": 1699645023,
                "name": "MacroDemo_FullDraft_17.mp4",
                "title": "MacroDemo_FullDraft_17.mp4",
                "mimetype": "video/mp4",
                "filetype": "mp4",
                "pretty_type": "MPEG 4 Video",
                "user": "U018FSM8G3Z",
                "user_team": "T5TCAFTA9",
                "editable": false,
                "size": 8179218,
                "mode": "hosted",
                "is_external": false,
                "external_type": "",
                "is_public": true,
                "public_url_shared": false,
                "display_as_bot": false,
                "username": "",
                "transcription": {
                    "status": "none"
                },
                "mp4": "https://files.slack.com/files-tmb/T5TCAFTA9-F065YBMC596-093af328ad/macrodemo_fulldraft_17.mp4",
                "url_private": "https://files.slack.com/files-tmb/T5TCAFTA9-F065YBMC596-093af328ad/macrodemo_fulldraft_17.mp4",
                "url_private_download": "https://files.slack.com/files-pri/T5TCAFTA9-F065YBMC596/download/macrodemo_fulldraft_17.mp4",
                "hls": "https://files.slack.com/files-tmb/T5TCAFTA9-F065YBMC596-093af328ad/file.m3u8?_xcb=5ad1f",
                "hls_embed": "data:application/vnd.apple.mpegurl;base64,I0VYVE0zVQojRVhULVgtVkVSU0lPTjozCiNFWFQtWC1JTkRFUEVOREVOVC1TRUdNRU5UUwojRVhULVgtU1RSRUFNLUlORjpCQU5EV0lEVEg9MTA4MjI5OSxBVkVSQUdFLUJBTkRXSURUSD02MTY1MjQsQ09ERUNTPSJhdmMxLjY0MDAyOCxtcDRhLjQwLjUiLFJFU09MVVRJT049MTkyMHgxMDgwLEZSQU1FLVJBVEU9MjkuOTcwCmRhdGE6YXBwbGljYXRpb24vdm5kLmFwcGxlLm1wZWd1cmw7YmFzZTY0LEkwVllWRTB6VlFvalJWaFVMVmd0VmtWU1UwbFBUam96Q2lORldGUXRXQzFVUVZKSFJWUkVWVkpCVkVsUFRqbzNDaU5GV0ZRdFdDMU5SVVJKUVMxVFJWRlZSVTVEUlRveENpTkZXRlF0V0MxUVRFRlpURWxUVkMxVVdWQkZPbFpQUkFvalJWaFVTVTVHT2pZdU1EQTJMQXBvZEhSd2N6b3ZMMlpwYkdWekxuTnNZV05yTG1OdmJTOW1hV3hsY3kxMGJXSXZWRFZVUTBGR1ZFRTVMVVl3TmpWWlFrMUROVGsyTFRBNU0yRm1Nekk0WVdRdlptbHNaVjlJWHpJMk5GOHhPVEl3ZURFd09EQmZOalV3TUV0Q1VGTmZOMUZXUWxKZk1EQXdNREV1ZEhNS0kwVllWRWxPUmpvMkxqQXdOaXdLYUhSMGNITTZMeTltYVd4bGN5NXpiR0ZqYXk1amIyMHZabWxzWlhNdGRHMWlMMVExVkVOQlJsUkJPUzFHTURZMVdVSk5RelU1Tmkwd09UTmhaak15T0dGa0wyWnBiR1ZmU0Y4eU5qUmZNVGt5TUhneE1EZ3dYelkxTURCTFFsQlRYemRSVmtKU1h6QXdNREF5TG5SekNpTkZXRlJKVGtZNk5pNHdNRFlzQ21oMGRIQnpPaTh2Wm1sc1pYTXVjMnhoWTJzdVkyOXRMMlpwYkdWekxYUnRZaTlVTlZSRFFVWlVRVGt0UmpBMk5WbENUVU0xT1RZdE1Ea3pZV1l6TWpoaFpDOW1hV3hsWDBoZk1qWTBYekU1TWpCNE1UQTRNRjgyTlRBd1MwSlFVMTgzVVZaQ1VsOHdNREF3TXk1MGN3b2pSVmhVU1U1R09qWXVNREEyTEFwb2RIUndjem92TDJacGJHVnpMbk5zWVdOckxtTnZiUzltYVd4bGN5MTBiV0l2VkRWVVEwRkdWRUU1TFVZd05qVlpRazFETlRrMkxUQTVNMkZtTXpJNFlXUXZabWxzWlY5SVh6STJORjh4T1RJd2VERXdPREJmTmpVd01FdENVRk5mTjFGV1FsSmZNREF3TURRdWRITUtJMFZZVkVsT1JqbzJMakF3Tml3S2FIUjBjSE02THk5bWFXeGxjeTV6YkdGamF5NWpiMjB2Wm1sc1pYTXRkRzFpTDFRMVZFTkJSbFJCT1MxR01EWTFXVUpOUXpVNU5pMHdPVE5oWmpNeU9HRmtMMlpwYkdWZlNGOHlOalJmTVRreU1IZ3hNRGd3WHpZMU1EQkxRbEJUWHpkUlZrSlNYekF3TURBMUxuUnpDaU5GV0ZSSlRrWTZOQzR3TnpFc0NtaDBkSEJ6T2k4dlptbHNaWE11YzJ4aFkyc3VZMjl0TDJacGJHVnpMWFJ0WWk5VU5WUkRRVVpVUVRrdFJqQTJOVmxDVFVNMU9UWXRNRGt6WVdZek1qaGhaQzltYVd4bFgwaGZNalkwWHpFNU1qQjRNVEE0TUY4Mk5UQXdTMEpRVTE4M1VWWkNVbDh3TURBd05pNTBjd29qUlZoVUxWZ3RSVTVFVEVsVFZBbz0KI0VYVC1YLVNUUkVBTS1JTkY6QkFORFdJRFRIPTcwNTQyMixBVkVSQUdFLUJBTkRXSURUSD00MTg4NDYsQ09ERUNTPSJhdmMxLjY0MDAxZixtcDRhLjQwLjUiLFJFU09MVVRJT049MTI4MHg3MjAsRlJBTUUtUkFURT0yOS45NzAKaHR0cHM6Ly9maWxlcy5zbGFjay5jb20vZmlsZXMtdG1iL1Q1VENBRlRBOS1GMDY1WUJNQzU5Ni0wOTNhZjMyOGFkL2ZpbGVfSF8yNjRfMTI4MHg3MjBfMzUwMEtCUFNfN1FWQlIubTN1OAo=",
                "mp4_low": "https://files.slack.com/files-tmb/T5TCAFTA9-F065YBMC596-093af328ad/macrodemo_fulldraft_17_trans.mp4",
                "duration_ms": 34100,
                "media_display_type": "video",
                "thumb_video": "https://files.slack.com/files-tmb/T5TCAFTA9-F065YBMC596-093af328ad/macrodemo_fulldraft_17_thumb_video.jpeg",
                "thumb_video_w": 1920,
                "thumb_video_h": 1080,
                "permalink": "https://futureofcoding.slack.com/files/U018FSM8G3Z/F065YBMC596/macrodemo_fulldraft_17.mp4",
                "permalink_public": "https://slack-files.com/T5TCAFTA9-F065YBMC596-e3ae262fd8",
                "is_starred": false,
                "has_rich_preview": false,
                "file_access": "visible"
            }
        ],
        "upload": false,
        "user": "U018FSM8G3Z",
        "display_as_bot": false,
        "ts": "1699645040.076329",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "/5ZSR",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "We're experimenting with a novel form of \"Programming by Example\", similar to Excel macros: "
                            },
                            {
                                "type": "link",
                                "url": "https://www.plato.io/blog/introducing-macros"
                            },
                            {
                                "type": "text",
                                "text": "\n\nI think it can scale quite well to a complete programming system with branching, looping, etc.. Thoughts?"
                            }
                        ]
                    }
                ]
            }
        ],
        "client_msg_id": "3954930a-5b1d-430d-8cc6-d46195119aa2",
        "thread_ts": "1699645040.076329",
        "reply_count": 20,
        "reply_users_count": 4,
        "latest_reply": "1699688213.313149",
        "reply_users": [
            "U05PESXCC2E",
            "U018FSM8G3Z",
            "UC21F8Q48",
            "U013ZLJARC7"
        ],
        "is_locked": false,
        "subscribed": false,
        "reactions": [
            {
                "name": "thinking_face",
                "users": [
                    "U05PESXCC2E",
                    "U0296ACR13M",
                    "U05UBCXHWM6"
                ],
                "count": 3
            }
        ]
    },
    {
        "client_msg_id": "7cf53037-0c85-43db-8495-52b9de7da50f",
        "type": "message",
        "text": "How would branching work? Drag/press a condition button? Record two macros and mark them as branches visually?",
        "user": "U05PESXCC2E",
        "ts": "1699650483.671959",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ZZgku",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "How would branching work? Drag/press a condition button? Record two macros and mark them as branches visually?"
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1699645040.076329",
        "parent_user_id": "U018FSM8G3Z"
    },
    {
        "client_msg_id": "2ccdddfd-4678-45f1-8ba2-7788645ce601",
        "type": "message",
        "text": "<@U05PESXCC2E> We're experimenting with a few variants. The most straightforward is your first suggestion, but the challenge is maintaining a consistent state. Macros are recorded with a \"recording context\", or an example of the parameters needed to run the macro (e.g. a single row of a table). But once you introduce conditionals, those parameters might not be valid for all branches (e.g. update if a record exists, insert if it doesn't).\n\nSo one option is to prompt the user to choose a different context (e.g. pick a different row).\n\nAnother option is more in line with your second suggestion (took us longer to come up with it, though :)). The user records a macro for a single context, then we alert them to a failure or possible failure for other contexts (not always possible, but usually is), and then they record a separate macro for that context.\n\nThis is more in line with classic \"Programming by Example\" systems such as the one described by Bret Victor (<http://worrydream.com/MagicInk/>), where multiple examples are provided and the system tries to generalize.",
        "user": "U018FSM8G3Z",
        "ts": "1699650682.165039",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "gNIfK",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U05PESXCC2E"
                            },
                            {
                                "type": "text",
                                "text": " We're experimenting with a few variants. The most straightforward is your first suggestion, but the challenge is maintaining a consistent state. Macros are recorded with a \"recording context\", or an example of the parameters needed to run the macro (e.g. a single row of a table). But once you introduce conditionals, those parameters might not be valid for all branches (e.g. update if a record exists, insert if it doesn't).\n\nSo one option is to prompt the user to choose a different context (e.g. pick a different row).\n\nAnother option is more in line with your second suggestion (took us longer to come up with it, though :)). The user records a macro for a single context, then we alert them to a failure or possible failure for other contexts (not always possible, but usually is), and then they record a separate macro for that context.\n\nThis is more in line with classic \"Programming by Example\" systems such as the one described by Bret Victor ("
                            },
                            {
                                "type": "link",
                                "url": "http://worrydream.com/MagicInk/"
                            },
                            {
                                "type": "text",
                                "text": "), where multiple examples are provided and the system tries to generalize."
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "edited": {
            "user": "U018FSM8G3Z",
            "ts": "1699650828.000000"
        },
        "thread_ts": "1699645040.076329",
        "parent_user_id": "U018FSM8G3Z"
    },
    {
        "client_msg_id": "1325715f-86b9-4836-a6eb-6fdd1bfa4082",
        "type": "message",
        "text": "&gt; where multiple examples are provided and the system tries to generalize\nThis approach fails. Just have the user write the branch condition explicitly.",
        "user": "UC21F8Q48",
        "ts": "1699653090.473659",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "fWNGj",
                "elements": [
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "where multiple examples are provided and the system tries to generalize"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "This approach fails. Just have the user write the branch condition explicitly."
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1699645040.076329",
        "parent_user_id": "U018FSM8G3Z"
    },
    {
        "client_msg_id": "bb62a789-d01b-498c-8767-e54ac22f3dde",
        "type": "message",
        "text": "Why do you say it fails? To clarify, we're not trying to do any \"smart\" inference. Just trying to come up with a scheme that's more inductive.\n\nFor instance, if you record a macro that accepts some input, searches for a row, then updates the row, that may work for your first example, but it will fail when the row doesn't exist. We can prompt the user when they hit that failure, and ask them what they want to do.\n\nI agree it won't work in all cases, but we think there might be common patterns that will get us pretty far.",
        "user": "U018FSM8G3Z",
        "ts": "1699653279.768689",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "e6JwY",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Why do you say it fails? To clarify, we're not trying to do any \"smart\" inference. Just trying to come up with a scheme that's more inductive.\n\nFor instance, if you record a macro that accepts some input, searches for a row, then updates the row, that may work for your first example, but it will fail when the row doesn't exist. We can prompt the user when they hit that failure, and ask them what they want to do.\n\nI agree it won't work in all cases, but we think there might be common patterns that will get us pretty far."
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1699645040.076329",
        "parent_user_id": "U018FSM8G3Z"
    },
    {
        "type": "message",
        "text": "Is this representation editable, or must you redo the demo if one of these inferences is wrong?",
        "files": [
            {
                "id": "F064VC9R1PH",
                "created": 1699653304,
                "timestamp": 1699653304,
                "name": "image.png",
                "title": "image.png",
                "mimetype": "image/png",
                "filetype": "png",
                "pretty_type": "PNG",
                "user": "UC21F8Q48",
                "user_team": "T5TCAFTA9",
                "editable": false,
                "size": 57056,
                "mode": "hosted",
                "is_external": false,
                "external_type": "",
                "is_public": true,
                "public_url_shared": false,
                "display_as_bot": false,
                "username": "",
                "url_private": "https://files.slack.com/files-pri/T5TCAFTA9-F064VC9R1PH/image.png",
                "url_private_download": "https://files.slack.com/files-pri/T5TCAFTA9-F064VC9R1PH/download/image.png",
                "media_display_type": "unknown",
                "thumb_64": "https://files.slack.com/files-tmb/T5TCAFTA9-F064VC9R1PH-cc44835a6d/image_64.png",
                "thumb_80": "https://files.slack.com/files-tmb/T5TCAFTA9-F064VC9R1PH-cc44835a6d/image_80.png",
                "thumb_360": "https://files.slack.com/files-tmb/T5TCAFTA9-F064VC9R1PH-cc44835a6d/image_360.png",
                "thumb_360_w": 360,
                "thumb_360_h": 196,
                "thumb_480": "https://files.slack.com/files-tmb/T5TCAFTA9-F064VC9R1PH-cc44835a6d/image_480.png",
                "thumb_480_w": 480,
                "thumb_480_h": 261,
                "thumb_160": "https://files.slack.com/files-tmb/T5TCAFTA9-F064VC9R1PH-cc44835a6d/image_160.png",
                "original_w": 592,
                "original_h": 322,
                "thumb_tiny": "AwAaADDRIbPDY/ClAOOTmmsEOdxH50g8tejD/vqgB9FNUop4Yc+9PyPWgBKKXIooAaxQZyPrxTd0XYD/AL5qSigBimM8gD/vmnAAjgClooATA9BS0UUAf//Z",
                "permalink": "https://futureofcoding.slack.com/files/UC21F8Q48/F064VC9R1PH/image.png",
                "permalink_public": "https://slack-files.com/T5TCAFTA9-F064VC9R1PH-ba34e88af6",
                "is_starred": false,
                "has_rich_preview": false,
                "file_access": "visible"
            }
        ],
        "upload": false,
        "user": "UC21F8Q48",
        "display_as_bot": false,
        "ts": "1699653308.888499",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "TUP7d",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Is this representation editable, or must you redo the demo if one of these inferences is wrong?"
                            }
                        ]
                    }
                ]
            }
        ],
        "client_msg_id": "10715056-3fe4-407b-8d34-72106418db74",
        "thread_ts": "1699645040.076329",
        "parent_user_id": "U018FSM8G3Z"
    },
    {
        "client_msg_id": "362944cb-cd8f-42e9-8422-baf07f7f2f75",
        "type": "message",
        "text": "It's not editable yet, but we're working on it.",
        "user": "U018FSM8G3Z",
        "ts": "1699653320.567379",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "SQeq2",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "It's not editable yet, but we're working on it."
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1699645040.076329",
        "parent_user_id": "U018FSM8G3Z"
    },
    {
        "client_msg_id": "7fe1014f-1fed-49ef-b252-c4e83bb6c924",
        "type": "message",
        "text": "Also, those aren't inferences, they're recordings of explicit user actions.",
        "user": "U018FSM8G3Z",
        "ts": "1699653345.512139",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "EobR1",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Also, those aren't inferences, they're recordings of explicit user actions."
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1699645040.076329",
        "parent_user_id": "U018FSM8G3Z"
    },
    {
        "client_msg_id": "ebbcd481-508c-414c-af68-ef8e65fb3052",
        "type": "message",
        "text": "&gt; We can prompt the user when they hit that failure, and ask them what they want to do.\nMaybe Eager did this? It sounds okay. But what you don\u2019t want to do is implicitly try to infer the branch condition.\n\nI\u2019ve seen many PBD systems and the amount of work to demonstrate to try to get the branch condition is very much greater than the amount of work to just say the branch condition.",
        "user": "UC21F8Q48",
        "ts": "1699653558.648799",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "G+5ow",
                "elements": [
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "We can prompt the user when they hit that failure, and ask them what they want to do."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Maybe Eager did this? It sounds okay. But what you don\u2019t want to do is implicitly try to infer the branch condition.\n\nI\u2019ve seen many PBD systems and the amount of work to demonstrate to try to get the branch condition is very much greater than the amount of work to just say the branch condition."
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1699645040.076329",
        "parent_user_id": "U018FSM8G3Z",
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UCUSW7WVD"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "3e42d5fb-04e3-4817-89d6-a9143351ca0c",
        "type": "message",
        "text": "I didn't know about Eager. Thanks!\n\nAre you aware of any PBD systems that only record explicit actions? All of the research projects I'm familiar with try to do an \"observe and infer\" approach, which I agree is too fragile.",
        "user": "U018FSM8G3Z",
        "ts": "1699653691.439849",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "nn8jz",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I didn't know about Eager. Thanks!\n\nAre you aware of any PBD systems that only record explicit actions? All of the research projects I'm familiar with try to do an \"observe and infer\" approach, which I agree is too fragile."
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1699645040.076329",
        "parent_user_id": "U018FSM8G3Z"
    },
    {
        "client_msg_id": "910c4d6f-3bed-4013-93ae-e149ae4be352",
        "type": "message",
        "text": "For instance, our plan for looping is to make the user explicitly say they want to run a loop over a collection, rather than to try and infer that they're repeating actions for some set of elements.",
        "user": "U018FSM8G3Z",
        "ts": "1699653793.905129",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "a0Bxw",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "For instance, our plan for looping is to make the user explicitly say they want to run a loop over a collection, rather than to try and infer that they're repeating actions for some set of elements."
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1699645040.076329",
        "parent_user_id": "U018FSM8G3Z",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UC21F8Q48"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "845e57fb-e3f1-4bf9-a0b4-6d873dac5c5d",
        "type": "message",
        "text": "Yeah less inference is better. If you could _also_ add the loop after the fact, that\u2019s even better. That\u2019s where the editable program representation is helpful.",
        "user": "UC21F8Q48",
        "ts": "1699654087.820879",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "+Sqe/",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yeah less inference is better. If you could "
                            },
                            {
                                "type": "text",
                                "text": "also",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " add the loop after the fact, that\u2019s even better. That\u2019s where the editable program representation is helpful."
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1699645040.076329",
        "parent_user_id": "U018FSM8G3Z"
    },
    {
        "type": "message",
        "text": "SmallStar <http://acypher.com/wwid/Chapters/05SmallStar.html>",
        "files": [
            {
                "id": "F065CD7CZ9A",
                "created": 1699654138,
                "timestamp": 1699654138,
                "name": "image.png",
                "title": "image.png",
                "mimetype": "image/png",
                "filetype": "png",
                "pretty_type": "PNG",
                "user": "UC21F8Q48",
                "user_team": "T5TCAFTA9",
                "editable": false,
                "size": 143194,
                "mode": "hosted",
                "is_external": false,
                "external_type": "",
                "is_public": true,
                "public_url_shared": false,
                "display_as_bot": false,
                "username": "",
                "url_private": "https://files.slack.com/files-pri/T5TCAFTA9-F065CD7CZ9A/image.png",
                "url_private_download": "https://files.slack.com/files-pri/T5TCAFTA9-F065CD7CZ9A/download/image.png",
                "media_display_type": "unknown",
                "thumb_64": "https://files.slack.com/files-tmb/T5TCAFTA9-F065CD7CZ9A-7fc244a384/image_64.png",
                "thumb_80": "https://files.slack.com/files-tmb/T5TCAFTA9-F065CD7CZ9A-7fc244a384/image_80.png",
                "thumb_360": "https://files.slack.com/files-tmb/T5TCAFTA9-F065CD7CZ9A-7fc244a384/image_360.png",
                "thumb_360_w": 360,
                "thumb_360_h": 172,
                "thumb_480": "https://files.slack.com/files-tmb/T5TCAFTA9-F065CD7CZ9A-7fc244a384/image_480.png",
                "thumb_480_w": 480,
                "thumb_480_h": 229,
                "thumb_160": "https://files.slack.com/files-tmb/T5TCAFTA9-F065CD7CZ9A-7fc244a384/image_160.png",
                "thumb_720": "https://files.slack.com/files-tmb/T5TCAFTA9-F065CD7CZ9A-7fc244a384/image_720.png",
                "thumb_720_w": 720,
                "thumb_720_h": 344,
                "thumb_800": "https://files.slack.com/files-tmb/T5TCAFTA9-F065CD7CZ9A-7fc244a384/image_800.png",
                "thumb_800_w": 800,
                "thumb_800_h": 382,
                "thumb_960": "https://files.slack.com/files-tmb/T5TCAFTA9-F065CD7CZ9A-7fc244a384/image_960.png",
                "thumb_960_w": 960,
                "thumb_960_h": 458,
                "thumb_1024": "https://files.slack.com/files-tmb/T5TCAFTA9-F065CD7CZ9A-7fc244a384/image_1024.png",
                "thumb_1024_w": 1024,
                "thumb_1024_h": 489,
                "original_w": 1026,
                "original_h": 490,
                "thumb_tiny": "AwAWADC15z9o25/2qcJG4ypGfUmn7ECglB+VGI/7g/IUAN3n/JP+FHmc/wD6/wDCnFIz2UfgKURx/wB1T+FAEbTkdAGPoM0C4bcAY8ZOOtS+Wn9xfypDGgGQoB+lABu+XFN/OiigB2R6H86Nw9D+dNooAfv9qQtnjFNoHUUAf//Z",
                "permalink": "https://futureofcoding.slack.com/files/UC21F8Q48/F065CD7CZ9A/image.png",
                "permalink_public": "https://slack-files.com/T5TCAFTA9-F065CD7CZ9A-11272afee2",
                "is_starred": false,
                "has_rich_preview": false,
                "file_access": "visible"
            }
        ],
        "upload": false,
        "user": "UC21F8Q48",
        "display_as_bot": false,
        "ts": "1699654145.725909",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "MdQzY",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "SmallStar "
                            },
                            {
                                "type": "link",
                                "url": "http://acypher.com/wwid/Chapters/05SmallStar.html"
                            }
                        ]
                    }
                ]
            }
        ],
        "client_msg_id": "c5548512-3e71-4702-8f8d-8293e3bd66f6",
        "thread_ts": "1699645040.076329",
        "parent_user_id": "U018FSM8G3Z"
    },
    {
        "client_msg_id": "26e8f125-c573-4339-9807-82ae3a1e8b04",
        "type": "message",
        "text": "Yea, SmallStar is the most practical I've seen. But all of these systems operate in the desktop metaphor. Have you seen any that operate on structured or relational data? That's our context, and the problems end up being quite different.",
        "user": "U018FSM8G3Z",
        "ts": "1699654204.132809",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "9DfZ/",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yea, SmallStar is the most practical I've seen. But all of these systems operate in the desktop metaphor. Have you seen any that operate on structured or relational data? That's our context, and the problems end up being quite different."
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1699645040.076329",
        "parent_user_id": "U018FSM8G3Z"
    },
    {
        "client_msg_id": "3d3ce95c-c5d8-4fb5-8779-ae8efe2f476d",
        "type": "message",
        "text": "\u201cWhy Programming by Demonstration Systems Fail: Lessons Learned for Usable AI\u201d  Tessa Lau. 2009. <https://citeseerx.ist.psu.edu/document?repid=rep1&amp;type=pdf&amp;doi=37c50b0cc3c701b269c18014dd3a0c07f9c2b4b8>\n\nMost of these are solved with an editable program representation.",
        "user": "UC21F8Q48",
        "ts": "1699654409.515939",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "4f4FL",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\u201cWhy Programming by Demonstration Systems Fail: Lessons Learned for Usable AI\u201d  Tessa Lau. 2009. "
                            },
                            {
                                "type": "link",
                                "url": "https://citeseerx.ist.psu.edu/document?repid=rep1&type=pdf&doi=37c50b0cc3c701b269c18014dd3a0c07f9c2b4b8"
                            },
                            {
                                "type": "text",
                                "text": "\n\nMost of these are solved with an editable program representation."
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1699645040.076329",
        "parent_user_id": "U018FSM8G3Z"
    },
    {
        "client_msg_id": "828b8b22-4b2c-409c-9b68-d6f7f90c7741",
        "type": "message",
        "text": "Awesome. I have some nightime reading :slightly_smiling_face:",
        "user": "U018FSM8G3Z",
        "ts": "1699654529.069009",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "5QI3Y",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Awesome. I have some nightime reading "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1699645040.076329",
        "parent_user_id": "U018FSM8G3Z"
    },
    {
        "client_msg_id": "3282c04a-b8f4-4772-92d1-ca33bd6b73c0",
        "type": "message",
        "text": "&gt;  Have you seen any that operate on structured or relational data?\nSurprisingly, not off the top of my head (nor in my quick search). Closest I can find is Gneiss, which is great in its own right. <https://www.cs.cmu.edu/~shihpinc/gneiss.html>",
        "user": "UC21F8Q48",
        "ts": "1699654683.094339",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "fyanA",
                "elements": [
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": " Have you seen any that operate on structured or relational data?"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Surprisingly, not off the top of my head (nor in my quick search). Closest I can find is Gneiss, which is great in its own right. "
                            },
                            {
                                "type": "link",
                                "url": "https://www.cs.cmu.edu/~shihpinc/gneiss.html"
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1699645040.076329",
        "parent_user_id": "U018FSM8G3Z"
    },
    {
        "client_msg_id": "0960928d-1382-4715-9d2e-dc3f308f2498",
        "type": "message",
        "text": "Wow, SmallStar goes waaay back. I was going to say something like PhotoShop actions.",
        "user": "U05PESXCC2E",
        "ts": "1699669826.314559",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "hATkF",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Wow, SmallStar goes waaay back. I was going to say something like PhotoShop actions."
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1699645040.076329",
        "parent_user_id": "U018FSM8G3Z",
        "reactions": [
            {
                "name": "heavy_plus_sign",
                "users": [
                    "U018FSM8G3Z",
                    "UMV4B97GT"
                ],
                "count": 2
            }
        ]
    },
    {
        "client_msg_id": "14958084-19a8-4333-96b3-9379bb50c346",
        "type": "message",
        "text": "Photoshop actions doesn't solve the hard problems like conditionals, AFAIK, though.",
        "user": "U018FSM8G3Z",
        "ts": "1699669913.898109",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "VZ/l3",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Photoshop actions doesn't solve the hard problems like conditionals, AFAIK, though."
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1699645040.076329",
        "parent_user_id": "U018FSM8G3Z"
    },
    {
        "client_msg_id": "a31449c5-db2f-4032-ad1c-84779972a1ae",
        "type": "message",
        "text": "True. Just one example of macros that came to mind. I'd imagine they would have solved some interesting problems being how old PS is, though. I haven't use it in many years.",
        "user": "U05PESXCC2E",
        "ts": "1699679809.094789",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "LbdF+",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "True. Just one example of macros that came to mind. I'd imagine they would have solved some interesting problems being how old PS is, though. I haven't use it in many years."
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1699645040.076329",
        "parent_user_id": "U018FSM8G3Z"
    },
    {
        "client_msg_id": "5e698816-9c0c-4471-b2ff-c3c6b9b1cba7",
        "type": "message",
        "text": "As strange as this might sound, the most powerful and usable PBD system I\u2019ve ever seen is\u2026 emacs keyboard macros (the name\u2019s a misnomer, they also  record other types of events, like mouse gestures).",
        "user": "U013ZLJARC7",
        "ts": "1699688213.313149",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "TZyth",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "As strange as this might sound, the most powerful and usable PBD system I\u2019ve ever seen is\u2026 emacs keyboard macros (the name\u2019s a misnomer, they also  record other types of events, like mouse gestures)."
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1699645040.076329",
        "parent_user_id": "U018FSM8G3Z"
    }
]