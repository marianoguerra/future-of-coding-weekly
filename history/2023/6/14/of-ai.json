[
    {
        "client_msg_id": "45017e9e-6374-4be3-81e4-4d267980071d",
        "type": "message",
        "text": "This might fall under \"thinking-together\", but I'm throwing this here as it specifically relates to AI. For context, I've been working to integrate an LLM into an existing application.  If \"prompt engineering\" is part of the future of coding, here are some challenges to expect:\n\u2022 **Non determinism:** I can repeat a prompt and get back drastically different results, in both content and format.\n\u2022 **Capabilities:** I feel like I'm constantly probing to discover the capabilities and limits of the model. Every interaction is similar to being presented with a blank canvas: What should I ask? What can I ask? Is there something that I could ask that I am forgetting about? Can I reword my prompt slightly and (potentially) get better results? This leads to a lot of experimentation.\n\u2022 **Expectations**: We are tricked into believing the LLM comprehends what we are saying, when it's really just a giant prediction table. Then we are disappointed when it gives less-than-satisfactory replies.",
        "user": "U04JY2BF24E",
        "ts": "1686770339.927269",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "LjFZ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "This might fall under \"thinking-together\", but I'm throwing this here as it specifically relates to AI. For context, I've been working to integrate an LLM into an existing application.  If \"prompt engineering\" is part of the future of coding, here are some challenges to expect:\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "*"
                                    },
                                    {
                                        "type": "text",
                                        "text": "Non determinism:",
                                        "style": {
                                            "bold": true
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "text": "* I can repeat a prompt and get back drastically different results, in both content and format."
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "*"
                                    },
                                    {
                                        "type": "text",
                                        "text": "Capabilities:",
                                        "style": {
                                            "bold": true
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "text": "* I feel like I'm constantly probing to discover the capabilities and limits of the model. Every interaction is similar to being presented with a blank canvas: What should I ask? What can I ask? Is there something that I could ask that I am forgetting about? Can I reword my prompt slightly and (potentially) get better results? This leads to a lot of experimentation."
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "*"
                                    },
                                    {
                                        "type": "text",
                                        "text": "Expectations",
                                        "style": {
                                            "bold": true
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "text": "*: We are tricked into believing the LLM comprehends what we are saying, when it's really just a giant prediction table. Then we are disappointed when it gives less-than-satisfactory replies."
                                    }
                                ]
                            }
                        ],
                        "style": "bullet",
                        "indent": 0,
                        "border": 0
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1686770339.927269",
        "reply_count": 13,
        "reply_users_count": 5,
        "latest_reply": "1687168091.120419",
        "reply_users": [
            "U0296ACR13M",
            "U04KZ8A9WCT",
            "U04JY2BF24E",
            "U02U0AS3J49",
            "UA14TGLTC"
        ],
        "is_locked": false,
        "subscribed": false
    },
    {
        "client_msg_id": "8a43fc4f-db2c-4edf-82b9-454ea96e597d",
        "type": "message",
        "text": "Compare this to programming against a traditional API:\n\u2022 On in the input side, an API constrains the vocabulary. With an LLM, everything is fair game.\n\u2022 On the output side, I can guess (or learn) the effect of a given API call. With an LLM, it's all probabilistic.",
        "user": "U04JY2BF24E",
        "ts": "1686770353.667069",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "AFXk",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Compare this to programming against a traditional API:\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "On in the input side, an API constrains the vocabulary. With an LLM, everything is fair game."
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "On the output side, I can guess (or learn) the effect of a given API call. With an LLM, it's all probabilistic."
                                    }
                                ]
                            }
                        ],
                        "style": "bullet",
                        "indent": 0,
                        "border": 0
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UEQ7QL15F"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "4b9aeee8-f1a2-4bed-a7ca-317d046b2927",
        "type": "message",
        "text": "Curious about others experiences here, ways to reason about these models, techniques for overcoming, etc...",
        "user": "U04JY2BF24E",
        "ts": "1686770389.841669",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "elwq2",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Curious about others experiences here, ways to reason about these models, techniques for overcoming, etc..."
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "edited": {
            "user": "U04JY2BF24E",
            "ts": "1686770463.000000"
        }
    },
    {
        "client_msg_id": "79e75e2a-9bc0-4363-a700-a1dbeaf81060",
        "type": "message",
        "text": "I feel that one barrier to even starting to approach a coding task with LLM code generation is the uncertainty of how much effort it will be to end up with something satisfactory. If you're an experienced programmer you'll have a ballpark idea of the code you have to write and how much effort it will be beforehand. Also, you'll have a much better understanding of whether you're making progress or just heading towards a dead end. It's like choosing a familiar road you know gets you to your destination in an hour vs a road you have heard might take you there in 30 min, but just as likely you'll get lost and reach your destination in 2 hours.\n\nNow, this would be different for someone who has very little experience with coding. If you know none of the roads, you'd probably choose the one you've heard is the shortest. Also, there will be people who have more experience with LLM code generation than manual coding. It'll be interesting to see how they see this. Will people who start programming with heavy usage of LLM code generation stick to that or move towards manual coding as they gain experience.",
        "user": "U0296ACR13M",
        "ts": "1686809890.747819",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Eda=",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I feel that one barrier to even starting to approach a coding task with LLM code generation is the uncertainty of how much effort it will be to end up with something satisfactory. If you're an experienced programmer you'll have a ballpark idea of the code you have to write and how much effort it will be beforehand. Also, you'll have a much better understanding of whether you're making progress or just heading towards a dead end. It's like choosing a familiar road you know gets you to your destination in an hour vs a road you have heard might take you there in 30 min, but just as likely you'll get lost and reach your destination in 2 hours.\n\nNow, this would be different for someone who has very little experience with coding. If you know none of the roads, you'd probably choose the one you've heard is the shortest. Also, there will be people who have more experience with LLM code generation than manual coding. It'll be interesting to see how they see this. Will people who start programming with heavy usage of LLM code generation stick to that or move towards manual coding as they gain experience."
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "edited": {
            "user": "U0296ACR13M",
            "ts": "1686810614.000000"
        },
        "thread_ts": "1686770339.927269",
        "parent_user_id": "U04JY2BF24E"
    },
    {
        "client_msg_id": "9BD14F1C-6756-4EB7-B98A-0B1F5F1F3276",
        "type": "message",
        "text": "&gt; Will people who start programming with heavy usage of LLM code generation stick to that or move towards manual coding as they gain experience.\nIf LLM assisted coding is like training wheels, I wonder if they'd end up in a situation like \"tutorial hell\" (where beginners never break the loop of doing yet another tutorial) and never break the cycle of needed the training wheels.\n\nWith AI as a copilot the question is if you ever want to break that cycle or if you want to have it always by your side. Pretty much like assisted flying in commercial airplanes. Which, by the way, doesn't do all the flaying for the pilot, only the \"boilerplate-ish\" parts (for lacking a better word in my poor English)",
        "user": "U04KZ8A9WCT",
        "ts": "1686810888.808929",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "G+5bG",
                "elements": [
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Will people who start programming with heavy usage of LLM code generation stick to that or move towards manual coding as they gain experience."
                            }
                        ],
                        "border": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "If LLM assisted coding is like training wheels, I wonder if they'd end up in a situation like \"tutorial hell\" (where beginners never break the loop of doing yet another tutorial) and never break the cycle of needed the training wheels.\n\nWith AI as a copilot the question is if you ever want to break that cycle or if you want to have it always by your side. Pretty much like assisted flying in commercial airplanes. Which, by the way, doesn't do all the flaying for the pilot, only the \"boilerplate-ish\" parts (for lacking a better word in my poor English)"
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1686770339.927269",
        "parent_user_id": "U04JY2BF24E"
    },
    {
        "client_msg_id": "8E0DC4A2-0C35-4686-A2B0-ECFA564B8D1B",
        "type": "message",
        "text": "I might be mistaken but, pilots do learn to fly without a assistance first ",
        "user": "U04KZ8A9WCT",
        "ts": "1686810926.193009",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "wk3+G",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I might be mistaken but, pilots do learn to fly without a assistance first "
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1686770339.927269",
        "parent_user_id": "U04JY2BF24E"
    },
    {
        "client_msg_id": "1D08718E-5A11-4686-A50C-76C5B60A63FD",
        "type": "message",
        "text": "I think the danger is loosing the ability to think (<https://experiment-0003.vercel.app/t/Uxkxi6Nuy7|https://experiment-0003.vercel.app/t/Uxkxi6Nuy7>)",
        "user": "U04KZ8A9WCT",
        "ts": "1686810995.848789",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "zfGm",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I think the danger is loosing the ability to think ("
                            },
                            {
                                "type": "link",
                                "url": "https://experiment-0003.vercel.app/t/Uxkxi6Nuy7",
                                "text": "https://experiment-0003.vercel.app/t/Uxkxi6Nuy7"
                            },
                            {
                                "type": "text",
                                "text": ")"
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "from_url": "https://experiment-0003.vercel.app/t/Uxkxi6Nuy7",
                "id": 1,
                "original_url": "https://experiment-0003.vercel.app/t/Uxkxi6Nuy7",
                "fallback": "Is AI going to take over the thinking department?",
                "text": "Some thoughts I had ...",
                "title": "Is AI going to take over the thinking department?",
                "title_link": "https://experiment-0003.vercel.app/t/Uxkxi6Nuy7",
                "service_name": "experiment-0003.vercel.app"
            }
        ],
        "thread_ts": "1686770339.927269",
        "parent_user_id": "U04JY2BF24E"
    },
    {
        "client_msg_id": "4854E341-2C91-4AFC-B4CE-2DB2DAE3D8DD",
        "type": "message",
        "text": "Which might happen to anybody, not only beginners",
        "user": "U04KZ8A9WCT",
        "ts": "1686811021.697139",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "m5mN",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Which might happen to anybody, not only beginners"
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1686770339.927269",
        "parent_user_id": "U04JY2BF24E"
    },
    {
        "client_msg_id": "4a5cf655-12bc-4e2b-aac7-ec7951eafa3e",
        "type": "message",
        "text": "Thanks for your thoughts. Just to clarify things a bit, my original query wasn't strictly about code generation but more about generating text to be displayed to a human reader. We are treating the LLM as a component of an overall program. That said, OpenAI's recent announcement of support for \"functions\" might blur the lines here further. Regardless, the challenges apply here too.",
        "user": "U04JY2BF24E",
        "ts": "1686836109.101449",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "m8MSH",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Thanks for your thoughts. Just to clarify things a bit, my original query wasn't strictly about code generation but more about generating text to be displayed to a human reader. We are treating the LLM as a component of an overall program. That said, OpenAI's recent announcement of support for \"functions\" might blur the lines here further. Regardless, the challenges apply here too."
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1686770339.927269",
        "parent_user_id": "U04JY2BF24E",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U04KZ8A9WCT"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "5DAFFED4-D5B0-45E3-8992-B79124D344C1",
        "type": "message",
        "text": "Ohh yes, I got that from your message but then went off track when replying :man-facepalming: ",
        "user": "U04KZ8A9WCT",
        "ts": "1686838763.504369",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "081M",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Ohh yes, I got that from your message but then went off track when replying "
                            },
                            {
                                "type": "emoji",
                                "name": "man-facepalming",
                                "unicode": "1f926-200d-2642-fe0f"
                            },
                            {
                                "type": "text",
                                "text": " "
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1686770339.927269",
        "parent_user_id": "U04JY2BF24E"
    },
    {
        "client_msg_id": "984B7F96-FA12-4CED-A8B6-B2470D85ACE6",
        "type": "message",
        "text": "Dijkstra's paper is probably relevant here",
        "user": "U04KZ8A9WCT",
        "ts": "1686838800.820169",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "vGL",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Dijkstra's paper is probably relevant here"
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1686770339.927269",
        "parent_user_id": "U04JY2BF24E"
    },
    {
        "client_msg_id": "6FA8AC6E-8A90-4471-9DD5-3B59A433F4EA",
        "type": "message",
        "text": "<https://www.cs.utexas.edu/users/EWD/transcriptions/EWD06xx/EWD667.html|https://www.cs.utexas.edu/users/EWD/transcriptions/EWD06xx/EWD667.html>",
        "user": "U04KZ8A9WCT",
        "ts": "1686838849.039929",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Bun",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "link",
                                "url": "https://www.cs.utexas.edu/users/EWD/transcriptions/EWD06xx/EWD667.html",
                                "text": "https://www.cs.utexas.edu/users/EWD/transcriptions/EWD06xx/EWD667.html"
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1686770339.927269",
        "parent_user_id": "U04JY2BF24E"
    },
    {
        "client_msg_id": "A17AB834-52EF-401E-89DC-41FF6DA47CB3",
        "type": "message",
        "text": "Maybe the lack of structured output is what is preventing it from mainstream usage outside of chat bots",
        "user": "U04KZ8A9WCT",
        "ts": "1686838904.022879",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ckth",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Maybe the lack of structured output is what is preventing it from mainstream usage outside of chat bots"
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1686770339.927269",
        "parent_user_id": "U04JY2BF24E"
    },
    {
        "client_msg_id": "f0381d5f-b2da-42b1-8846-4fb90cfbfdce",
        "type": "message",
        "text": "I have been using ChatGPT to learn the ProseMirror library, recently. I'm not a brand-new programmer, but I am brand-new to the library, and I have found it extremely helpful. I don't trust it, because it makes mistakes. But when it makes mistakes I can give it the error message and my hunch as to what is going wrong, and it tries again. That, I have found, is more efficient that me making the mistake, and me finding the solution, because ChatGPT's first guess is closer than mine would have been, and it is much better at getting it right on the second or third try. And it explains why it is changing things. Whereas I try things without knowing why they might work, and if they do work, I still don't know why.",
        "user": "U02U0AS3J49",
        "ts": "1686943601.369219",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "CipV",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I have been using ChatGPT to learn the ProseMirror library, recently. I'm not a brand-new programmer, but I am brand-new to the library, and I have found it extremely helpful. I don't trust it, because it makes mistakes. But when it makes mistakes I can give it the error message and my hunch as to what is going wrong, and it tries again. That, I have found, is more efficient that me making the mistake, and me finding the solution, because ChatGPT's first guess is closer than mine would have been, and it is much better at getting it right on the second or third try. And it explains why it is changing things. Whereas I try things without knowing why they might work, and if they do work, I still don't know why."
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1686770339.927269",
        "parent_user_id": "U04JY2BF24E"
    },
    {
        "client_msg_id": "bbff8a14-f70a-4903-9227-f8d2bb51f48e",
        "type": "message",
        "text": "The experience is like getting tutilage from a slightly senile expert. They may get confused, but they are still better equipped to navigate the uncertainty than you are alone.",
        "user": "U02U0AS3J49",
        "ts": "1686943664.451089",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "TRPmc",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The experience is like getting tutilage from a slightly senile expert. They may get confused, but they are still better equipped to navigate the uncertainty than you are alone."
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1686770339.927269",
        "parent_user_id": "U04JY2BF24E"
    },
    {
        "client_msg_id": "09fa67cb-76c5-4460-96a6-2027720643f1",
        "type": "message",
        "text": "And soon (sometimes already) the first few steps can be automated.  The system takes its proposed answer, tries running it, and fixes errors before replying.",
        "user": "UA14TGLTC",
        "ts": "1687168091.120419",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "x38a6",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "And soon (sometimes already) the first few steps can be automated.  The system takes its proposed answer, tries running it, and fixes errors before replying."
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1686770339.927269",
        "parent_user_id": "U04JY2BF24E"
    }
]