[
    {
        "type": "message",
        "text": "Lamdu now elaborates on non-trivial type errors!\nIn the screenshot several type errors are demonstrated:\n\u2022 A simple one: Text isn\u2019t Num\n\u2022 \u201cOccurs check\u201d: `func func` means that the type of `func` is infinitely `(((a -&gt; a) -&gt; a) -&gt; a) -&gt; \u2026` (note it can be done if wrapping in a nominal type to break the loop\n\u2022 Expand-record when inside record has the same fields. The message here isn\u2019t yet very informative to which field is duplicated. Just says \u201cconstraints\u201d for now\n\u2022 Scoped type variable escape (i.e \u201cskolem\u201d) error. This is equivalent to leaking Haskell\u2019s `ST` monad\u2019s `s` variable",
        "files": [
            {
                "id": "F05ARKA1C94",
                "created": 1685955522,
                "timestamp": 1685955522,
                "name": "Screenshot 2023-06-05 at 11.54.42-fs8.png",
                "title": "Screenshot 2023-06-05 at 11.54.42-fs8.png",
                "mimetype": "image/png",
                "filetype": "png",
                "pretty_type": "PNG",
                "user": "U79HM6726",
                "user_team": "T5TCAFTA9",
                "editable": false,
                "size": 323352,
                "mode": "hosted",
                "is_external": false,
                "external_type": "",
                "is_public": true,
                "public_url_shared": false,
                "display_as_bot": false,
                "username": "",
                "url_private": "https://files.slack.com/files-pri/T5TCAFTA9-F05ARKA1C94/screenshot_2023-06-05_at_11.54.42-fs8.png",
                "url_private_download": "https://files.slack.com/files-pri/T5TCAFTA9-F05ARKA1C94/download/screenshot_2023-06-05_at_11.54.42-fs8.png",
                "media_display_type": "unknown",
                "thumb_64": "https://files.slack.com/files-tmb/T5TCAFTA9-F05ARKA1C94-e747d913d7/screenshot_2023-06-05_at_11.54.42-fs8_64.png",
                "thumb_80": "https://files.slack.com/files-tmb/T5TCAFTA9-F05ARKA1C94-e747d913d7/screenshot_2023-06-05_at_11.54.42-fs8_80.png",
                "thumb_360": "https://files.slack.com/files-tmb/T5TCAFTA9-F05ARKA1C94-e747d913d7/screenshot_2023-06-05_at_11.54.42-fs8_360.png",
                "thumb_360_w": 300,
                "thumb_360_h": 360,
                "thumb_480": "https://files.slack.com/files-tmb/T5TCAFTA9-F05ARKA1C94-e747d913d7/screenshot_2023-06-05_at_11.54.42-fs8_480.png",
                "thumb_480_w": 400,
                "thumb_480_h": 480,
                "thumb_160": "https://files.slack.com/files-tmb/T5TCAFTA9-F05ARKA1C94-e747d913d7/screenshot_2023-06-05_at_11.54.42-fs8_160.png",
                "thumb_720": "https://files.slack.com/files-tmb/T5TCAFTA9-F05ARKA1C94-e747d913d7/screenshot_2023-06-05_at_11.54.42-fs8_720.png",
                "thumb_720_w": 600,
                "thumb_720_h": 720,
                "thumb_800": "https://files.slack.com/files-tmb/T5TCAFTA9-F05ARKA1C94-e747d913d7/screenshot_2023-06-05_at_11.54.42-fs8_800.png",
                "thumb_800_w": 800,
                "thumb_800_h": 959,
                "thumb_960": "https://files.slack.com/files-tmb/T5TCAFTA9-F05ARKA1C94-e747d913d7/screenshot_2023-06-05_at_11.54.42-fs8_960.png",
                "thumb_960_w": 801,
                "thumb_960_h": 960,
                "thumb_1024": "https://files.slack.com/files-tmb/T5TCAFTA9-F05ARKA1C94-e747d913d7/screenshot_2023-06-05_at_11.54.42-fs8_1024.png",
                "thumb_1024_w": 854,
                "thumb_1024_h": 1024,
                "original_w": 1618,
                "original_h": 1940,
                "thumb_tiny": "AwAwACijGqleRzmn+XH2B/OmRfdp5x60AHlx/wB39aTZF6GjNJQA2QIF+UGo6kk+7UdAEsY+XrUmCe4/Ko4/u1ID6EflQAmee35UlO5x0B/CkbOOQB+FAEcn3ajqST7tR0ASR/dp/HfNRq+1cYo8welAEoK+uKGx3JqLzB6UeYPSgBZMbeKjpzPkYxTaAP/Z",
                "permalink": "https://futureofcoding.slack.com/files/U79HM6726/F05ARKA1C94/screenshot_2023-06-05_at_11.54.42-fs8.png",
                "permalink_public": "https://slack-files.com/T5TCAFTA9-F05ARKA1C94-aeed441205",
                "is_starred": false,
                "has_rich_preview": false,
                "file_access": "visible"
            }
        ],
        "upload": false,
        "user": "U79HM6726",
        "display_as_bot": false,
        "ts": "1685955785.485109",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "E3m",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Lamdu now elaborates on non-trivial type errors!\nIn the screenshot several type errors are demonstrated:\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "A simple one: Text isn\u2019t Num"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "\u201cOccurs check\u201d: "
                                    },
                                    {
                                        "type": "text",
                                        "text": "func func",
                                        "style": {
                                            "code": true
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "text": " means that the type of "
                                    },
                                    {
                                        "type": "text",
                                        "text": "func",
                                        "style": {
                                            "code": true
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "text": " is infinitely "
                                    },
                                    {
                                        "type": "text",
                                        "text": "(((a -> a) -> a) -> a) -> \u2026",
                                        "style": {
                                            "code": true
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "text": " (note it can be done if wrapping in a nominal type to break the loop"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Expand-record when inside record has the same fields. The message here isn\u2019t yet very informative to which field is duplicated. Just says \u201cconstraints\u201d for now"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Scoped type variable escape (i.e \u201cskolem\u201d) error. This is equivalent to leaking Haskell\u2019s "
                                    },
                                    {
                                        "type": "text",
                                        "text": "ST",
                                        "style": {
                                            "code": true
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "text": " monad\u2019s "
                                    },
                                    {
                                        "type": "text",
                                        "text": "s",
                                        "style": {
                                            "code": true
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "text": " variable"
                                    }
                                ]
                            }
                        ],
                        "style": "bullet",
                        "indent": 0,
                        "border": 0
                    }
                ]
            }
        ],
        "edited": {
            "user": "U79HM6726",
            "ts": "1685955940.000000"
        },
        "client_msg_id": "061bdd54-69a3-4563-afd1-8190b1c08d86",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UC2A2ARPT",
                    "U0123H7JRDM",
                    "U02JQA5FY5C"
                ],
                "count": 3
            },
            {
                "name": "heart",
                "users": [
                    "UCUSW7WVD"
                ],
                "count": 1
            }
        ]
    }
]