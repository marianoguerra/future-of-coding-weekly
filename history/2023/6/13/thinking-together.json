[
    {
        "client_msg_id": "9a2a597e-edc6-4fa5-bb9a-38be93db73f5",
        "type": "message",
        "text": "I\u2019m been thinking about this concept of a \u201cfull-stack\u201d database. I\u2019m curious what connotations that invokes for folks here and what features you might imagine a futuristic, \u201cfull-stack\u201d database would have? Bonus question: is it \u201cfullstack\u201d, \u201cfull-stack\u201d or \u201cfull stack\u201d?",
        "user": "U02C3SH9L2J",
        "ts": "1686674295.843779",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "61dI",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I\u2019m been thinking about this concept of a \u201cfull-stack\u201d database. I\u2019m curious what connotations that invokes for folks here and what features you might imagine a futuristic, \u201cfull-stack\u201d database would have? Bonus question: is it \u201cfullstack\u201d, \u201cfull-stack\u201d or \u201cfull stack\u201d?"
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1686674295.843779",
        "reply_count": 42,
        "reply_users_count": 7,
        "latest_reply": "1686941719.320249",
        "reply_users": [
            "U055V4HCHU7",
            "U02C3SH9L2J",
            "UMQ6LR9NZ",
            "U01U19ECZTJ",
            "U016VUZGUUQ",
            "UNCP67JSK",
            "U03DNFDFYDA"
        ],
        "is_locked": false,
        "subscribed": false
    },
    {
        "client_msg_id": "d47baef9-7533-4030-9282-eead36a3e96f",
        "type": "message",
        "text": "Full stack, in my mind, has a few connotations: level abstraction and accessibility.\n\nTwo things that come to mind:\n\u2022 Designed to be used by all front-end, back-end, and edge applications. A cross between firebase and postgres, if you will. In many ways DynamoDB feels like an interesting abstraction: NoSQL built on a MySQL backend. So my S1 when I hear \"full stack\" is a realtime nosql abstraction built on a strictly relational db (with an escape hatch to access the latter).\n\u2022 A DB with bundled, native ORM that speaks wire protocol. Most ORMs I see are built as an afterthought. \"Full-stack\" evokes notions of accessibility from a language API perspective. This point is more of a personal feel and not a practical concern though ",
        "user": "U055V4HCHU7",
        "ts": "1686674886.303639",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "gw2F",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Full stack, in my mind, has a few connotations: level abstraction and accessibility.\n\nTwo things that come to mind:\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Designed to be used by all front-end, back-end, and edge applications. A cross between firebase and postgres, if you will. In many ways DynamoDB feels like an interesting abstraction: NoSQL built on a MySQL backend. So my S1 when I hear \"full stack\" is a realtime nosql abstraction built on a strictly relational db (with an escape hatch to access the latter)."
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "A DB with bundled, native ORM that speaks wire protocol. Most ORMs I see are built as an afterthought. \"Full-stack\" evokes notions of accessibility from a language API perspective. This point is more of a personal feel and not a practical concern though "
                                    }
                                ]
                            }
                        ],
                        "style": "bullet",
                        "indent": 0,
                        "border": 0
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1686674295.843779",
        "parent_user_id": "U02C3SH9L2J",
        "reactions": [
            {
                "name": "eyes",
                "users": [
                    "U02C3SH9L2J"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "2c7c3436-0aed-4e03-b603-0765e54cb5e8",
        "type": "message",
        "text": "Bonus: I often see a micro-service deployed to translate between the business logic and the DB layers. That service often ends up being \"endpoints on a stick\" with a side of \"validation and authentication\"\n\nA \"full-stack\" db in my mind would alleviate the need for such a service. Whether that means exposing http endpoints and natively translating to the query language or omitting the query sql language layer all together and _exclusively_ bundling the ORM + query language + wire protocol, I'm not sure.\n\nYour question is bringing a few thoughts on accessibility to the surface and I'm brain dumping",
        "user": "U055V4HCHU7",
        "ts": "1686675478.454239",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "WZR1y",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Bonus: I often see a micro-service deployed to translate between the business logic and the DB layers. That service often ends up being \"endpoints on a stick\" with a side of \"validation and authentication\"\n\nA \"full-stack\" db in my mind would alleviate the need for such a service. Whether that means exposing http endpoints and natively translating to the query language or omitting the query sql language layer all together and "
                            },
                            {
                                "type": "text",
                                "text": "exclusively",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " bundling the ORM + query language + wire protocol, I'm not sure.\n\nYour question is bringing a few thoughts on accessibility to the surface and I'm brain dumping"
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "edited": {
            "user": "U055V4HCHU7",
            "ts": "1686675482.000000"
        },
        "thread_ts": "1686674295.843779",
        "parent_user_id": "U02C3SH9L2J"
    },
    {
        "client_msg_id": "face9ce1-b6f6-4d7a-831f-665137cd4e90",
        "type": "message",
        "text": "Very interesting! I like where your heads at.",
        "user": "U02C3SH9L2J",
        "ts": "1686676159.461519",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "5cw/",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Very interesting! I like where your heads at."
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1686674295.843779",
        "parent_user_id": "U02C3SH9L2J"
    },
    {
        "client_msg_id": "1e518dd1-c1ee-4ff9-9e2f-947a35dcd5a7",
        "type": "message",
        "text": "Have you looked into <https://en.wikipedia.org/wiki/UserLand_Software#Frontier|frontier>?",
        "user": "UMQ6LR9NZ",
        "ts": "1686676880.352209",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "UloZ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Have you looked into "
                            },
                            {
                                "type": "link",
                                "url": "https://en.wikipedia.org/wiki/UserLand_Software#Frontier",
                                "text": "frontier"
                            },
                            {
                                "type": "text",
                                "text": "?"
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1686674295.843779",
        "parent_user_id": "U02C3SH9L2J",
        "reactions": [
            {
                "name": "eyes",
                "users": [
                    "U02C3SH9L2J"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "75451524-efa8-43ad-89cb-51f5102c6dd5",
        "type": "message",
        "text": "I also wonder about array programming languages, especially k/q that come bundled with a database, so the distance between language and data and database is minimal",
        "user": "UMQ6LR9NZ",
        "ts": "1686676920.374459",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "V41",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I also wonder about array programming languages, especially k/q that come bundled with a database, so the distance between language and data and database is minimal"
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1686674295.843779",
        "parent_user_id": "U02C3SH9L2J",
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UNCP67JSK"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "b068c20a-215f-4755-b23c-b559e71649a6",
        "type": "message",
        "text": "Mmm never heard of that but that sounds similar to how SmallTalk is part database",
        "user": "U02C3SH9L2J",
        "ts": "1686676948.832759",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "660uP",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Mmm never heard of that but that sounds similar to how SmallTalk is part database"
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "edited": {
            "user": "U02C3SH9L2J",
            "ts": "1686676992.000000"
        },
        "thread_ts": "1686674295.843779",
        "parent_user_id": "U02C3SH9L2J"
    },
    {
        "client_msg_id": "99e5a472-6f5e-49a9-ac02-c4b3bfcee6a9",
        "type": "message",
        "text": "yeah! a similar vibe for sure",
        "user": "UMQ6LR9NZ",
        "ts": "1686680997.378279",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "yNj",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "yeah! a similar vibe for sure"
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1686674295.843779",
        "parent_user_id": "U02C3SH9L2J"
    },
    {
        "client_msg_id": "4cdb79cd-48b9-4831-af40-c9460d4476ba",
        "type": "message",
        "text": "Makes me think of a few things: 1. <https://en.wikipedia.org/wiki/Naked_objects> 2. My own FOAM Framework, which was an actual database in earlier incarnations, but now abstracts away the underlying database <https://www.youtube.com/watch?v=S4LbUv5FsGQ>, 3. I don't have a reference but I once read about someone writing their whole web application in Oracle stored procedures. 4. IBM's OS/400 <https://www.reddit.com/r/hackernews/comments/13603zt/ibm_as400_databases_all_the_way_down_video_2019/> 5. Gemstone, the Smalltalk Database: <https://en.wikipedia.org/wiki/GemStone/S>",
        "user": "U01U19ECZTJ",
        "ts": "1686682584.623259",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "yRf",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Makes me think of a few things: 1. "
                            },
                            {
                                "type": "link",
                                "url": "https://en.wikipedia.org/wiki/Naked_objects"
                            },
                            {
                                "type": "text",
                                "text": " 2. My own FOAM Framework, which was an actual database in earlier incarnations, but now abstracts away the underlying database "
                            },
                            {
                                "type": "link",
                                "url": "https://www.youtube.com/watch?v=S4LbUv5FsGQ"
                            },
                            {
                                "type": "text",
                                "text": ", 3. I don't have a reference but I once read about someone writing their whole web application in Oracle stored procedures. 4. IBM's OS/400 "
                            },
                            {
                                "type": "link",
                                "url": "https://www.reddit.com/r/hackernews/comments/13603zt/ibm_as400_databases_all_the_way_down_video_2019/"
                            },
                            {
                                "type": "text",
                                "text": " 5. Gemstone, the Smalltalk Database: "
                            },
                            {
                                "type": "link",
                                "url": "https://en.wikipedia.org/wiki/GemStone/S"
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "from_url": "https://www.youtube.com/watch?v=S4LbUv5FsGQ",
                "service_icon": "https://a.slack-edge.com/80588/img/unfurl_icons/youtube.png",
                "thumb_url": "https://i.ytimg.com/vi/S4LbUv5FsGQ/hqdefault.jpg",
                "thumb_width": 480,
                "thumb_height": 360,
                "video_html": "<iframe width=\"400\" height=\"300\" src=\"https://www.youtube.com/embed/S4LbUv5FsGQ?feature=oembed&autoplay=1&iv_load_policy=3\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" allowfullscreen title=\"FOAM DRY + WET\"></iframe>",
                "video_html_width": 400,
                "video_html_height": 300,
                "id": 1,
                "original_url": "https://www.youtube.com/watch?v=S4LbUv5FsGQ",
                "fallback": "YouTube Video: FOAM DRY + WET",
                "title": "FOAM DRY + WET",
                "title_link": "https://www.youtube.com/watch?v=S4LbUv5FsGQ",
                "author_name": "FOAM",
                "author_link": "https://www.youtube.com/@foam5949",
                "service_name": "YouTube",
                "service_url": "https://www.youtube.com/"
            },
            {
                "image_url": "https://i.ytimg.com/vi/CDSgJE5mPJM/hqdefault.jpg",
                "image_width": 480,
                "image_height": 360,
                "image_bytes": 14257,
                "from_url": "https://www.reddit.com/r/hackernews/comments/13603zt/ibm_as400_databases_all_the_way_down_video_2019/",
                "service_icon": "http://www.redditstatic.com/desktop2x/img/favicon/apple-icon-57x57.png",
                "id": 2,
                "original_url": "https://www.reddit.com/r/hackernews/comments/13603zt/ibm_as400_databases_all_the_way_down_video_2019/",
                "fallback": "reddit: IBM AS/400: Databases all the way down [video] (2019)",
                "text": "Posted in r/hackernews by u/qznc_bot2 \u2022 3 points and 1 comment",
                "title": "IBM AS/400: Databases all the way down [video] (2019)",
                "title_link": "https://www.reddit.com/r/hackernews/comments/13603zt/ibm_as400_databases_all_the_way_down_video_2019/",
                "service_name": "reddit"
            }
        ],
        "thread_ts": "1686674295.843779",
        "parent_user_id": "U02C3SH9L2J",
        "reactions": [
            {
                "name": "eyes",
                "users": [
                    "U02C3SH9L2J"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "80052989-ddb6-4404-b0c1-96da8eb9cee0",
        "type": "message",
        "text": "Ah yes I've seen the IBM demo! So cool. Havent heard of FOAM before. Has that pattern / your framework unlocked any cool abilities for you? <@U01U19ECZTJ>",
        "user": "U02C3SH9L2J",
        "ts": "1686682772.044959",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "m3W",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Ah yes I've seen the IBM demo! So cool. Havent heard of FOAM before. Has that pattern / your framework unlocked any cool abilities for you? "
                            },
                            {
                                "type": "user",
                                "user_id": "U01U19ECZTJ"
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1686674295.843779",
        "parent_user_id": "U02C3SH9L2J"
    },
    {
        "client_msg_id": "49dfe117-7e20-4883-9cda-4b6b0a13893a",
        "type": "message",
        "text": "We can write a lot less code to get things done much more quickly. Our model files are the equivalent of a database schema, but contain a lot more information. And from them we can generate the actual database schema, but also class definitions in our various target languages (Java, Swift, Javascript), GUI components like Table and Detail Views, and the network marshalling and API code so the various tiers can talk to each other. As well as traditional ORM-like code.",
        "user": "U01U19ECZTJ",
        "ts": "1686684669.696399",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "YQu",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "We can write a lot less code to get things done much more quickly. Our model files are the equivalent of a database schema, but contain a lot more information. And from them we can generate the actual database schema, but also class definitions in our various target languages (Java, Swift, Javascript), GUI components like Table and Detail Views, and the network marshalling and API code so the various tiers can talk to each other. As well as traditional ORM-like code."
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1686674295.843779",
        "parent_user_id": "U02C3SH9L2J",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U02C3SH9L2J"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "928b0ce4-abde-4e25-b541-b56243b0052b",
        "type": "message",
        "text": "Very cool. That sounds similar (at least on the database side) to how I understand <https://github.com/ent/ent|Facebook\u2019s ENT framework >works",
        "user": "U02C3SH9L2J",
        "ts": "1686688837.343509",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "5M1Dw",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Very cool. That sounds similar (at least on the database side) to how I understand "
                            },
                            {
                                "type": "link",
                                "url": "https://github.com/ent/ent",
                                "text": "Facebook\u2019s ENT framework "
                            },
                            {
                                "type": "text",
                                "text": "works"
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1686674295.843779",
        "parent_user_id": "U02C3SH9L2J"
    },
    {
        "client_msg_id": "0a8b982e-b2f6-41b0-9a14-67c81bb170f3",
        "type": "message",
        "text": "Thanks for the ENT link. Yes, it looks similar, as do many other ORM and middleware systems, but the difference is that FOAM is much wider, in that it spans all the way from the back-end of the back-end to the front-end of the front-end, so spans several languages in the process. This also helps to avoid a lot of the glue code generally needed to create a complete system.",
        "user": "U01U19ECZTJ",
        "ts": "1686691680.251239",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "TA+",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Thanks for the ENT link. Yes, it looks similar, as do many other ORM and middleware systems, but the difference is that FOAM is much wider, in that it spans all the way from the back-end of the back-end to the front-end of the front-end, so spans several languages in the process. This also helps to avoid a lot of the glue code generally needed to create a complete system."
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1686674295.843779",
        "parent_user_id": "U02C3SH9L2J",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U02C3SH9L2J"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "1dee441f-b0bb-49c8-80ab-443678a6343a",
        "type": "message",
        "text": "To me it connotes trying to abstract over an unreliable network, and the inevitable frustrating failures resulting therefrom. :') But that's just me being bitter. Better would just be a database that's usable in programs running in any setting, and maybe even makes it easy to synchronize them. Couchdb/pouchdb come pretty close, if you squint.",
        "user": "U016VUZGUUQ",
        "ts": "1686706884.218819",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "s8sVw",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "To me it connotes trying to abstract over an unreliable network, and the inevitable frustrating failures resulting therefrom. :') But that's just me being bitter. Better would just be a database that's usable in programs running in any setting, and maybe even makes it easy to synchronize them. Couchdb/pouchdb come pretty close, if you squint."
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1686674295.843779",
        "parent_user_id": "U02C3SH9L2J",
        "reactions": [
            {
                "name": "heavy_plus_sign",
                "users": [
                    "U02C3SH9L2J"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "27d019de-3ac9-476d-b274-0b21ce5f3c04",
        "type": "message",
        "text": "The problem with giving raw database access to clients is that you then have to duplicate business logic, which is a lot of effort and error prone, and the database's built-in authorization isn't usually sufficient, so you would also like that to be somewhere trusted and secure, not on the clients.",
        "user": "U01U19ECZTJ",
        "ts": "1686712288.155969",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "HVv",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The problem with giving raw database access to clients is that you then have to duplicate business logic, which is a lot of effort and error prone, and the database's built-in authorization isn't usually sufficient, so you would also like that to be somewhere trusted and secure, not on the clients."
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1686674295.843779",
        "parent_user_id": "U02C3SH9L2J"
    },
    {
        "client_msg_id": "270F4833-1EB7-4AC7-A945-DEC9E25102C0",
        "type": "message",
        "text": "A *complete-stack* db _is_ the logic, ui, action/history, and networking engine just as much as it is the data persistence one. Declarative/functional/constraint based, allowing for streamlined authorization. Platform agnostic, through exporters from itself to different environments, while retaining functionally and adding native interoperability. If a field, eg. profile_picture is added, literally through less keypresses than letters in that name; (auto suggestions, inc. concept type with acl, UI, performance assumptions, and more context for later suggestions/auto coding); the whole system reflects the change. Eg. on user posts, their profile, editable with upload + crop functionality... No need to update model/migration/validation(backend+frontend+orm)/authorization/endpoints/frontend api client/forms/multiple ui components/spec/documentation/... \"It just works\", still with the ability to change every detail down to the HDL architecture for the accelerator co-processor that will perform the upscaling if the uploaded picture is too lowres, used when exporting the app straight to custom silicon instead of, let's say as a p2p wasm webgpu webxr spacial app with a mesh of persistence servers that also syncs with the iPhone/Android/macos/linux/chatbot(whatsapp etc) versions deployed in the same click...",
        "user": "UNCP67JSK",
        "ts": "1686721373.206519",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "tvt",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "A "
                            },
                            {
                                "type": "text",
                                "text": "complete-stack",
                                "style": {
                                    "bold": true,
                                    "italic": false,
                                    "strike": false
                                }
                            },
                            {
                                "type": "text",
                                "text": " db "
                            },
                            {
                                "type": "text",
                                "text": "is",
                                "style": {
                                    "bold": false,
                                    "italic": true,
                                    "strike": false
                                }
                            },
                            {
                                "type": "text",
                                "text": " the logic, ui, action/history, and networking engine just as much as it is the data persistence one. Declarative/functional/constraint based, allowing for streamlined authorization. Platform agnostic, through exporters from itself to different environments, while retaining functionally and adding native interoperability. If a field, eg. profile_picture is added, literally through less keypresses than letters in that name; (auto suggestions, inc. concept type with acl, UI, performance assumptions, and more context for later suggestions/auto coding); the whole system reflects the change. Eg. on user posts, their profile, editable with upload + crop functionality... No need to update model/migration/validation(backend+frontend+orm)/authorization/endpoints/frontend api client/forms/multiple ui components/spec/documentation/... \"It just works\", still with the ability to change every detail down to the HDL architecture for the accelerator co-processor that will perform the upscaling if the uploaded picture is too lowres, used when exporting the app straight to custom silicon instead of, let's say as a p2p wasm webgpu webxr spacial app with a mesh of persistence servers that also syncs with the iPhone/Android/macos/linux/chatbot(whatsapp etc) versions deployed in the same click..."
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1686674295.843779",
        "parent_user_id": "U02C3SH9L2J",
        "reactions": [
            {
                "name": "eyes",
                "users": [
                    "U02C3SH9L2J"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "6cace292-8542-4da2-a597-116a1e2a2750",
        "type": "message",
        "text": "<@U01U19ECZTJ> not sure if you were responding to me, but I do strongly agree.. for the most part. The only exception is that with Couch, for my app, I'm pretty comfortable giving each end user their own database and letting them face the consequences of mucking it up. If they interacted with each other, it would get a lot more complicated real quick (my membership, billing, etc are in the standard relational setup).",
        "user": "U016VUZGUUQ",
        "ts": "1686760450.268779",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "MOqXD",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U01U19ECZTJ"
                            },
                            {
                                "type": "text",
                                "text": " not sure if you were responding to me, but I do strongly agree.. for the most part. The only exception is that with Couch, for my app, I'm pretty comfortable giving each end user their own database and letting them face the consequences of mucking it up. If they interacted with each other, it would get a lot more complicated real quick (my membership, billing, etc are in the standard relational setup)."
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1686674295.843779",
        "parent_user_id": "U02C3SH9L2J"
    },
    {
        "client_msg_id": "035829fc-ea18-4b3c-aa26-ea6c34a902ef",
        "type": "message",
        "text": "<@U016VUZGUUQ> I\u2019ve always loved the idea of giving each org/user their own database instance. Doesn\u2019t work for all apps but when you can have that separation it\u2019s awesome. Schema migrations can be tricker if you literally have different instances of databases",
        "user": "U02C3SH9L2J",
        "ts": "1686760558.107439",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "8XRf",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U016VUZGUUQ"
                            },
                            {
                                "type": "text",
                                "text": " I\u2019ve always loved the idea of giving each org/user their own database instance. Doesn\u2019t work for all apps but when you can have that separation it\u2019s awesome. Schema migrations can be tricker if you literally have different instances of databases"
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1686674295.843779",
        "parent_user_id": "U02C3SH9L2J"
    },
    {
        "client_msg_id": "9a768e76-2f65-4204-8754-0f215df7e7d7",
        "type": "message",
        "text": "&gt; A *complete-stack* db _*is*_ the logic, ui, action/history, and networking engine just as much as it is the data persistence one.\nI completely agree here. This is maybe what I was getting out with \"a full-stack db in my mind would alleviate the need for such a service [db layer logic translation]\".  Databases tend to be at the center of our systems and, for the most part, services are organized according to their data access patterns. It seems absolutely reasonable to me that a \"full stack\" DB would handle and centralize core business logic without the need for each consuming service to duplicate logic.",
        "user": "U055V4HCHU7",
        "ts": "1686761358.165759",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "SHBpL",
                "elements": [
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "A "
                            },
                            {
                                "type": "text",
                                "text": "complete-stack",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " db "
                            },
                            {
                                "type": "text",
                                "text": "is",
                                "style": {
                                    "bold": true,
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " the logic, ui, action/history, and networking engine just as much as it is the data persistence one."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nI completely agree here. This is maybe what I was getting out with \"a full-stack db in my mind would alleviate the need for such a service [db layer logic translation]\".  Databases tend to be at the center of our systems and, for the most part, services are organized according to their data access patterns. It seems absolutely reasonable to me that a \"full stack\" DB would handle and centralize core business logic without the need for each consuming service to duplicate logic."
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1686674295.843779",
        "parent_user_id": "U02C3SH9L2J",
        "reactions": [
            {
                "name": "bulb",
                "users": [
                    "UMQ6LR9NZ",
                    "UNCP67JSK"
                ],
                "count": 2
            }
        ]
    },
    {
        "client_msg_id": "b8f84d44-75f4-4bbb-95d5-cc11181832a0",
        "type": "message",
        "text": "&gt; I\u2019ve always loved the idea of giving each org/user their own database instance.\n<@U02C3SH9L2J> , not a loft thought, but this reminds me of <https://usebasic.xyz/|basic.xyz>. I wonder what their team would have to say about this conversation :thinking_face:",
        "user": "U055V4HCHU7",
        "ts": "1686762381.491919",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "0M3Fb",
                "elements": [
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I\u2019ve always loved the idea of giving each org/user their own database instance."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "user",
                                "user_id": "U02C3SH9L2J"
                            },
                            {
                                "type": "text",
                                "text": " , not a loft thought, but this reminds me of "
                            },
                            {
                                "type": "link",
                                "url": "https://usebasic.xyz/",
                                "text": "basic.xyz",
                                "unsafe": true
                            },
                            {
                                "type": "text",
                                "text": ". I wonder what their team would have to say about this conversation "
                            },
                            {
                                "type": "emoji",
                                "name": "thinking_face",
                                "unicode": "1f914"
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "from_url": "https://usebasic.xyz/",
                "id": 1,
                "original_url": "https://usebasic.xyz/",
                "fallback": "Basic Database",
                "text": "The serverless database for user owned data",
                "title": "Basic Database",
                "title_link": "https://usebasic.xyz/",
                "service_name": "usebasic.xyz"
            }
        ],
        "thread_ts": "1686674295.843779",
        "parent_user_id": "U02C3SH9L2J",
        "reactions": [
            {
                "name": "eyes",
                "users": [
                    "U02C3SH9L2J"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "6a9b0b81-bf39-4f4f-a322-db70f46098f8",
        "type": "message",
        "text": "We created issue database and gmail clients which stored most of the data localling in the browser in indexeddb and then just behaved as though that were the real database. Two-way updates were synchronized between the client and server when the client was online. This had two nice advantages: it allowed for simple offline support, and it offered excellent performance because of data locality. Here's an example of the kind of client-side performance we had: <https://www.youtube.com/watch?v=y9i4oW9dHHw>",
        "user": "U01U19ECZTJ",
        "ts": "1686764780.764929",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "oEu",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "We created issue database and gmail clients which stored most of the data localling in the browser in indexeddb and then just behaved as though that were the real database. Two-way updates were synchronized between the client and server when the client was online. This had two nice advantages: it allowed for simple offline support, and it offered excellent performance because of data locality. Here's an example of the kind of client-side performance we had: "
                            },
                            {
                                "type": "link",
                                "url": "https://www.youtube.com/watch?v=y9i4oW9dHHw"
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "from_url": "https://www.youtube.com/watch?v=y9i4oW9dHHw",
                "service_icon": "https://a.slack-edge.com/80588/img/unfurl_icons/youtube.png",
                "thumb_url": "https://i.ytimg.com/vi/y9i4oW9dHHw/hqdefault.jpg",
                "thumb_width": 480,
                "thumb_height": 360,
                "video_html": "<iframe width=\"400\" height=\"300\" src=\"https://www.youtube.com/embed/y9i4oW9dHHw?feature=oembed&autoplay=1&iv_load_policy=3\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" allowfullscreen title=\"Olympic Medals Demo\"></iframe>",
                "video_html_width": 400,
                "video_html_height": 300,
                "id": 1,
                "original_url": "https://www.youtube.com/watch?v=y9i4oW9dHHw",
                "fallback": "YouTube Video: Olympic Medals Demo",
                "title": "Olympic Medals Demo",
                "title_link": "https://www.youtube.com/watch?v=y9i4oW9dHHw",
                "author_name": "FOAM",
                "author_link": "https://www.youtube.com/@foam5949",
                "service_name": "YouTube",
                "service_url": "https://www.youtube.com/"
            }
        ],
        "thread_ts": "1686674295.843779",
        "parent_user_id": "U02C3SH9L2J",
        "reactions": [
            {
                "name": "heavy_plus_sign",
                "users": [
                    "U016VUZGUUQ",
                    "U02C3SH9L2J"
                ],
                "count": 2
            },
            {
                "name": "bulb",
                "users": [
                    "U02C3SH9L2J"
                ],
                "count": 1
            },
            {
                "name": "eyes",
                "users": [
                    "UMQ6LR9NZ"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "59cd8624-597f-4d4a-b093-c3d6ce78a920",
        "type": "message",
        "text": "<@U01U19ECZTJ> was this a production system or a prototype?",
        "user": "UMQ6LR9NZ",
        "ts": "1686764853.904839",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "weIDA",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U01U19ECZTJ"
                            },
                            {
                                "type": "text",
                                "text": " was this a production system or a prototype?"
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1686674295.843779",
        "parent_user_id": "U02C3SH9L2J"
    },
    {
        "client_msg_id": "90f9994c-39d3-44eb-8e96-aea89194000c",
        "type": "message",
        "text": "I am really interested in this sort of architecture, but when I\u2019ve explored deploying it to production, there was a significant edge case that ended up eating up a lot of lines of code to handle scenarios where users had limited device memory/couldn\u2019t hold everything locally for some reason",
        "user": "UMQ6LR9NZ",
        "ts": "1686764907.460449",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "2AXZ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I am really interested in this sort of architecture, but when I\u2019ve explored deploying it to production, there was a significant edge case that ended up eating up a lot of lines of code to handle scenarios where users had limited device memory/couldn\u2019t hold everything locally for some reason"
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1686674295.843779",
        "parent_user_id": "U02C3SH9L2J"
    },
    {
        "client_msg_id": "3acd5bf0-6485-4cec-b370-18a629e63921",
        "type": "message",
        "text": "the naive approach I tried was just to fail to a total REST api, sort of normal architecture, but I wanted to find a way to do it incrementally.",
        "user": "UMQ6LR9NZ",
        "ts": "1686764936.449349",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "d2C",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "the naive approach I tried was just to fail to a total REST api, sort of normal architecture, but I wanted to find a way to do it incrementally."
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1686674295.843779",
        "parent_user_id": "U02C3SH9L2J"
    },
    {
        "client_msg_id": "d500a061-8cab-4a59-a817-49ca827cdd32",
        "type": "message",
        "text": "The issue trackers (there were two) were production and the GMail client was prototype. We don't need to hold everything. If the user does a query, we return the answer, then if online issue the same query to the server and update the client DB, this would cause an MVC observer event and force the GUI to refresh if there was more data. Then you could have a janitor to purge local data not viewed for some time.",
        "user": "U01U19ECZTJ",
        "ts": "1686765351.672059",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "8G/4",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The issue trackers (there were two) were production and the GMail client was prototype. We don't need to hold everything. If the user does a query, we return the answer, then if online issue the same query to the server and update the client DB, this would cause an MVC observer event and force the GUI to refresh if there was more data. Then you could have a janitor to purge local data not viewed for some time."
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1686674295.843779",
        "parent_user_id": "U02C3SH9L2J",
        "reactions": [
            {
                "name": "cake",
                "users": [
                    "UMQ6LR9NZ"
                ],
                "count": 1
            },
            {
                "name": "pixel-chickadee",
                "users": [
                    "UMQ6LR9NZ"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "dc35b687-efd6-487c-bbdd-5e87219c10f7",
        "type": "message",
        "text": "They're all open-source if you would like to see the code.",
        "user": "U01U19ECZTJ",
        "ts": "1686765403.089809",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "d0Zq",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "They're all open-source if you would like to see the code."
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1686674295.843779",
        "parent_user_id": "U02C3SH9L2J",
        "reactions": [
            {
                "name": "pray",
                "users": [
                    "UMQ6LR9NZ"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "ad1a3ee2-aa93-4186-9f8d-dde4a23f5841",
        "type": "message",
        "text": "I\u2019d love that!",
        "user": "UMQ6LR9NZ",
        "ts": "1686765418.939609",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ngkFi",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I\u2019d love that!"
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1686674295.843779",
        "parent_user_id": "U02C3SH9L2J"
    },
    {
        "client_msg_id": "fdcb3986-42bd-44ea-9c76-25a54b054812",
        "type": "message",
        "text": "I have a meeting in 3 mins, but will post links later.",
        "user": "U01U19ECZTJ",
        "ts": "1686765442.352299",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "x72l",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I have a meeting in 3 mins, but will post links later."
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1686674295.843779",
        "parent_user_id": "U02C3SH9L2J",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UMQ6LR9NZ"
                ],
                "count": 1
            }
        ]
    },
    {
        "type": "message",
        "text": "Here's a screenshot of the GMail client compared to the Android version:",
        "files": [
            {
                "id": "F05CC953RLN",
                "created": 1686765546,
                "timestamp": 1686765546,
                "name": "image.png",
                "title": "image.png",
                "mimetype": "image/png",
                "filetype": "png",
                "pretty_type": "PNG",
                "user": "U01U19ECZTJ",
                "user_team": "T5TCAFTA9",
                "editable": false,
                "size": 280874,
                "mode": "hosted",
                "is_external": false,
                "external_type": "",
                "is_public": true,
                "public_url_shared": false,
                "display_as_bot": false,
                "username": "",
                "url_private": "https://files.slack.com/files-pri/T5TCAFTA9-F05CC953RLN/image.png",
                "url_private_download": "https://files.slack.com/files-pri/T5TCAFTA9-F05CC953RLN/download/image.png",
                "media_display_type": "unknown",
                "thumb_64": "https://files.slack.com/files-tmb/T5TCAFTA9-F05CC953RLN-cb45c15e0c/image_64.png",
                "thumb_80": "https://files.slack.com/files-tmb/T5TCAFTA9-F05CC953RLN-cb45c15e0c/image_80.png",
                "thumb_360": "https://files.slack.com/files-tmb/T5TCAFTA9-F05CC953RLN-cb45c15e0c/image_360.png",
                "thumb_360_w": 360,
                "thumb_360_h": 234,
                "thumb_480": "https://files.slack.com/files-tmb/T5TCAFTA9-F05CC953RLN-cb45c15e0c/image_480.png",
                "thumb_480_w": 480,
                "thumb_480_h": 312,
                "thumb_160": "https://files.slack.com/files-tmb/T5TCAFTA9-F05CC953RLN-cb45c15e0c/image_160.png",
                "thumb_720": "https://files.slack.com/files-tmb/T5TCAFTA9-F05CC953RLN-cb45c15e0c/image_720.png",
                "thumb_720_w": 720,
                "thumb_720_h": 468,
                "thumb_800": "https://files.slack.com/files-tmb/T5TCAFTA9-F05CC953RLN-cb45c15e0c/image_800.png",
                "thumb_800_w": 800,
                "thumb_800_h": 520,
                "thumb_960": "https://files.slack.com/files-tmb/T5TCAFTA9-F05CC953RLN-cb45c15e0c/image_960.png",
                "thumb_960_w": 960,
                "thumb_960_h": 624,
                "thumb_1024": "https://files.slack.com/files-tmb/T5TCAFTA9-F05CC953RLN-cb45c15e0c/image_1024.png",
                "thumb_1024_w": 1024,
                "thumb_1024_h": 666,
                "original_w": 1218,
                "original_h": 792,
                "thumb_tiny": "AwAfADDQk3bG2H5u1Qf6V/eT8qsnoaQf55oGmNi8zafNIJ7Yps4lyvlMB65Gal7U1+o5/WgLlcC7/vr+VWlzgZ645poP0/On+lANiH7ppP8APSlxSbW9R+VAgVtyngjtyKSRwpAJAz7gU4A4xTJIVkI3qrY6bhnFADTKgBJcf99A1L1xiofssX/PKP8A75FTKMADjj0oA//Z",
                "permalink": "https://futureofcoding.slack.com/files/U01U19ECZTJ/F05CC953RLN/image.png",
                "permalink_public": "https://slack-files.com/T5TCAFTA9-F05CC953RLN-0e0a7062ca",
                "is_starred": false,
                "has_rich_preview": false,
                "file_access": "visible"
            }
        ],
        "upload": false,
        "user": "U01U19ECZTJ",
        "display_as_bot": false,
        "ts": "1686765562.104249",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "xFM56",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Here's a screenshot of the GMail client compared to the Android version:"
                            }
                        ]
                    }
                ]
            }
        ],
        "client_msg_id": "df461f36-3fb9-4b16-b818-74502d33589b",
        "thread_ts": "1686674295.843779",
        "parent_user_id": "U02C3SH9L2J"
    },
    {
        "client_msg_id": "45190b71-f247-435a-9b43-7da32c6354da",
        "type": "message",
        "text": "Source is here: <https://github.com/foam-framework/foam/tree/2966cde661ccadbb8b1548fede78f6d67cc53ed5/js/com/google/mail>",
        "user": "U01U19ECZTJ",
        "ts": "1686770062.020779",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "4nlg1",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Source is here: "
                            },
                            {
                                "type": "link",
                                "url": "https://github.com/foam-framework/foam/tree/2966cde661ccadbb8b1548fede78f6d67cc53ed5/js/com/google/mail"
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1686674295.843779",
        "parent_user_id": "U02C3SH9L2J",
        "reactions": [
            {
                "name": "clap",
                "users": [
                    "UMQ6LR9NZ"
                ],
                "count": 1
            },
            {
                "name": "pray",
                "users": [
                    "UMQ6LR9NZ"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "1778f2a6-b427-4da5-8db4-d4cd679e2b6e",
        "type": "message",
        "text": "Here's one of the issue trackers (the other one is Google internal):",
        "user": "U01U19ECZTJ",
        "ts": "1686770132.620029",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Cz2",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Here's one of the issue trackers (the other one is Google internal):"
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1686674295.843779",
        "parent_user_id": "U02C3SH9L2J"
    },
    {
        "type": "message",
        "text": "",
        "files": [
            {
                "id": "F05CMRS6ECU",
                "created": 1686770133,
                "timestamp": 1686770133,
                "name": "image.png",
                "title": "image.png",
                "mimetype": "image/png",
                "filetype": "png",
                "pretty_type": "PNG",
                "user": "U01U19ECZTJ",
                "user_team": "T5TCAFTA9",
                "editable": false,
                "size": 175832,
                "mode": "hosted",
                "is_external": false,
                "external_type": "",
                "is_public": true,
                "public_url_shared": false,
                "display_as_bot": false,
                "username": "",
                "url_private": "https://files.slack.com/files-pri/T5TCAFTA9-F05CMRS6ECU/image.png",
                "url_private_download": "https://files.slack.com/files-pri/T5TCAFTA9-F05CMRS6ECU/download/image.png",
                "media_display_type": "unknown",
                "thumb_64": "https://files.slack.com/files-tmb/T5TCAFTA9-F05CMRS6ECU-2ab10bd585/image_64.png",
                "thumb_80": "https://files.slack.com/files-tmb/T5TCAFTA9-F05CMRS6ECU-2ab10bd585/image_80.png",
                "thumb_360": "https://files.slack.com/files-tmb/T5TCAFTA9-F05CMRS6ECU-2ab10bd585/image_360.png",
                "thumb_360_w": 360,
                "thumb_360_h": 280,
                "thumb_480": "https://files.slack.com/files-tmb/T5TCAFTA9-F05CMRS6ECU-2ab10bd585/image_480.png",
                "thumb_480_w": 480,
                "thumb_480_h": 373,
                "thumb_160": "https://files.slack.com/files-tmb/T5TCAFTA9-F05CMRS6ECU-2ab10bd585/image_160.png",
                "thumb_720": "https://files.slack.com/files-tmb/T5TCAFTA9-F05CMRS6ECU-2ab10bd585/image_720.png",
                "thumb_720_w": 720,
                "thumb_720_h": 559,
                "thumb_800": "https://files.slack.com/files-tmb/T5TCAFTA9-F05CMRS6ECU-2ab10bd585/image_800.png",
                "thumb_800_w": 800,
                "thumb_800_h": 622,
                "original_w": 816,
                "original_h": 634,
                "thumb_tiny": "AwAlADDQJO48ilB9aD1NCg5O7B9KADcKPx/WmYk/2ev6U5cjO4D2xRcbQvHqaBjPBqIg7STJxmnoMSN82fai4WHHqaF4Jy2c0HqajJj6570CsO2nP3z1pcqi4LcH1pN0ftyacAp6AUAMZtnCqNtPXBwwHJFBUMMGlAAwBQAEe9G0egpaKAEwPSk2LnOMH2p1FADdgwBluPel2jdu70tFAH//2Q==",
                "permalink": "https://futureofcoding.slack.com/files/U01U19ECZTJ/F05CMRS6ECU/image.png",
                "permalink_public": "https://slack-files.com/T5TCAFTA9-F05CMRS6ECU-9b661467e1",
                "is_starred": false,
                "has_rich_preview": false,
                "file_access": "visible"
            }
        ],
        "upload": false,
        "user": "U01U19ECZTJ",
        "display_as_bot": false,
        "ts": "1686770136.042249",
        "client_msg_id": "bd840026-4fbe-4f64-aeec-ea0c4cf508e1",
        "thread_ts": "1686674295.843779",
        "parent_user_id": "U02C3SH9L2J"
    },
    {
        "client_msg_id": "64bed75d-c4c1-4ea4-83e0-49d70d9010bc",
        "type": "message",
        "text": "Source: <https://github.com/foam-framework/foam/tree/2966cde661ccadbb8b1548fede78f6d67cc53ed5/js/foam/apps/quickbug>",
        "user": "U01U19ECZTJ",
        "ts": "1686770172.330459",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "xrUpE",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Source: "
                            },
                            {
                                "type": "link",
                                "url": "https://github.com/foam-framework/foam/tree/2966cde661ccadbb8b1548fede78f6d67cc53ed5/js/foam/apps/quickbug"
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1686674295.843779",
        "parent_user_id": "U02C3SH9L2J"
    },
    {
        "client_msg_id": "856a64b9-7376-4d1e-974a-fcb82948f4cc",
        "type": "message",
        "text": "Here's the SyncManager: <https://github.com/foam-framework/foam/blob/2966cde661ccadbb8b1548fede78f6d67cc53ed5/js/foam/apps/quickbug/dao/SyncManager.js>",
        "user": "U01U19ECZTJ",
        "ts": "1686770198.161859",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "2Uj+",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Here's the SyncManager: "
                            },
                            {
                                "type": "link",
                                "url": "https://github.com/foam-framework/foam/blob/2966cde661ccadbb8b1548fede78f6d67cc53ed5/js/foam/apps/quickbug/dao/SyncManager.js"
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1686674295.843779",
        "parent_user_id": "U02C3SH9L2J"
    },
    {
        "client_msg_id": "22559a0a-9a5c-48cd-a038-3d2c6ed8bbca",
        "type": "message",
        "text": "<https://www.edgedb.com/docs/edgeql/index|EdgeDB> is also aiming in this direction:",
        "user": "U03DNFDFYDA",
        "ts": "1686843650.640889",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ioD",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "link",
                                "url": "https://www.edgedb.com/docs/edgeql/index",
                                "text": "EdgeDB"
                            },
                            {
                                "type": "text",
                                "text": " is also aiming in this direction:"
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "image_url": "https://www.edgedb.com/assets/docs_cards/edgeql.png",
                "image_width": 2000,
                "image_height": 1000,
                "image_bytes": 304389,
                "from_url": "https://www.edgedb.com/docs/edgeql/index",
                "service_icon": "https://www.edgedb.com/apple-touch-icon.png",
                "id": 1,
                "original_url": "https://www.edgedb.com/docs/edgeql/index",
                "fallback": "EdgeQL | EdgeDB Docs",
                "title": "EdgeQL | EdgeDB Docs",
                "title_link": "https://www.edgedb.com/docs/edgeql/index",
                "service_name": "edgedb.com"
            }
        ],
        "thread_ts": "1686674295.843779",
        "parent_user_id": "U02C3SH9L2J"
    },
    {
        "client_msg_id": "0cef0397-1b3b-41c4-ac0e-01afc5ff7082",
        "type": "message",
        "text": "Why is it called \"Edge\" DB? From the name I would have thought that it would run in the browser or on mobile clients, but it looks like a server DB based on Postgres.",
        "user": "U01U19ECZTJ",
        "ts": "1686846661.220999",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "1eb",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Why is it called \"Edge\" DB? From the name I would have thought that it would run in the browser or on mobile clients, but it looks like a server DB based on Postgres."
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1686674295.843779",
        "parent_user_id": "U02C3SH9L2J"
    },
    {
        "client_msg_id": "27019609-e961-4542-b21d-bbaaac52b544",
        "type": "message",
        "text": "The name feels like a misnomer. It's a compelling offering but the docs don't make any suggestion to running \"close to the client\"; cdn, on-device, or otherwise. Could be wrong though!",
        "user": "U055V4HCHU7",
        "ts": "1686847826.755439",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "RNn",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The name feels like a misnomer. It's a compelling offering but the docs don't make any suggestion to running \"close to the client\"; cdn, on-device, or otherwise. Could be wrong though!"
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1686674295.843779",
        "parent_user_id": "U02C3SH9L2J"
    },
    {
        "client_msg_id": "039a7433-2399-44e7-9844-c6d602aa6501",
        "type": "message",
        "text": "Yeah if I had to guess I bet they pivoted but kept the name. EdgeDB\u2019s query language is super cool but I don\u2019t think they\u2019re doing anything that breaks the Postgres mold regarding deployment.",
        "user": "U02C3SH9L2J",
        "ts": "1686847928.524809",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "AcE1",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yeah if I had to guess I bet they pivoted but kept the name. EdgeDB\u2019s query language is super cool but I don\u2019t think they\u2019re doing anything that breaks the Postgres mold regarding deployment."
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1686674295.843779",
        "parent_user_id": "U02C3SH9L2J",
        "reactions": [
            {
                "name": "amiga-tick",
                "users": [
                    "U055V4HCHU7"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "98d4f75c-a5ef-42fa-9ce4-92a35d1733e0",
        "type": "message",
        "text": "Apparently it doesn't have to do with the edge of the network but the edges between objects (ie. relationships) with something they call \"materialized edges\". (From what I read on reddit, but I didn't see that on their website.)",
        "user": "U01U19ECZTJ",
        "ts": "1686853633.259849",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "4kP",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Apparently it doesn't have to do with the edge of the network but the edges between objects (ie. relationships) with something they call \"materialized edges\". (From what I read on reddit, but I didn't see that on their website.)"
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1686674295.843779",
        "parent_user_id": "U02C3SH9L2J"
    },
    {
        "client_msg_id": "c38cb7fa-3010-4b4d-a4cd-47f80aaec5c5",
        "type": "message",
        "text": "I still Want To Believe\u2122 in something like OODBs but I don\u2019t think anyone\u2019s figured out how to scale them",
        "user": "U03DNFDFYDA",
        "ts": "1686931012.099459",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ioQu",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I still Want To Believe\u2122 in something like OODBs but I don\u2019t think anyone\u2019s figured out how to scale them"
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1686674295.843779",
        "parent_user_id": "U02C3SH9L2J"
    },
    {
        "client_msg_id": "fcc9e27f-36be-42b9-9ac5-f314a70d286f",
        "type": "message",
        "text": "What's your definition of an OODB? An object-graph, or something like an Object-Relationshional database where the individual tables contain objects instead of tuples and the relationships between tables are themselves represented in the objects rather than externally through implicit SQL joins? Or something else? And at what scale are you consider? I worked on this project <https://www.pipelinepub.com/competitive-communications-market/breaking-benchmarks-with-microsoft-and-redknee.html/4> which scaled well using the Object-Relational model over-top of other data-stores. The Microsoft SQL Server part of that story is a bit fraudulent since the performance critical components weren't stored there, just historic records.",
        "user": "U01U19ECZTJ",
        "ts": "1686934783.370039",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "qZ+",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "What's your definition of an OODB? An object-graph, or something like an Object-Relationshional database where the individual tables contain objects instead of tuples and the relationships between tables are themselves represented in the objects rather than externally through implicit SQL joins? Or something else? And at what scale are you consider? I worked on this project "
                            },
                            {
                                "type": "link",
                                "url": "https://www.pipelinepub.com/competitive-communications-market/breaking-benchmarks-with-microsoft-and-redknee.html/4"
                            },
                            {
                                "type": "text",
                                "text": " which scaled well using the Object-Relational model over-top of other data-stores. The Microsoft SQL Server part of that story is a bit fraudulent since the performance critical components weren't stored there, just historic records."
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "from_url": "https://www.pipelinepub.com/competitive-communications-market/breaking-benchmarks-with-microsoft-and-redknee.html/4",
                "id": 1,
                "original_url": "https://www.pipelinepub.com/competitive-communications-market/breaking-benchmarks-with-microsoft-and-redknee.html/4",
                "fallback": "Pipeline Magazine | OSS and BSS News and Info | Microsoft and Redknee Break Benchmark",
                "text": "Pipeline is the world\u00e2",
                "title": "Pipeline Magazine | OSS and BSS News and Info | Microsoft and Redknee Break Benchmark",
                "title_link": "https://www.pipelinepub.com/competitive-communications-market/breaking-benchmarks-with-microsoft-and-redknee.html/4",
                "service_name": "pipelinepub.com"
            }
        ],
        "thread_ts": "1686674295.843779",
        "parent_user_id": "U02C3SH9L2J"
    },
    {
        "client_msg_id": "53dbd8b0-5ad7-4746-9e85-af1ae44ffc98",
        "type": "message",
        "text": "hmm.. I care most about having the domain model represented well, being able to use both uni- and bi-directional relationships as pointers, not having to worry about FKs\u2026 I was going to say I don\u2019t really care about inheritance, but it always comes up when I\u2019m struggling with ORM too.\n\nOne reason I\u2019m not particularly sanguine about OODBs so far is I find I always need to be persnickety about the representation on the RDBMS side",
        "user": "U03DNFDFYDA",
        "ts": "1686941676.568179",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "9eE",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "hmm.. I care most about having the domain model represented well, being able to use both uni- and bi-directional relationships as pointers, not having to worry about FKs\u2026 I was going to say I don\u2019t really care about inheritance, but it always comes up when I\u2019m struggling with ORM too.\n\nOne reason I\u2019m not particularly sanguine about OODBs so far is I find I always need to be persnickety about the representation on the RDBMS side"
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1686674295.843779",
        "parent_user_id": "U02C3SH9L2J"
    },
    {
        "client_msg_id": "e8d30377-2cfe-45a0-b415-523435276f88",
        "type": "message",
        "text": "It\u2019d be nice to have an ORM that was more like a constraint solver I guess, where I could describe properties of both the OO and RDBMS sides, and have it find a match",
        "user": "U03DNFDFYDA",
        "ts": "1686941719.320249",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "5nI0Q",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "It\u2019d be nice to have an ORM that was more like a constraint solver I guess, where I could describe properties of both the OO and RDBMS sides, and have it find a match"
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1686674295.843779",
        "parent_user_id": "U02C3SH9L2J"
    }
]