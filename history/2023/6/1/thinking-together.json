[
    {
        "client_msg_id": "4adca6fc-1837-4a43-89d6-2404d4b9a556",
        "type": "message",
        "text": "I think we need many different little languages and a substrate \u201clanguage\u201d (kernel) to bolt them all together.\n\nNote that, in electronics, there is/was something called \u201cdesign rules\u201d which is something more-than-type. In web-site design, one uses \u201cinput validation\u201d which is like type-checking but on a very per-project basis. It would be nice to be able to bolt design-rule checkers together using a palette of existing components. Again, it seems that one should want a palette of components to help build up design rule checkers and completely different palette of components to build up actions. I would expect to use different \u201csyntaxes\u201d for each concern and would expect to use IDE layers to deal with each kind of issue separately then let the IDE automagically stitch them together. This is just another way of saying \u201cI would like to use a different language (SCN in my words) to deal with each kind of issue\u201d. Would I use text-based SCNs exclusively? No. But, for text-based SCNs, I would use Ohm-JS and for diagrammatic SCNs I would start by using <http://draw.io|draw.io>. Both kinds of syntaxes are \u201ceasy\u201d now, so there is no reason not to build project-specific SCNs. We have been indoctrinated to believe that \u201cone language to rule them all\u201d GPLs is the way to go. I don\u2019t agree.\n\nduplicated in <https://publish.obsidian.md/programmingsimplicity/2023-05-31-Bolting+Little+Languages+Together>",
        "user": "UGWUJUZHT",
        "ts": "1685573969.099099",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "xOiE=",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I think we need many different little languages and a substrate \u201clanguage\u201d (kernel) to bolt them all together.\n\nNote that, in electronics, there is/was something called \u201cdesign rules\u201d which is something more-than-type. In web-site design, one uses \u201cinput validation\u201d which is like type-checking but on a very per-project basis. It would be nice to be able to bolt design-rule checkers together using a palette of existing components. Again, it seems that one should want a palette of components to help build up design rule checkers and completely different palette of components to build up actions. I would expect to use different \u201csyntaxes\u201d for each concern and would expect to use IDE layers to deal with each kind of issue separately then let the IDE automagically stitch them together. This is just another way of saying \u201cI would like to use a different language (SCN in my words) to deal with each kind of issue\u201d. Would I use text-based SCNs exclusively? No. But, for text-based SCNs, I would use Ohm-JS and for diagrammatic SCNs I would start by using "
                            },
                            {
                                "type": "link",
                                "url": "http://draw.io",
                                "text": "draw.io"
                            },
                            {
                                "type": "text",
                                "text": ". Both kinds of syntaxes are \u201ceasy\u201d now, so there is no reason not to build project-specific SCNs. We have been indoctrinated to believe that \u201cone language to rule them all\u201d GPLs is the way to go. I don\u2019t agree.\n\nduplicated in "
                            },
                            {
                                "type": "link",
                                "url": "https://publish.obsidian.md/programmingsimplicity/2023-05-31-Bolting+Little+Languages+Together"
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1685573969.099099",
        "reply_count": 5,
        "reply_users_count": 4,
        "latest_reply": "1685793434.770809",
        "reply_users": [
            "U0378MDUG1Y",
            "UJBAJNFLK",
            "UGWUJUZHT",
            "U04E5QAD6DD"
        ],
        "is_locked": false,
        "subscribed": false,
        "reactions": [
            {
                "name": "fire",
                "users": [
                    "U04KZ8A9WCT"
                ],
                "count": 1
            },
            {
                "name": "100",
                "users": [
                    "U04KZ8A9WCT"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "D360F538-B633-485D-88BF-4E3EF6E5E41D",
        "type": "message",
        "text": "I really want to see a resurgence of little languages too! I was wondering what you think this \u201csubstrate\u201d language looks like and how these small language compose and interact together?",
        "user": "U0378MDUG1Y",
        "ts": "1685685323.229319",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "kcBSY",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I really want to see a resurgence of little languages too! "
                            },
                            {
                                "type": "text",
                                "text": "I was wondering what you think this \u201csubstrate\u201d language looks like and how these small language compose and interact together?"
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1685573969.099099",
        "parent_user_id": "UGWUJUZHT",
        "reactions": [
            {
                "name": "hourglass_flowing_sand",
                "users": [
                    "UGWUJUZHT"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "94c1793c-79de-4553-a260-aa65c47e0305",
        "type": "message",
        "text": "I have held this point of view for a few years as well. And started playing with Racket to try it out in practice. Today I am less convinced that this is a good approach. In the meantime, I discovered the importance of good and language-aware tools. Not just syntax-aware editors, but in particular debuggers. Either you need to adapt a debugger to every single little language, or you have to compile those languages to some unified substrate in a way that makes debugging at the substrate level possible in practice. I haven't seen either approach work so far.",
        "user": "UJBAJNFLK",
        "ts": "1685705593.557489",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "FNEd6",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I have held this point of view for a few years as well. And started playing with Racket to try it out in practice. Today I am less convinced that this is a good approach. In the meantime, I discovered the importance of good and language-aware tools. Not just syntax-aware editors, but in particular debuggers. Either you need to adapt a debugger to every single little language, or you have to compile those languages to some unified substrate in a way that makes debugging at the substrate level possible in practice. I haven't seen either approach work so far."
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1685573969.099099",
        "parent_user_id": "UGWUJUZHT"
    },
    {
        "client_msg_id": "d0594a1d-545a-4c01-bd5a-104f3b6b8573",
        "type": "message",
        "text": "I blame the tools not the approach.  Deep down, I blame this on the fact that all languages are the same - they are all based on a single Pattern - synchrony.  (Longer response pending...)",
        "user": "UGWUJUZHT",
        "ts": "1685707055.622149",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "urKu",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I blame the tools not the approach.  Deep down, I blame this on the fact that all languages are the same - they are all based on a single Pattern - synchrony.  (Longer response pending...)"
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1685573969.099099",
        "parent_user_id": "UGWUJUZHT"
    },
    {
        "client_msg_id": "bbc0cf24-9f7d-468f-9ee8-750500c49d30",
        "type": "message",
        "text": "It's possibly a tooling issue, but then, pragmatically speaking, if I can't build those tools myself (if only for lack of resources) and nobody else is doing it, then I am stuck.",
        "user": "UJBAJNFLK",
        "ts": "1685714421.153329",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "dFkc",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "It's possibly a tooling issue, but then, pragmatically speaking, if I can't build those tools myself (if only for lack of resources) and nobody else is doing it, then I am stuck."
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1685573969.099099",
        "parent_user_id": "UGWUJUZHT",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UGWUJUZHT"
                ],
                "count": 1
            },
            {
                "name": "cry",
                "users": [
                    "UA14TGLTC"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "5e315dbd-d177-413b-a867-1bec379c689b",
        "type": "message",
        "text": "Looking forward to the longer response \u2014 how different do you see these languages being, especially semantically?\n\nWhile some programmers seem to be able to adjust between (existing) languages quickly, working in a shop that uses JavaScript and PHP \u2014 it's a real struggle for others. There are a surprising amount of differences that go way beyond syntax (i.e. JavaScript's reference semantics vs. PHP's copy-on-write) that can trip people up in surprising ways, and that's between two languages that are relatively similar.\n\nPart of the issue is, as you said in a previous comment, we are smashing together coding and architecture and design, etc. Are you suggesting that any given person or team would only need a single SCN? (Except for the \"integrators\" or whatever they'd be called?)",
        "user": "U04E5QAD6DD",
        "ts": "1685793434.770809",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "=+nP",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Looking forward to the longer response \u2014 how different do you see these languages being, especially semantically?\n\nWhile some programmers seem to be able to adjust between (existing) languages quickly, working in a shop that uses JavaScript and PHP \u2014 it's a real struggle for others. There are a surprising amount of differences that go way beyond syntax (i.e. JavaScript's reference semantics vs. PHP's copy-on-write) that can trip people up in surprising ways, and that's between two languages that are relatively similar.\n\nPart of the issue is, as you said in a previous comment, we are smashing together coding and architecture and design, etc. Are you suggesting that any given person or team would only need a single SCN? (Except for the \"integrators\" or whatever they'd be called?)"
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1685573969.099099",
        "parent_user_id": "UGWUJUZHT"
    }
]