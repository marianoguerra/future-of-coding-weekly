[
    {
        "client_msg_id": "7e4f55ef-887a-403a-bdaa-82600e27f360",
        "type": "message",
        "text": "Last night I spent some time documenting an almost-trivial state machine that I keep getting wrong: <https://docs.google.com/document/d/1EbK4AxDCDWonMa8KyGJFX4jllXXLew0qBsGxsmqoYqk>\n\nState machines are _hard_!\n\u2022 We usually have one in our head when we program.\n\u2022 The abstract state in my head is usually made up of multiple concrete variables in the program.\n\u2022 Mutations happen to variables, but it's not obvious at each how the abstract state is changing.\n\u2022 The state machine in my head often evolves, which makes documentation challenging to keep up to date. Which is why I think nobody builds documents like these.\nTell me how immutability or State Charts will solve all my problems :slightly_smiling_face:",
        "user": "UCUSW7WVD",
        "ts": "1691945999.321379",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "c/I",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Last night I spent some time documenting an almost-trivial state machine that I keep getting wrong: "
                            },
                            {
                                "type": "link",
                                "url": "https://docs.google.com/document/d/1EbK4AxDCDWonMa8KyGJFX4jllXXLew0qBsGxsmqoYqk"
                            },
                            {
                                "type": "text",
                                "text": "\n\nState machines are "
                            },
                            {
                                "type": "text",
                                "text": "hard",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "!\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "We usually have one in our head when we program."
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "The abstract state in my head is usually made up of multiple concrete variables in the program."
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Mutations happen to variables, but it's not obvious at each how the abstract state is changing."
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "The state machine in my head often evolves, which makes documentation challenging to keep up to date. Which is why I think nobody builds documents like these."
                                    }
                                ]
                            }
                        ],
                        "style": "bullet",
                        "indent": 0,
                        "border": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nTell me how immutability or State Charts will solve all my problems "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UCUSW7WVD",
            "ts": "1691949807.000000"
        },
        "thread_ts": "1691945999.321379",
        "reply_count": 17,
        "reply_users_count": 6,
        "latest_reply": "1691958861.702379",
        "reply_users": [
            "UC2A2ARPT",
            "USH01JEDQ",
            "U0123H7JRDM",
            "UCUSW7WVD",
            "UBN9AFS0N",
            "U02U0AS3J49"
        ],
        "is_locked": false,
        "subscribed": true,
        "last_read": "1691958861.702379"
    },
    {
        "client_msg_id": "CF4CBCEC-99A0-48BC-92D2-94216BB33FE8",
        "type": "message",
        "text": "A visual programming system ... with state charts ... and good control over execution ... will solve all your problems. :magic_wand: :tophat: :rabbit2: ",
        "user": "UC2A2ARPT",
        "ts": "1691947360.742009",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "jNwT",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "A visual programming system ... with state charts ... and good control over execution ... will solve all your problems. "
                            },
                            {
                                "type": "emoji",
                                "name": "magic_wand",
                                "unicode": "1fa84"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "emoji",
                                "name": "tophat",
                                "unicode": "1f3a9"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "emoji",
                                "name": "rabbit2",
                                "unicode": "1f407"
                            },
                            {
                                "type": "text",
                                "text": " "
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1691945999.321379",
        "parent_user_id": "UCUSW7WVD"
    },
    {
        "client_msg_id": "464def52-5f75-433c-81bf-c1017a39ac02",
        "type": "message",
        "text": "What about \"visual programming system only of state charts\" \u2013 (too hard to learn or start something new with?)",
        "user": "USH01JEDQ",
        "ts": "1691949701.254449",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "eLXyY",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "What about \"visual programming system only of state charts\" \u2013 (too hard to learn or start something new with?)"
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1691945999.321379",
        "parent_user_id": "UCUSW7WVD",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UC2A2ARPT"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "132BDB7B-EE84-4D4C-ACBE-8497A7EB0990",
        "type": "message",
        "text": "Something like xstate? Although it is javascript focused which might not suite everyone. In my own project I want to combine statecharts with more regular nodes and wires, hope to demo something \"soonish\" :blush:",
        "user": "U0123H7JRDM",
        "ts": "1691950057.110489",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "/OA=D",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Something like xstate? Although it is javascript focused which might not suite everyone. In my own project I want to combine statecharts with more regular nodes and wires, hope to demo something \"soonish\" "
                            },
                            {
                                "type": "emoji",
                                "name": "blush",
                                "unicode": "1f60a"
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1691945999.321379",
        "parent_user_id": "UCUSW7WVD",
        "reactions": [
            {
                "name": "cake",
                "users": [
                    "UC2A2ARPT"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "c43bb6a4-0d02-4bf9-885f-64caf9603516",
        "type": "message",
        "text": "<@U0123H7JRDM> yeah for this thread I'm willing to try any tools or languages. I'm just curious to see examples of how others might organize the state machine in my doc to be easier to maintain.",
        "user": "UCUSW7WVD",
        "ts": "1691950883.713919",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "7ckJm",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U0123H7JRDM"
                            },
                            {
                                "type": "text",
                                "text": " yeah for this thread I'm willing to try any tools or languages. I'm just curious to see examples of how others might organize the state machine in my doc to be easier to maintain."
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1691945999.321379",
        "parent_user_id": "UCUSW7WVD"
    },
    {
        "client_msg_id": "659d64ab-ba5f-4198-90bd-052d07c9b87e",
        "type": "message",
        "text": "it may be overkill but TLA+/PlusCal? :smile: <https://www.learntla.com/> <https://lamport.azurewebsites.net/tla/tla.html>",
        "user": "UBN9AFS0N",
        "ts": "1691951619.222719",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "6sH",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "it may be overkill but TLA+/PlusCal? "
                            },
                            {
                                "type": "emoji",
                                "name": "smile",
                                "unicode": "1f604"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "link",
                                "url": "https://www.learntla.com/"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "link",
                                "url": "https://lamport.azurewebsites.net/tla/tla.html"
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1691945999.321379",
        "parent_user_id": "UCUSW7WVD"
    },
    {
        "client_msg_id": "0c6a89c2-bbfa-4a74-90ce-e82bc63795e1",
        "type": "message",
        "text": "I'd love to see what the TLA+ solution for this looks like. It wouldn't be directly executable, right? But it's one step more rigorous than the document, is that the right way to think about it?",
        "user": "UCUSW7WVD",
        "ts": "1691951722.721159",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "/Bd",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I'd love to see what the TLA+ solution for this looks like. It wouldn't be directly executable, right? But it's one step more rigorous than the document, is that the right way to think about it?"
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1691945999.321379",
        "parent_user_id": "UCUSW7WVD"
    },
    {
        "client_msg_id": "da2df7f9-2e7c-46f6-aa8d-06f773424c4c",
        "type": "message",
        "text": "executing it means proving it's a well formed specification",
        "user": "UBN9AFS0N",
        "ts": "1691951754.212589",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "JFvJ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "executing it means proving it's a well formed specification"
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1691945999.321379",
        "parent_user_id": "UCUSW7WVD"
    },
    {
        "client_msg_id": "1c14940d-0b9c-4ca0-b4f2-aeeac76d0a26",
        "type": "message",
        "text": "There's a big list of specifications here: <https://github.com/tlaplus/Examples/tree/master/specifications>",
        "user": "UBN9AFS0N",
        "ts": "1691951779.064439",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "BSdf",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "There's a big list of specifications here: "
                            },
                            {
                                "type": "link",
                                "url": "https://github.com/tlaplus/Examples/tree/master/specifications"
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1691945999.321379",
        "parent_user_id": "UCUSW7WVD"
    },
    {
        "client_msg_id": "668767c6-9646-49cc-82b1-7e40c7117e30",
        "type": "message",
        "text": "Lamport's TLA page has a video course that I found really useful",
        "user": "UBN9AFS0N",
        "ts": "1691951843.040919",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "DH=",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Lamport's TLA page has a video course that I found really useful"
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1691945999.321379",
        "parent_user_id": "UCUSW7WVD"
    },
    {
        "client_msg_id": "2f482daf-0179-4e0c-a3e6-8b2f3a2a9b4a",
        "type": "message",
        "text": "For me, executing it means when I click on the button I get a plot. And it doesn't hog disk reads too much, it's a good citizen of my computer.\n\nIf the state machine lives outside the program that executes, how can I get an automated alert when I add a state to the state machine but forget to change the code.\n\nThat's basically the problem statement. My sense is that formal methods aren't quite here yet. Which is fine, not a criticism. I just want to focus this thread on the best possible solution for a single example. We like programming by example here, right? For this example and these design goals, what is the best representation we can think of that's \"hard scifi\" (doesn't have to be working code yet, but also doesn't require solving hard unsolved research problems).\n\nAnd I want to see the (pseudo)code :stuck_out_tongue: Around the same level of detail as the 5 10-line versions I wrote in the doc.",
        "user": "UCUSW7WVD",
        "ts": "1691952308.495689",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "tzjV",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "For me, executing it means when I click on the button I get a plot. And it doesn't hog disk reads too much, it's a good citizen of my computer.\n\nIf the state machine lives outside the program that executes, how can I get an automated alert when I add a state to the state machine but forget to change the code.\n\nThat's basically the problem statement. My sense is that formal methods aren't quite here yet. Which is fine, not a criticism. I just want to focus this thread on the best possible solution for a single example. We like programming by example here, right? For this example and these design goals, what is the best representation we can think of that's \"hard scifi\" (doesn't have to be working code yet, but also doesn't require solving hard unsolved research problems).\n\nAnd I want to see the (pseudo)code "
                            },
                            {
                                "type": "emoji",
                                "name": "stuck_out_tongue",
                                "unicode": "1f61b"
                            },
                            {
                                "type": "text",
                                "text": " Around the same level of detail as the 5 10-line versions I wrote in the doc."
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UCUSW7WVD",
            "ts": "1691952408.000000"
        },
        "thread_ts": "1691945999.321379",
        "parent_user_id": "UCUSW7WVD",
        "reactions": [
            {
                "name": "cake",
                "users": [
                    "UC2A2ARPT"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "E66F2640-FEBF-4FF9-B77D-80A0BCD4D861",
        "type": "message",
        "text": "I like programming by hand-waving at things that don't exist yet in the hope that someone else builds them.",
        "user": "UC2A2ARPT",
        "ts": "1691952458.867749",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ABcsN",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I like programming by hand-waving at things that don't exist yet in the hope that someone else builds them"
                            },
                            {
                                "type": "text",
                                "text": "."
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1691945999.321379",
        "parent_user_id": "UCUSW7WVD",
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "U02U0AS3J49"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "74ad8efc-ed0c-48dc-999b-15a9b3dc0ca6",
        "type": "message",
        "text": "Go away, Ivan :stuck_out_tongue: &lt;obi wan&gt;This is not the thread you are looking for.&lt;/obi wan&gt;",
        "user": "UCUSW7WVD",
        "ts": "1691952510.113299",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "3rTE",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Go away, Ivan "
                            },
                            {
                                "type": "emoji",
                                "name": "stuck_out_tongue",
                                "unicode": "1f61b"
                            },
                            {
                                "type": "text",
                                "text": " <obi wan>This is not the thread you are looking for.</obi wan>"
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1691945999.321379",
        "parent_user_id": "UCUSW7WVD",
        "reactions": [
            {
                "name": "ghost",
                "users": [
                    "UC2A2ARPT"
                ],
                "count": 1
            },
            {
                "name": "heart",
                "users": [
                    "UCUSW7WVD"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "7d96f223-cd8f-4951-9747-ebd1001adaa5",
        "type": "message",
        "text": "One idea I would love to have time for is a parser for TLA+ that draws it some way and allows to step through the execution of different \"traces\"",
        "user": "UBN9AFS0N",
        "ts": "1691952962.662029",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "k3cVq",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "One idea I would love to have time for is a parser for TLA+ that draws it some way and allows to step through the execution of different \"traces\""
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1691945999.321379",
        "parent_user_id": "UCUSW7WVD"
    },
    {
        "client_msg_id": "6da83de2-9fcd-4e44-aada-5f202f382c04",
        "type": "message",
        "text": "same for quickcheck style property based testing specifications",
        "user": "UBN9AFS0N",
        "ts": "1691952975.688539",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "4kNW8",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "same for quickcheck style property based testing specifications"
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1691945999.321379",
        "parent_user_id": "UCUSW7WVD"
    },
    {
        "client_msg_id": "7a1e5dfd-2392-4c4a-a8da-c02a2d5fba12",
        "type": "message",
        "text": "I have yet to see a trace visualizer for a logical language that was remotely legible, or a way of visualizing the execution of logical code using its source. I'm desperate to use them if they exist, so let me know. The closest I have seen is a system that maintains a set of successful search routes, then turns each into a tree-structured justification where each node of the tree and it's immediate children correspond to a rule clause. There might be things you could do to link those trees to the source code more explicitly in an interface. I've done something similar in Blawx where elements of the tree are linked to source legal text. But that's not execution tracing, it's answer justification.",
        "user": "U02U0AS3J49",
        "ts": "1691958060.376129",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "mkQ/",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I have yet to see a trace visualizer for a logical language that was remotely legible, or a way of visualizing the execution of logical code using its source. I'm desperate to use them if they exist, so let me know. The closest I have seen is a system that maintains a set of successful search routes, then turns each into a tree-structured justification where each node of the tree and it's immediate children correspond to a rule clause. There might be things you could do to link those trees to the source code more explicitly in an interface. I've done something similar in Blawx where elements of the tree are linked to source legal text. But that's not execution tracing, it's answer justification."
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1691945999.321379",
        "parent_user_id": "UCUSW7WVD"
    },
    {
        "client_msg_id": "eb6d8d3d-7afe-4698-9425-393fa73421a5",
        "type": "message",
        "text": "I have been obsessed with making logical code easier to use for a few years, now, and I don't even know what I would WANT out of a trace visualizer. The only things I can imagine would work, like a zoomable, color coded, annotated search tree, seem like they would be of limited utility unless what you wanted to know was why your code ran so slowly. And you pretty much don't care about that when you are writing things like TLA+ specs.",
        "user": "U02U0AS3J49",
        "ts": "1691958752.904259",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "kkA0",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I have been obsessed with making logical code easier to use for a few years, now, and I don't even know what I would WANT out of a trace visualizer. The only things I can imagine would work, like a zoomable, color coded, annotated search tree, seem like they would be of limited utility unless what you wanted to know was why your code ran so slowly. And you pretty much don't care about that when you are writing things like TLA+ specs."
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1691945999.321379",
        "parent_user_id": "UCUSW7WVD"
    },
    {
        "client_msg_id": "46eada59-5e2e-4c3f-a738-8c39e8cc64db",
        "type": "message",
        "text": "For the record, I haven't actually used TLA+, but I have taken a lot of inspiration from Hillel Wayne's promotion of it, and of formal methods more generally.",
        "user": "U02U0AS3J49",
        "ts": "1691958861.702379",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "xKH",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "For the record, I haven't actually used TLA+, but I have taken a lot of inspiration from Hillel Wayne's promotion of it, and of formal methods more generally."
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1691945999.321379",
        "parent_user_id": "UCUSW7WVD"
    }
]