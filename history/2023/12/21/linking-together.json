[
    {
        "client_msg_id": "f0442566-49a4-43b7-b885-9705c3abec7f",
        "type": "message",
        "text": "<https://github.com/betaveros/noulith>\nbackground: <https://blog.vero.site/post/noulith>",
        "user": "U018S42NMMM",
        "ts": "1703199852.214419",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "KZbjz",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "link",
                                "url": "https://github.com/betaveros/noulith"
                            },
                            {
                                "type": "text",
                                "text": "\nbackground: "
                            },
                            {
                                "type": "link",
                                "url": "https://blog.vero.site/post/noulith"
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "from_url": "https://blog.vero.site/post/noulith",
                "service_icon": "https://blog.vero.site/favicon.ico",
                "id": 1,
                "original_url": "https://blog.vero.site/post/noulith",
                "fallback": "Designing a Programming Language to Speedrun Advent of Code",
                "text": "\u201cshouldn\u2019t this have been published a few months ago?\u201d yeah, probably. I even considered submitting it to the AoC contest. time is a real beast.\nThe title is clickbait. I did not design and implement a programming language for the sole or even primary purpose of leaderboarding on Advent of Code. It just turned out that the programming language I was working on fit the task remarkably well.\nI can\u2019t name just a single reason I started work on my language, Noulith, back in July 2022, but I think the biggest one was even more absurdly niche: I solve and write a lot of puzzlehunts, and I wanted a better programming language to use to search word lists for words satisfying unusual constraints, such as, \u201cFind all ten-letter words that contain each of the letters A, B, and C exactly once and that have the ninth letter K.\u201d1 I have a folder of ten-line scripts of this kind, mostly Python, and I thought there was surely a better way to do this. Not necessarily faster \u2014 there is obviously no way I could save time on net by optimizing this process. But, for example, I wanted to be able to easily share these programs such that others could run them. I had a positive experience in this with my slightly older golflang Paradoc, which I had compiled into a WASM blob and put online and, just once, experienced the convenience of sharing a short text processing program through a link. (Puzzle: what does this program do?) I also wanted to write and run these programs while booted into a different operating system, using a different computer, or just on my phone.\nAs I worked on it, I kept accumulating reasons to keep going. There were other contexts where I wanted to quickly code a combinatorial brute force that was annoying to write in other languages; a glib phrasing is that I wanted access to Haskell\u2019s list monad in a sloppier language. I also wanted an excuse to read Crafting Interpreters more thoroughly. But sometimes I think the best characterization for what developing the language \u201cfelt like\u201d was that I had been possessed by a supernatural creature \u2014 say, the dragon from the Dragon Book. I spent every spare minute thinking about language features and next implementation steps, because I had to.\nThe first \u201creal program\u201d I wrote in Noulith was to brute force constructions for The Cube, for last year\u2019s Galactic Puzzle Hunt in early August, and it worked unexpectedly well. I wrote a for loop with a 53-clause iteratee and the interpreter executed it smoothly. Eventually I realized that the language could expand into other niches in my life where I wanted a scripting language. For example, I did a few Cryptopals challenges in them. It would take a month or two before it dawned on me that the same compulsion that drove me to create this language would drive me to do Advent of Code in it. That\u2019s just how it has to be.\nThis post details my thought process behind the design of this language. Some preliminary notes:",
                "title": "Designing a Programming Language to Speedrun Advent of Code",
                "title_link": "https://blog.vero.site/post/noulith",
                "service_name": "blog.vero.site"
            }
        ]
    },
    {
        "client_msg_id": "c3f07fbc-b26b-44af-964c-4a06d1223e3e",
        "type": "message",
        "text": "This looks tantalizing for the economic angle in particular: <https://www.youtube.com/watch?v=-xnppM6GG9Q>\n\nThe repo for that is ~<https://github.com/drym-org/dia>, but sadly there's no documentation yet~ <https://github.com/drym-org/foundation>. If anybody has more details or pointers please chime in.\n\n(Thanks <@UJBAJNFLK>.)",
        "user": "UCUSW7WVD",
        "ts": "1703200709.975609",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "3Flis",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "This looks tantalizing for the economic angle in particular: "
                            },
                            {
                                "type": "link",
                                "url": "https://www.youtube.com/watch?v=-xnppM6GG9Q"
                            },
                            {
                                "type": "text",
                                "text": "\n\nThe repo for that is "
                            },
                            {
                                "type": "link",
                                "url": "https://github.com/drym-org/dia",
                                "style": {
                                    "strike": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ", but sadly there's no documentation yet",
                                "style": {
                                    "strike": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "link",
                                "url": "https://github.com/drym-org/foundation"
                            },
                            {
                                "type": "text",
                                "text": ". If anybody has more details or pointers please chime in.\n\n(Thanks "
                            },
                            {
                                "type": "user",
                                "user_id": "UJBAJNFLK"
                            },
                            {
                                "type": "text",
                                "text": ".)"
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UCUSW7WVD",
            "ts": "1703200835.000000"
        },
        "attachments": [
            {
                "from_url": "https://www.youtube.com/watch?v=-xnppM6GG9Q",
                "service_icon": "https://a.slack-edge.com/80588/img/unfurl_icons/youtube.png",
                "thumb_url": "https://i.ytimg.com/vi/-xnppM6GG9Q/hqdefault.jpg",
                "thumb_width": 480,
                "thumb_height": 360,
                "video_html": "<iframe width=\"400\" height=\"225\" src=\"https://www.youtube.com/embed/-xnppM6GG9Q?feature=oembed&autoplay=1&iv_load_policy=3\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" allowfullscreen title=\"Redeeming Open Source with ABE - Sid Kasivajhula, feat. Michael Ballantyne - RacketCon 2023\"></iframe>",
                "video_html_width": 400,
                "video_html_height": 225,
                "id": 1,
                "original_url": "https://www.youtube.com/watch?v=-xnppM6GG9Q",
                "fallback": "YouTube Video: Redeeming Open Source with ABE - Sid Kasivajhula, feat. Michael Ballantyne - RacketCon 2023",
                "title": "Redeeming Open Source with ABE - Sid Kasivajhula, feat. Michael Ballantyne - RacketCon 2023",
                "title_link": "https://www.youtube.com/watch?v=-xnppM6GG9Q",
                "author_name": "Racket",
                "author_link": "https://www.youtube.com/@racketlang",
                "service_name": "YouTube",
                "service_url": "https://www.youtube.com/"
            }
        ],
        "thread_ts": "1703200709.975609",
        "reply_count": 3,
        "reply_users_count": 1,
        "latest_reply": "1703234418.558409",
        "reply_users": [
            "U018S42NMMM"
        ],
        "is_locked": false,
        "subscribed": false
    },
    {
        "client_msg_id": "858f389d-ae25-427e-98df-aaf67fd24703",
        "type": "message",
        "text": "Possibly interesting for distribution of revenue. But the challenge is to get users to pay in proportion to the value they derive.\n\nWhat do you think about Gitcoin's approach?",
        "user": "U018S42NMMM",
        "ts": "1703232990.116799",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "/Tsoa",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Possibly interesting for distribution of revenue. But the challenge is to get users to pay in proportion to the value they derive.\n\nWhat do you think about Gitcoin's approach?"
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1703200709.975609",
        "parent_user_id": "UCUSW7WVD"
    },
    {
        "client_msg_id": "49d347fa-fd64-4ba4-ab79-0ecb1748daa5",
        "type": "message",
        "text": "Some of these questions are answered in the Q&amp;A video here: <https://emacsconf.org/2022/talks/maint/>",
        "user": "U018S42NMMM",
        "ts": "1703234087.969789",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "/grlw",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Some of these questions are answered in the Q&A video here: "
                            },
                            {
                                "type": "link",
                                "url": "https://emacsconf.org/2022/talks/maint/"
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1703200709.975609",
        "parent_user_id": "UCUSW7WVD",
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UCUSW7WVD"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "82d3ab5f-4456-488f-bfb7-4512ecda4d0e",
        "type": "message",
        "text": "Also see <https://sourcecred.io/docs/>",
        "user": "U018S42NMMM",
        "ts": "1703234418.558409",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "nKcSS",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Also see "
                            },
                            {
                                "type": "link",
                                "url": "https://sourcecred.io/docs/"
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "from_url": "https://sourcecred.io/docs/",
                "service_icon": "https://sourcecred.io/img/favicon.png",
                "id": 1,
                "original_url": "https://sourcecred.io/docs/",
                "fallback": ":seedling:  Introduction | SourceCred",
                "text": "An introduction to the basic concepts of SourceCred.",
                "title": ":seedling:  Introduction | SourceCred",
                "title_link": "https://sourcecred.io/docs/",
                "service_name": "sourcecred.io"
            }
        ],
        "thread_ts": "1703200709.975609",
        "parent_user_id": "UCUSW7WVD"
    }
]