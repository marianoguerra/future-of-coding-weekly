[
    {
        "client_msg_id": "DFD6D93F-9D7D-4FE4-AD31-D6C2F58D03ED",
        "type": "message",
        "text": "I heard that day-5 part two was a curveball, so I really want to be able to implement it using my visual programming system... which failed so far. Using a brute force solution would mean that the program would run very very long. And my current \"speed run\" solution wouldn't suffice for this. \n\nPart one actually provided a big challenge for my vps as well, running the program with the small test dataset can be seen in the video: <https://youtu.be/td0QeePvfGQ|https://youtu.be/td0QeePvfGQ> . I've spend a lot of time adding more new node-types this weekend (like handling a while-loop and improved array handling) and making changes to the variable-nodes and expressions. Also the variable scoping (needed for local function variables) that I implemented had some flaws, so I fixed that as well. You can now define global and scoped variables. I've also made some simple variable visualizers that better show the data for data types like dictionary/array and grid. \n\nMy current vps solution works better than the flow-based vps that I was building last year. A big difference is that the data that is send from node to node is now just a single value. That value can still be of different types (number, string, array).. and special variable-nodes are needed to keep track of data. These variables also have a type like number, string, array, dictionary, grid. Often working with a single value is not enough and that's why these variables are needed. They can be referenced from within expressions. Also being able to run some flow-parts in parallel or sequentially helps a lot. This starts to feel much more like a regular 3rd gen programming language. \n\nThe UI is currently quite limited.. to be able to create a flow program efficiently it definitely needs a lot of work. Textual programming is much faster. I want to finish at least one of the advent of code puzzles where a grid is involved .. so today's puzzle (17) seems like a good fit. I'll probably work on that next weekend.",
        "user": "U0123H7JRDM",
        "ts": "1702829999.880759",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "J7gez",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I heard that day-5 part two was a curveball, so I really want to be able to implement it using my visual programming system... which failed so far. Using a brute force solution would mean that the program would run very very long. And my current \"speed run\" solution wouldn't suffice for this. \n\nPart one actually provided a big challenge for my vps as well, running the program with the small test dataset can be seen in the video: "
                            },
                            {
                                "type": "link",
                                "url": "https://youtu.be/td0QeePvfGQ",
                                "text": "https://youtu.be/td0QeePvfGQ"
                            },
                            {
                                "type": "text",
                                "text": " . I've spend a lot of time adding more new node-types this weekend (like handling a while-loop and improved array handling) and making changes to the variable-nodes and expressions. Also the variable scoping (needed for local function variables) that I implemented had some flaws, so I fixed that as well. You can now define global and scoped variables. I've also made some simple variable visualizers that better show the data for data types like dictionary/array and grid. \n\nMy current vps solution works better than the flow-based vps that I was building last year. A big difference is that the data that is send from node to node is now just a single value. That value can still be of different types (number, string, array).. and special variable-nodes are needed to keep track of data. These variables also have a type like number, string, array, dictionary, grid. Often working with a single value is not enough and that's why these variables are needed. They can be referenced from within expressions. Also being able to run some flow-parts in parallel or sequentially helps a lot. This starts to feel much more like a regular 3rd gen programming language. \n\nThe UI is currently quite limited.. to be able to create a flow program efficiently it definitely needs a lot of work. Textual programming is much faster. I want to finish at least one of the advent of code puzzles where a grid is involved .. so today's puzzle (17) seems like a good fit. I'll probably work on that next weekend."
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "from_url": "https://youtu.be/td0QeePvfGQ",
                "service_icon": "https://a.slack-edge.com/80588/img/unfurl_icons/youtube.png",
                "thumb_url": "https://i.ytimg.com/vi/td0QeePvfGQ/hqdefault.jpg",
                "thumb_width": 480,
                "thumb_height": 360,
                "video_html": "<iframe width=\"400\" height=\"225\" src=\"https://www.youtube.com/embed/td0QeePvfGQ?feature=oembed&autoplay=1&iv_load_policy=3\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" allowfullscreen title=\"Advent of Code 2023 day 5 part1 using visual programming\"></iframe>",
                "video_html_width": 400,
                "video_html_height": 225,
                "id": 1,
                "original_url": "https://youtu.be/td0QeePvfGQ",
                "fallback": "YouTube Video: Advent of Code 2023 day 5 part1 using visual programming",
                "title": "Advent of Code 2023 day 5 part1 using visual programming",
                "title_link": "https://youtu.be/td0QeePvfGQ",
                "author_name": "Maikel van de Lisdonk",
                "author_link": "https://www.youtube.com/@maikelvandelisdonk7024",
                "service_name": "YouTube",
                "service_url": "https://www.youtube.com/"
            }
        ],
        "thread_ts": "1702829999.880759",
        "reply_count": 9,
        "reply_users_count": 2,
        "latest_reply": "1702838156.019339",
        "reply_users": [
            "U0123H7JRDM",
            "UCUSW7WVD"
        ],
        "is_locked": false,
        "subscribed": false
    },
    {
        "type": "message",
        "text": "Big zoomable image of the flow",
        "files": [
            {
                "id": "F06AWLAQ725",
                "created": 1702830052,
                "timestamp": 1702830052,
                "name": "Image from iOS.jpg",
                "title": "Image from iOS",
                "mimetype": "image/jpeg",
                "filetype": "jpg",
                "pretty_type": "JPEG",
                "user": "U0123H7JRDM",
                "user_team": "T5TCAFTA9",
                "editable": false,
                "size": 3682333,
                "mode": "hosted",
                "is_external": false,
                "external_type": "",
                "is_public": true,
                "public_url_shared": false,
                "display_as_bot": false,
                "username": "",
                "subtype": "slack_image",
                "url_private": "https://files.slack.com/files-pri/T5TCAFTA9-F06AWLAQ725/image_from_ios.jpg",
                "url_private_download": "https://files.slack.com/files-pri/T5TCAFTA9-F06AWLAQ725/download/image_from_ios.jpg",
                "media_display_type": "unknown",
                "permalink": "https://futureofcoding.slack.com/files/U0123H7JRDM/F06AWLAQ725/image_from_ios.jpg",
                "permalink_public": "https://slack-files.com/T5TCAFTA9-F06AWLAQ725-c5fd3286b9",
                "is_starred": false,
                "has_rich_preview": false,
                "file_access": "visible"
            }
        ],
        "upload": false,
        "user": "U0123H7JRDM",
        "display_as_bot": false,
        "ts": "1702830055.619759",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "6EPx8",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Big zoomable image of the flow"
                            }
                        ]
                    }
                ]
            }
        ],
        "client_msg_id": "2E3E37B6-FD00-4B9B-91CF-99962B8D13B0",
        "thread_ts": "1702829999.880759",
        "parent_user_id": "U0123H7JRDM"
    },
    {
        "client_msg_id": "308614d6-6201-4880-a662-d4ff700d3ed0",
        "type": "message",
        "text": "How are you using a VPS?! Is this running in a browser that receives graphics from a server that's executing the program? Or is this a \"head-ful\" native app that's rendering graphics locally somehow? Or something else?",
        "user": "UCUSW7WVD",
        "ts": "1702837116.755389",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "QFoff",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "How are you using a VPS?! Is this running in a browser that receives graphics from a server that's executing the program? Or is this a \"head-ful\" native app that's rendering graphics locally somehow? Or something else?"
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1702829999.880759",
        "parent_user_id": "U0123H7JRDM"
    },
    {
        "client_msg_id": "D7E7071E-62C1-4782-85C0-8E2D1B8AE71B",
        "type": "message",
        "text": "This is 100% in the browser build with typescript without any libraries. It's all regular DOM and svg elements with css (tailwind and css transforms)",
        "user": "U0123H7JRDM",
        "ts": "1702837242.101669",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "0wG7T",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "This is 100% in the browser build with typescript without any libraries. It's all regular DOM and svg elements with css (tailwind and css transforms)"
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1702829999.880759",
        "parent_user_id": "U0123H7JRDM"
    },
    {
        "client_msg_id": "7765763A-29C9-4F53-AC54-AADA4FB3429D",
        "type": "message",
        "text": "I hope that I can put something online in january, there are still some bugs that I want to fix before I do that :blush: ",
        "user": "U0123H7JRDM",
        "ts": "1702837469.044499",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "r66pw",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I hope that I can put something online in january, there are still some bugs that I want to fix before I do that "
                            },
                            {
                                "type": "emoji",
                                "name": "blush",
                                "unicode": "1f60a"
                            },
                            {
                                "type": "text",
                                "text": " "
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1702829999.880759",
        "parent_user_id": "U0123H7JRDM"
    },
    {
        "client_msg_id": "c2105116-21fc-4c74-9f9f-f4edbdd91788",
        "type": "message",
        "text": "Oh, you don't mean Virtual Private Server, do you? What does vps mean, Visual Programming System?",
        "user": "UCUSW7WVD",
        "ts": "1702837574.029349",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "lPSSz",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Oh, you don't mean Virtual Private Server, do you? What does vps mean, Visual Programming System?"
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1702829999.880759",
        "parent_user_id": "U0123H7JRDM"
    },
    {
        "client_msg_id": "5B68E976-1F72-4678-B585-9B864A1808C4",
        "type": "message",
        "text": "No sorry, I mean visual programming system :blush: ",
        "user": "U0123H7JRDM",
        "ts": "1702837604.136339",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "kP598",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "No sorry, I mean visual programming system "
                            },
                            {
                                "type": "emoji",
                                "name": "blush",
                                "unicode": "1f60a"
                            },
                            {
                                "type": "text",
                                "text": " "
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1702829999.880759",
        "parent_user_id": "U0123H7JRDM",
        "reactions": [
            {
                "name": "smile",
                "users": [
                    "UCUSW7WVD"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "496AD6F3-5854-4553-939B-D331FB5D358F",
        "type": "message",
        "text": "The regular term that is used is usually VPL for these kind of applications, but thats not what i want to try and build. It's a part of it , but I want to build a system that can be used to build multiple visual programming languages and environments. I am probably aiming to high for a one person project :sweat_smile: ",
        "user": "U0123H7JRDM",
        "ts": "1702837803.895839",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "2rcDm",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The regular term that is used is usually VPL for these kind of applications, but thats not what i want to try and build. It's a part of it , but I want to build a system that can be used to build multiple visual programming languages and environments. I am probably aiming to high for a one person project "
                            },
                            {
                                "type": "emoji",
                                "name": "sweat_smile",
                                "unicode": "1f605"
                            },
                            {
                                "type": "text",
                                "text": " "
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1702829999.880759",
        "parent_user_id": "U0123H7JRDM"
    },
    {
        "client_msg_id": "ac252e5b-899a-46d7-beac-12aba44da84b",
        "type": "message",
        "text": "Nice, I like it. The common lisp or smalltalk of VPLs.",
        "user": "UCUSW7WVD",
        "ts": "1702837858.692379",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "U/hyg",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Nice, I like it. The common lisp or smalltalk of VPLs."
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1702829999.880759",
        "parent_user_id": "U0123H7JRDM"
    },
    {
        "client_msg_id": "38babfed-3ae5-4641-a3e0-90e1721be0c6",
        "type": "message",
        "text": "One nice reusable abstraction my L\u00d6VE apps have all converged on is an immediate-mode button primitive. I draw all my buttons each frame along with all the callbacks they need, and a couple of framework-y lines of code in the mouse-press callback is all it takes to get them working. Last night I realized (while poking inside <https://love2d.org/forums/viewtopic.php?p=236661#p236661>) that my hacky sliders in Lua Carousel's settings admit a similar abstraction (even better than the one there). The only additional complexity is it needs a couple more lines in the `update` callback that continually refresh the backing value as you drag the slider.",
        "user": "UCUSW7WVD",
        "ts": "1702838012.985159",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "xmo6d",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "One nice reusable abstraction my L\u00d6VE apps have all converged on is an immediate-mode button primitive. I draw all my buttons each frame along with all the callbacks they need, and a couple of framework-y lines of code in the mouse-press callback is all it takes to get them working. Last night I realized (while poking inside "
                            },
                            {
                                "type": "link",
                                "url": "https://love2d.org/forums/viewtopic.php?p=236661#p236661"
                            },
                            {
                                "type": "text",
                                "text": ") that my hacky sliders in Lua Carousel's settings admit a similar abstraction (even better than the one there). The only additional complexity is it needs a couple more lines in the "
                            },
                            {
                                "type": "text",
                                "text": "update",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " callback that continually refresh the backing value as you drag the slider."
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9"
    },
    {
        "type": "message",
        "text": "Finally starting to see a workflow come together in my editor. Here you can see Fibonacci at three different levels in the language I'm making. These functions live in three different files. Looking at them at once and comparing them isn't easily supported in any other editor I use. On the left is a simplistic symbol browser.\n\nI'm super excited that I'm slowly getting to the point where I can do these kinds of things. Having different views of our codebases that we can switch between is something I've been wanting for years.",
        "files": [
            {
                "id": "F06ALKFHNCC",
                "created": 1702838112,
                "timestamp": 1702838112,
                "name": "Screenshot 2023-12-17 at 1.31.15\u202fPM.png",
                "title": "Screenshot 2023-12-17 at 1.31.15\u202fPM.png",
                "mimetype": "image/png",
                "filetype": "png",
                "pretty_type": "PNG",
                "user": "UK3LH8CF5",
                "user_team": "T5TCAFTA9",
                "editable": false,
                "size": 1685317,
                "mode": "hosted",
                "is_external": false,
                "external_type": "",
                "is_public": true,
                "public_url_shared": false,
                "display_as_bot": false,
                "username": "",
                "url_private": "https://files.slack.com/files-pri/T5TCAFTA9-F06ALKFHNCC/screenshot_2023-12-17_at_1.31.15___pm.png",
                "url_private_download": "https://files.slack.com/files-pri/T5TCAFTA9-F06ALKFHNCC/download/screenshot_2023-12-17_at_1.31.15___pm.png",
                "media_display_type": "unknown",
                "thumb_64": "https://files.slack.com/files-tmb/T5TCAFTA9-F06ALKFHNCC-e402d1beef/screenshot_2023-12-17_at_1.31.15___pm_64.png",
                "thumb_80": "https://files.slack.com/files-tmb/T5TCAFTA9-F06ALKFHNCC-e402d1beef/screenshot_2023-12-17_at_1.31.15___pm_80.png",
                "thumb_360": "https://files.slack.com/files-tmb/T5TCAFTA9-F06ALKFHNCC-e402d1beef/screenshot_2023-12-17_at_1.31.15___pm_360.png",
                "thumb_360_w": 360,
                "thumb_360_h": 278,
                "thumb_480": "https://files.slack.com/files-tmb/T5TCAFTA9-F06ALKFHNCC-e402d1beef/screenshot_2023-12-17_at_1.31.15___pm_480.png",
                "thumb_480_w": 480,
                "thumb_480_h": 371,
                "thumb_160": "https://files.slack.com/files-tmb/T5TCAFTA9-F06ALKFHNCC-e402d1beef/screenshot_2023-12-17_at_1.31.15___pm_160.png",
                "thumb_720": "https://files.slack.com/files-tmb/T5TCAFTA9-F06ALKFHNCC-e402d1beef/screenshot_2023-12-17_at_1.31.15___pm_720.png",
                "thumb_720_w": 720,
                "thumb_720_h": 557,
                "thumb_800": "https://files.slack.com/files-tmb/T5TCAFTA9-F06ALKFHNCC-e402d1beef/screenshot_2023-12-17_at_1.31.15___pm_800.png",
                "thumb_800_w": 800,
                "thumb_800_h": 619,
                "thumb_960": "https://files.slack.com/files-tmb/T5TCAFTA9-F06ALKFHNCC-e402d1beef/screenshot_2023-12-17_at_1.31.15___pm_960.png",
                "thumb_960_w": 960,
                "thumb_960_h": 742,
                "thumb_1024": "https://files.slack.com/files-tmb/T5TCAFTA9-F06ALKFHNCC-e402d1beef/screenshot_2023-12-17_at_1.31.15___pm_1024.png",
                "thumb_1024_w": 1024,
                "thumb_1024_h": 792,
                "original_w": 3394,
                "original_h": 2624,
                "thumb_tiny": "AwAlADCmgUxj5Rn1pdq+g/KiP/VinCgBu1f7ooCKew/KnEUCgBpRR2H5U11Gw8CpTUb/AHDQAsf+rFOFNj/1YpaAFJzQKKKAFzUb/cNOpJPuGgCISMBgYo81vQUyigB/mt6CjzW9BTKKAH+a3oKDIxGDimUUAf/Z",
                "permalink": "https://futureofcoding.slack.com/files/UK3LH8CF5/F06ALKFHNCC/screenshot_2023-12-17_at_1.31.15___pm.png",
                "permalink_public": "https://slack-files.com/T5TCAFTA9-F06ALKFHNCC-3867fd8a80",
                "is_starred": false,
                "has_rich_preview": false,
                "file_access": "visible"
            }
        ],
        "upload": false,
        "user": "UK3LH8CF5",
        "display_as_bot": false,
        "ts": "1702838120.211379",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Ffzh/",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Finally starting to see a workflow come together in my editor. Here you can see Fibonacci at three different levels in the language I'm making. These functions live in three different files. Looking at them at once and comparing them isn't easily supported in any other editor I use. On the left is a simplistic symbol browser.\n\nI'm super excited that I'm slowly getting to the point where I can do these kinds of things. Having different views of our codebases that we can switch between is something I've been wanting for years."
                            }
                        ]
                    }
                ]
            }
        ],
        "client_msg_id": "9bd23147-6cec-43a5-932e-fa782ed75038",
        "thread_ts": "1702838120.211379",
        "reply_count": 3,
        "reply_users_count": 2,
        "latest_reply": "1702840139.070359",
        "reply_users": [
            "UK3LH8CF5",
            "U04E5QAD6DD"
        ],
        "is_locked": false,
        "subscribed": false,
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UCUSW7WVD",
                    "U0123H7JRDM",
                    "U04E5QAD6DD",
                    "U85HCL7JP",
                    "UUQ2EQW21",
                    "UFEQUBNNT",
                    "U02B6FQKZK8",
                    "UJBAJNFLK"
                ],
                "count": 8
            }
        ]
    },
    {
        "client_msg_id": "BAAC0349-5229-4C81-A757-11F43912427F",
        "type": "message",
        "text": "Thanks! :grinning: :blush: ",
        "user": "U0123H7JRDM",
        "ts": "1702838156.019339",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "kcyuM",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Thanks! "
                            },
                            {
                                "type": "emoji",
                                "name": "grinning",
                                "unicode": "1f600"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "emoji",
                                "name": "blush",
                                "unicode": "1f60a"
                            },
                            {
                                "type": "text",
                                "text": " "
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1702829999.880759",
        "parent_user_id": "U0123H7JRDM"
    },
    {
        "client_msg_id": "a63eacda-2ecc-4d86-bbaf-3f1dfe7a16c3",
        "type": "message",
        "text": "Also, I'm not actually making a lisp, but rust makes it so easy to make a macro that is a lisp, I always do that for my ASTs well before I write a parser",
        "user": "UK3LH8CF5",
        "ts": "1702838170.252799",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "qZc0Y",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Also, I'm not actually making a lisp, but rust makes it so easy to make a macro that is a lisp, I always do that for my ASTs well before I write a parser"
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1702838120.211379",
        "parent_user_id": "UK3LH8CF5"
    },
    {
        "client_msg_id": "4115E8D2-2370-4DAC-A067-63C7E719C1CD",
        "type": "message",
        "text": "This is three different *human*-authored versions at different levels?",
        "user": "U04E5QAD6DD",
        "ts": "1702839466.605169",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "wqnTY",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "This is three different "
                            },
                            {
                                "type": "text",
                                "text": "human",
                                "style": {
                                    "bold": true,
                                    "italic": false,
                                    "strike": false
                                }
                            },
                            {
                                "type": "text",
                                "text": "-authored versions at different levels?"
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1702838120.211379",
        "parent_user_id": "UK3LH8CF5"
    },
    {
        "client_msg_id": "471A81BD-C899-4610-988D-4BF3A59E0396",
        "type": "message",
        "text": "Yes. I wrote them by hand bottom up. The highest level compiles to that lower level. But that isn\u2019t the output of that code.",
        "user": "UK3LH8CF5",
        "ts": "1702840139.070359",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "FRj3B",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yes"
                            },
                            {
                                "type": "text",
                                "text": "."
                            },
                            {
                                "type": "text",
                                "text": " I wrote them by hand bottom up"
                            },
                            {
                                "type": "text",
                                "text": "."
                            },
                            {
                                "type": "text",
                                "text": " The highest level compiles to that lower level"
                            },
                            {
                                "type": "text",
                                "text": "."
                            },
                            {
                                "type": "text",
                                "text": " But that "
                            },
                            {
                                "type": "text",
                                "text": "isn\u2019t"
                            },
                            {
                                "type": "text",
                                "text": " the output of that code"
                            },
                            {
                                "type": "text",
                                "text": "."
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1702838120.211379",
        "parent_user_id": "UK3LH8CF5",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U04E5QAD6DD"
                ],
                "count": 1
            }
        ]
    }
]