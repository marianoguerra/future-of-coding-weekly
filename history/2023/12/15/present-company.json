[
    {
        "client_msg_id": "da923c09-000e-4bff-a505-5be1333c4498",
        "type": "message",
        "text": "Today, is there a way to build state-driven UI components (like React/Vue/Svelte) where some of the state, but not all, can be persisted periodically in the backend perhaps as an event log which would enable things like playback of past interactions? How would you go about creating something like this with usual tools like Javascript, REST and Postgresql? :thinking_face:",
        "user": "U018S42NMMM",
        "ts": "1702645390.625979",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "xLkA1",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Today, is there a way to build state-driven UI components (like React/Vue/Svelte) where some of the state, but not all, can be persisted periodically in the backend perhaps as an event log which would enable things like playback of past interactions? How would you go about creating something like this with usual tools like Javascript, REST and Postgresql? "
                            },
                            {
                                "type": "emoji",
                                "name": "thinking_face",
                                "unicode": "1f914"
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1702645390.625979",
        "reply_count": 9,
        "reply_users_count": 4,
        "latest_reply": "1702658040.497059",
        "reply_users": [
            "UNCP67JSK",
            "UFPPABQ7P",
            "U018S42NMMM",
            "U067RCH8NB0"
        ],
        "is_locked": false,
        "subscribed": false
    },
    {
        "client_msg_id": "85B25CF6-7E7E-49DD-B6BE-B0C5EDC82D80",
        "type": "message",
        "text": "\u2022 see <http://sqlsync.dev|http://sqlsync.dev>",
        "user": "UNCP67JSK",
        "ts": "1702645519.828639",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "z1zQb",
                "elements": [
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "see "
                                    },
                                    {
                                        "type": "link",
                                        "url": "http://sqlsync.dev",
                                        "text": "http://sqlsync.dev"
                                    }
                                ]
                            }
                        ],
                        "style": "bullet",
                        "indent": 0,
                        "offset": 0,
                        "border": 0
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "from_url": "http://sqlsync.dev/",
                "service_icon": "https://sqlsync.dev/_astro/favicon-dark-32x32.fcc404a4.png",
                "id": 1,
                "original_url": "http://sqlsync.dev",
                "fallback": "SQLSync",
                "text": "SQLSync is a collaborative offline-first wrapper around SQLite. It is designed to synchronize web application state between users, devices, and the edge.",
                "title": "SQLSync",
                "title_link": "http://sqlsync.dev/",
                "service_name": "sqlsync.dev"
            }
        ],
        "thread_ts": "1702645390.625979",
        "parent_user_id": "U018S42NMMM"
    },
    {
        "client_msg_id": "45c7eae0-4e66-464e-b39a-424b34b578bf",
        "type": "message",
        "text": "I can\u2019t vouch directly for this tool, but it sounds a bit like <https://electric-sql.com/>",
        "user": "UFPPABQ7P",
        "ts": "1702646104.563649",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "oTQ60",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I can\u2019t vouch directly for this tool, but it sounds a bit like "
                            },
                            {
                                "type": "link",
                                "url": "https://electric-sql.com/"
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "image_url": "https://electric-sql.com/img/meta.jpg",
                "image_width": 1920,
                "image_height": 1081,
                "image_bytes": 116521,
                "from_url": "https://electric-sql.com/",
                "service_icon": "https://electric-sql.com/favicon.ico",
                "id": 1,
                "original_url": "https://electric-sql.com/",
                "fallback": "ElectricSQL - Sync for modern apps",
                "text": "Build reactive, realtime, local-first apps directly on Postgres.",
                "title": "ElectricSQL - Sync for modern apps",
                "title_link": "https://electric-sql.com/",
                "service_name": "electric-sql.com"
            }
        ],
        "thread_ts": "1702645390.625979",
        "parent_user_id": "U018S42NMMM"
    },
    {
        "client_msg_id": "020a9408-b67c-43bc-9430-2e7bb4fe046f",
        "type": "message",
        "text": "Amazing resources! Thanks <@UNCP67JSK> <@UFPPABQ7P>\n\nOne reason I mentioned PARTIAL sync is for interactivity like  dragging and dropping (which requires tracking cursor position in the state) which is too costly to store for long-term.",
        "user": "U018S42NMMM",
        "ts": "1702646362.192089",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "B+NEP",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Amazing resources! Thanks "
                            },
                            {
                                "type": "user",
                                "user_id": "UNCP67JSK"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "user",
                                "user_id": "UFPPABQ7P"
                            },
                            {
                                "type": "text",
                                "text": "\n\nOne reason I mentioned PARTIAL sync is for interactivity like  dragging and dropping (which requires tracking cursor position in the state) which is too costly to store for long-term."
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1702645390.625979",
        "parent_user_id": "U018S42NMMM"
    },
    {
        "client_msg_id": "FB40A870-7AAB-420B-8679-F78A92086736",
        "type": "message",
        "text": "YES! Working on the same!",
        "user": "UNCP67JSK",
        "ts": "1702646500.829869",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "SWiSQ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "YES! Working on the same!"
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1702645390.625979",
        "parent_user_id": "U018S42NMMM"
    },
    {
        "client_msg_id": "9a55222b-72f1-497b-9059-6c5f9251bb2c",
        "type": "message",
        "text": "You might like to read about how Kinopio solved this by simply separating the events relevant to \u201crealtime\u201d from the events relevant to \u201cpersistence\u201d\n<https://pketh.org/how-kinopio-is-made.html>\n&gt; *Websockets* create that magical collaboration feeling by enabling a real-time stream of messages to be sent and received by a client, e.g. `Pirijan moved cardId ABC123 to position {x: 100, y: 200}`. These messages are relayed by the server to collaborators whose space state is updated. e.g. updating the position of the card.\n&gt; The problem with saving data with websockets is that they\u2019re _too_ fast. Authenticating that many messages per second and writing them to disk would be really inefficient. E.g. If you\u2019re moving a card from position `x: 20` to `x: 420`, Kinopio will use websockets to broadcast many updates during the move: `moving card x to 21`, `moving card x to 24`, `moving card x to 28`\u2026 potentially hundreds of messages. Or you could send a single API request after you\u2019ve moved the card, `PATCH card.x = 420`.",
        "user": "UFPPABQ7P",
        "ts": "1702647351.346089",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "HX1Zm",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "You might like to read about how Kinopio solved this by simply separating the events relevant to \u201crealtime\u201d from the events relevant to \u201cpersistence\u201d\n"
                            },
                            {
                                "type": "link",
                                "url": "https://pketh.org/how-kinopio-is-made.html"
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Websockets",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " create that magical collaboration feeling by enabling a real-time stream of messages to be sent and received by a client, e.g. "
                            },
                            {
                                "type": "text",
                                "text": "Pirijan moved cardId ABC123 to position {x: 100, y: 200}",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ". These messages are relayed by the server to collaborators whose space state is updated. e.g. updating the position of the card."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The problem with saving data with websockets is that they\u2019re "
                            },
                            {
                                "type": "text",
                                "text": "too",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " fast. Authenticating that many messages per second and writing them to disk would be really inefficient. E.g. If you\u2019re moving a card from position "
                            },
                            {
                                "type": "text",
                                "text": "x: 20",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " to "
                            },
                            {
                                "type": "text",
                                "text": "x: 420",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ", Kinopio will use websockets to broadcast many updates during the move: "
                            },
                            {
                                "type": "text",
                                "text": "moving card x to 21",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ", "
                            },
                            {
                                "type": "text",
                                "text": "moving card x to 24",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ", "
                            },
                            {
                                "type": "text",
                                "text": "moving card x to 28",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\u2026 potentially hundreds of messages. Or you could send a single API request after you\u2019ve moved the card, "
                            },
                            {
                                "type": "text",
                                "text": "PATCH card.x = 420",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "."
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "image_url": "https://pketh.org/images/2020/porco-rosso-engine.jpg",
                "image_width": 817,
                "image_height": 463,
                "image_bytes": 130651,
                "from_url": "https://pketh.org/how-kinopio-is-made.html",
                "service_icon": "https://pketh.org/favicon.ico?v=3",
                "ts": 1604534400,
                "id": 1,
                "original_url": "https://pketh.org/how-kinopio-is-made.html",
                "fallback": "pketh.org: How Kinopio is Made",
                "text": "You\u2019ve probably heard, or lived, a story that goes like this\u2026",
                "title": "How Kinopio is Made",
                "title_link": "https://pketh.org/how-kinopio-is-made.html",
                "service_name": "pketh.org"
            }
        ],
        "thread_ts": "1702645390.625979",
        "parent_user_id": "U018S42NMMM"
    },
    {
        "client_msg_id": "08197ef3-93d1-43ce-b62d-16ba373bc4b4",
        "type": "message",
        "text": "My kid just showed me this example at KhanAcademy where you can play back a video but also make changes to the state at any time: <https://www.khanacademy.org/computing/computer-programming/html-css/intro-to-css/pt/css-basics>\n\nIf you resume the playback, your changes get lost so the integrity of the standard history remains.",
        "user": "U018S42NMMM",
        "ts": "1702648470.520019",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "vvGWe",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "My kid just showed me this example at KhanAcademy where you can play back a video but also make changes to the state at any time: "
                            },
                            {
                                "type": "link",
                                "url": "https://www.khanacademy.org/computing/computer-programming/html-css/intro-to-css/pt/css-basics"
                            },
                            {
                                "type": "text",
                                "text": "\n\nIf you resume the playback, your changes get lost so the integrity of the standard history remains."
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "image_url": "https://cdn.kastatic.org/images/khan-logo-dark-background-2.png",
                "image_width": 1200,
                "image_height": 630,
                "image_bytes": 4675,
                "from_url": "https://www.khanacademy.org/computing/computer-programming/html-css/intro-to-css/pt/css-basics",
                "service_icon": "https://cdn.kastatic.org/images/apple-touch-icon-57x57-precomposed.new.png",
                "id": 1,
                "original_url": "https://www.khanacademy.org/computing/computer-programming/html-css/intro-to-css/pt/css-basics",
                "fallback": "Khan Academy: CSS Basics | Intro to CSS | Intro to HTML/CSS: Making webpages | Computer programming - JavaScript and the web | Computing | Khan Academy",
                "text": "Learn for free about math, art, computer programming, economics, physics, chemistry, biology, medicine, finance, history, and more. Khan Academy is a nonprofit with the mission of providing a free, world-class education for anyone, anywhere.",
                "title": "CSS Basics | Intro to CSS | Intro to HTML/CSS: Making webpages | Computer programming - JavaScript and the web | Computing | Khan Academy",
                "title_link": "https://www.khanacademy.org/computing/computer-programming/html-css/intro-to-css/pt/css-basics",
                "service_name": "Khan Academy"
            }
        ],
        "thread_ts": "1702645390.625979",
        "parent_user_id": "U018S42NMMM"
    },
    {
        "client_msg_id": "a5b63763-07c5-4957-bf9f-c0fe69973757",
        "type": "message",
        "text": "You could build that fairly straightforwardly with Redux, and MobX might also be able to do that.",
        "user": "U067RCH8NB0",
        "ts": "1702657954.864259",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "fOZOn",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "You could build that fairly straightforwardly with Redux, and MobX might also be able to do that."
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1702645390.625979",
        "parent_user_id": "U018S42NMMM"
    },
    {
        "client_msg_id": "286689bc-acb8-4206-af62-e028b6bc663d",
        "type": "message",
        "text": "The folks at <https://www.replay.io|Replay> have also productized something shaped like that for debugging.",
        "user": "U067RCH8NB0",
        "ts": "1702657977.351489",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "BaoO+",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The folks at "
                            },
                            {
                                "type": "link",
                                "url": "https://www.replay.io",
                                "text": "Replay"
                            },
                            {
                                "type": "text",
                                "text": " have also productized something shaped like that for debugging."
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "image_url": "https://www.replay.io/og-image.png",
                "image_width": 1200,
                "image_height": 642,
                "image_bytes": 244220,
                "from_url": "https://www.replay.io/",
                "service_icon": "https://www.replay.io/apple-touch-icon.png",
                "id": 1,
                "original_url": "https://www.replay.io",
                "fallback": "Replay - The time-travel debugger from the future.",
                "text": "Record and replay your application with DevTools.",
                "title": "Replay - The time-travel debugger from the future.",
                "title_link": "https://www.replay.io/",
                "service_name": "replay.io"
            }
        ],
        "thread_ts": "1702645390.625979",
        "parent_user_id": "U018S42NMMM"
    },
    {
        "client_msg_id": "55bb5f22-7704-4f8d-89b3-9dac9e876517",
        "type": "message",
        "text": "(Mark Erikson, one of the Redux maintainers for the past several years, works there. He would probably be happy to chat about some of the things they do, and they do a lot of \u201cworking in public\u201d as well. I can put you in touch with him if you like!)",
        "user": "U067RCH8NB0",
        "ts": "1702658040.497059",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "wv6+K",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "(Mark Erikson, one of the Redux maintainers for the past several years, works there. He would probably be happy to chat about some of the things they do, and they do a lot of \u201cworking in public\u201d as well. I can put you in touch with him if you like!)"
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1702645390.625979",
        "parent_user_id": "U018S42NMMM",
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UFPPABQ7P"
                ],
                "count": 1
            }
        ]
    }
]