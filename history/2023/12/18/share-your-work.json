[
    {
        "client_msg_id": "f0ec8964-eaf1-4411-8857-944a2b6efc1c",
        "type": "message",
        "text": "\"Apps considered harmful\"\n\n(or \"I can't believe how you all tolerate apps\")\n\nMy latest:\n\n<https://open.substack.com/pub/duncancragg/p/apps-considered-harmful?r=1sq2dz&amp;utm_campaign=post&amp;utm_medium=web>",
        "user": "UE6EFEPTQ",
        "ts": "1702896140.206779",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "bkoyQ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\"Apps considered harmful\"\n\n(or \"I can't believe how you all tolerate apps\")\n\nMy latest:\n\n"
                            },
                            {
                                "type": "link",
                                "url": "https://open.substack.com/pub/duncancragg/p/apps-considered-harmful?r=1sq2dz&utm_campaign=post&utm_medium=web"
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1702896140.206779",
        "reply_count": 14,
        "reply_users_count": 8,
        "latest_reply": "1703426022.465939",
        "reply_users": [
            "UE6EFEPTQ",
            "U04717WKH5K",
            "UCUSW7WVD",
            "U067RCH8NB0",
            "U05597GCDDK",
            "UMHG81CBH",
            "UJBAJNFLK",
            "U02QC0PPER3"
        ],
        "is_locked": false,
        "subscribed": false,
        "reactions": [
            {
                "name": "eyes",
                "users": [
                    "U023V63MF6V",
                    "UJBAJNFLK"
                ],
                "count": 2
            },
            {
                "name": "heavy_plus_sign",
                "users": [
                    "U01AD80KMLK"
                ],
                "count": 1
            },
            {
                "name": "cake",
                "users": [
                    "U05597GCDDK"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "0a4d3d1b-053c-4fda-8577-4a24530b769a",
        "type": "message",
        "text": "I've posted this to Twitter as well:\n\n<https://twitter.com/Duncan__Cragg/status/1736695163727057219>\n\nIn case you like to do your threads in public!\n\n(I've moved my techie Twitter to that account, by the way - feel free to follow me there! :hugging_face:)",
        "user": "UE6EFEPTQ",
        "ts": "1702896310.075289",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "+Nwd5",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I've posted this to Twitter as well:\n\n"
                            },
                            {
                                "type": "link",
                                "url": "https://twitter.com/Duncan__Cragg/status/1736695163727057219"
                            },
                            {
                                "type": "text",
                                "text": "\n\nIn case you like to do your threads in public!\n\n(I've moved my techie Twitter to that account, by the way - feel free to follow me there! "
                            },
                            {
                                "type": "emoji",
                                "name": "hugging_face",
                                "unicode": "1f917"
                            },
                            {
                                "type": "text",
                                "text": ")"
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "from_url": "https://twitter.com/Duncan__Cragg/status/1736695163727057219",
                "service_icon": "http://abs.twimg.com/favicons/twitter.3.ico",
                "thumb_url": "https://pbs.twimg.com/profile_images/1736339759285297152/m89BJ0wP_200x200.jpg",
                "thumb_width": 200,
                "thumb_height": 200,
                "id": 1,
                "original_url": "https://twitter.com/Duncan__Cragg/status/1736695163727057219",
                "fallback": "X (formerly Twitter): Duncan Cragg (@Duncan__Cragg) on X",
                "text": "\"Apps considered harmful\"\n\n(or \"I can't believe how you all tolerate apps\")\n\nMy latest:\n\n<https://t.co/gpGxU9k3A9>",
                "title": "Duncan Cragg (@Duncan__Cragg) on X",
                "title_link": "https://twitter.com/Duncan__Cragg/status/1736695163727057219",
                "service_name": "X (formerly Twitter)"
            }
        ],
        "thread_ts": "1702896140.206779",
        "parent_user_id": "UE6EFEPTQ"
    },
    {
        "client_msg_id": "514f2214-e66c-4c86-a750-ee536366db58",
        "type": "message",
        "text": "Reminds me of the work that Jef Raskin was doing when Jobs kicked him out of Apple, and that he picked up again later at a few places -- the demos I've seen/read about were compelling.",
        "user": "U04717WKH5K",
        "ts": "1702907379.420649",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "8PuHo",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Reminds me of the work that Jef Raskin was doing when Jobs kicked him out of Apple, and that he picked up again later at a few places -- the demos I've seen/read about were compelling."
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1702896140.206779",
        "parent_user_id": "UE6EFEPTQ"
    },
    {
        "client_msg_id": "792e6f62-3a04-4708-af0b-9aa6dbc8e10d",
        "type": "message",
        "text": "Hmm interesting, I looked Raskin up, but do you have a specific link for me/us showing what you found compelling?",
        "user": "UE6EFEPTQ",
        "ts": "1702915487.164729",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "PwuOf",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Hmm interesting, I looked Raskin up, but do you have a specific link for me/us showing what you found compelling?"
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1702896140.206779",
        "parent_user_id": "UE6EFEPTQ"
    },
    {
        "client_msg_id": "c63835ac-f842-40a0-85e4-ed43bf70f89e",
        "type": "message",
        "text": "I've always found your framing of \"not apps!\" distracting. You want better programs, and you want an OS that permits better programs. I don't really care whether you call those better things apps or something else[1].\n\nI think your argument would be improved by trying to strengthen the position you're opposing. Decompose the word \"app\" into what you think apps provide that is _good._ Off the top of my head:\n\u2022 Apps are units of behavior. They let you do new things.\n\u2022 They are units of namespacing. App A and App B might both have a button called 'foo' and it can mean different things.\n\u2022 They are units of software delivery. I give you some bits in a box, and you expect that the bits you got are exactly the bits I sent.\n\u2022 They are units of commerce. You give me some bits in a box, and I pay you some escudos.\n\u2022 ... What else?\nNow talk about what's wrong with the way people currently obtain these _features_, and how we can make things better. That would help me understand better what you're up to.\n\n[1] I also think \"app\" is prime memetic real estate that we should fight for and not just give up on. But that's a less important argument.",
        "user": "UCUSW7WVD",
        "ts": "1702916638.676799",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "A8VSZ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I've always found your framing of \"not apps!\" distracting. You want better programs, and you want an OS that permits better programs. I don't really care whether you call those better things apps or something else[1].\n\nI think your argument would be improved by trying to strengthen the position you're opposing. Decompose the word \"app\" into what you think apps provide that is "
                            },
                            {
                                "type": "text",
                                "text": "good.",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " Off the top of my head:\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Apps are units of behavior. They let you do new things."
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "They are units of namespacing. App A and App B might both have a button called 'foo' and it can mean different things."
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "They are units of software delivery. I give you some bits in a box, and you expect that the bits you got are exactly the bits I sent."
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "They are units of commerce. You give me some bits in a box, and I pay you some escudos."
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "... What else?"
                                    }
                                ]
                            }
                        ],
                        "style": "bullet",
                        "indent": 0,
                        "border": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nNow talk about what's wrong with the way people currently obtain these "
                            },
                            {
                                "type": "text",
                                "text": "features",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ", and how we can make things better. That would help me understand better what you're up to.\n\n[1] I also think \"app\" is prime memetic real estate that we should fight for and not just give up on. But that's a less important argument."
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1702896140.206779",
        "parent_user_id": "UE6EFEPTQ",
        "reactions": [
            {
                "name": "heavy_plus_sign",
                "users": [
                    "U067RCH8NB0",
                    "UML4ZEKDK",
                    "U5STGTB3J"
                ],
                "count": 3
            },
            {
                "name": "heart",
                "users": [
                    "U5STGTB3J",
                    "UJBAJNFLK",
                    "U02QC0PPER3"
                ],
                "count": 3
            },
            {
                "name": "100",
                "users": [
                    "U5STGTB3J"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "206bc952-516f-49e6-992c-6bdf09e290f6",
        "type": "message",
        "text": ">  but do you have a specific link for me/us showing what you found compelling?\nMy main exposure was his book \"The Humane Interface\", the <https://en.wikipedia.org/wiki/The_Humane_Interface|wikipedia> coverage gives the flavor, especially \"An end to stand-alone applications \u2013 every software package should be structured as a set of tools available to users on any document. For example, in the middle of writing a text document, a user should be able to do a mathematical computation by writing out the computation in the document, then hitting some \"calculate\" function\"",
        "user": "U04717WKH5K",
        "ts": "1702916803.048589",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "U/pcv",
                "elements": [
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": " but do you have a specific link for me/us showing what you found compelling?"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "My main exposure was his book \"The Humane Interface\", the "
                            },
                            {
                                "type": "link",
                                "url": "https://en.wikipedia.org/wiki/The_Humane_Interface",
                                "text": "wikipedia"
                            },
                            {
                                "type": "text",
                                "text": " coverage gives the flavor, especially \"An end to stand-alone applications \u2013 every software package should be structured as a set of tools available to users on any document. For example, in the middle of writing a text document, a user should be able to do a mathematical computation by writing out the computation in the document, then hitting some \"calculate\" function\""
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "edited": {
            "user": "U04717WKH5K",
            "ts": "1702916864.000000"
        },
        "thread_ts": "1702896140.206779",
        "parent_user_id": "UE6EFEPTQ"
    },
    {
        "client_msg_id": "668085d4-464f-4364-9fb8-3b64c14db735",
        "type": "message",
        "text": "This inspired me to write up a fairly off-the-cuff \u201cgut reaction\u201d type blog <https://v5.chriskrycho.com/journal/why-not-opendoc-alikes/|post>. As I note in the conclusion there:\n&gt; I do not think we are at a global maximum in software design.\n&gt; I do think that it is easy for folks dissatisfied with the limitations of apps to overlook the many powerful affordances they offer, though, and for computing aficionados to overestimate the degree to which regular users even _want_ to\u201dcompose together components\u201d; the simplicity of the \u201capp\u201d model is one of its great strengths, even as it also (at least in its current form) also hobbles\u201dpower usage\u201d even for those regular users.",
        "user": "U067RCH8NB0",
        "ts": "1702937902.625209",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "IC1ez",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "This inspired me to write up a fairly off-the-cuff \u201cgut reaction\u201d type blog "
                            },
                            {
                                "type": "link",
                                "url": "https://v5.chriskrycho.com/journal/why-not-opendoc-alikes/",
                                "text": "post"
                            },
                            {
                                "type": "text",
                                "text": ". As I note in the conclusion there:\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I do not think we are at a global maximum in software design.\nI do think that it is easy for folks dissatisfied with the limitations of apps to overlook the many powerful affordances they offer, though, and for computing aficionados to overestimate the degree to which regular users even "
                            },
                            {
                                "type": "text",
                                "text": "want",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " to\u201dcompose together components\u201d; the simplicity of the \u201capp\u201d model is one of its great strengths, even as it also (at least in its current form) also hobbles\u201dpower usage\u201d even for those regular users."
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "from_url": "https://v5.chriskrycho.com/journal/why-not-opendoc-alikes/",
                "ts": 1702891500,
                "id": 1,
                "original_url": "https://v5.chriskrycho.com/journal/why-not-opendoc-alikes/",
                "fallback": "Why Not OpenDoc-Alikes?\u200a\u2014\u200aSympolymathesy, by Chris Krycho",
                "text": "Maybe apps, for all their limitations, actually have some things going for them.",
                "title": "Why Not OpenDoc-Alikes?\u200a\u2014\u200aSympolymathesy, by Chris Krycho",
                "title_link": "https://v5.chriskrycho.com/journal/why-not-opendoc-alikes/",
                "service_name": "v5.chriskrycho.com"
            }
        ],
        "thread_ts": "1702896140.206779",
        "parent_user_id": "UE6EFEPTQ"
    },
    {
        "client_msg_id": "62e0958a-2138-46fb-952e-1f421997169f",
        "type": "message",
        "text": "(Note: very much \u201coff the cuff\u201d.)",
        "user": "U067RCH8NB0",
        "ts": "1702937914.223549",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Tcbcs",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "(Note: very much \u201coff the cuff\u201d.)"
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1702896140.206779",
        "parent_user_id": "UE6EFEPTQ"
    },
    {
        "client_msg_id": "a3a007a4-0af4-49ab-9f47-7982c2576563",
        "type": "message",
        "text": "&gt; For example, in the middle of writing a text document, a user should be able to do a mathematical computation by writing out the computation in the document, then hitting some \"calculate\" function\nWithout having much familiarity, this reminds me of Oberon?",
        "user": "U05597GCDDK",
        "ts": "1702940460.905759",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "q3J/C",
                "elements": [
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "For example, in the middle of writing a text document, a user should be able to do a mathematical computation by writing out the computation in the document, then hitting some \"calculate\" function"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Without having much familiarity, this reminds me of Oberon?"
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1702896140.206779",
        "parent_user_id": "UE6EFEPTQ"
    },
    {
        "client_msg_id": "d6c3a124-3dc0-4832-8dbd-dc33e3e8b303",
        "type": "message",
        "text": "<@U067RCH8NB0> I agree that most users don't want to tinker with their app, and that providing a set of features for them is valuable. I think what most people in this space want to do is create an environment where it's /possible/ to tinker with your app, without having to download the source, edit it, recompile it, submit a patch, etc. Just like a lot of people in e.g. accounting will re-use Excel sheets templates made by other people (or their past selves), I imagine that a sufficiently advanced tool would let you make a \"music notation\" template (kinda like a DSL in the end) that people can use out of the box, but still tinker with if the need arises. Whether this is possible in a user-friendly way remains an open question IMO.",
        "user": "UMHG81CBH",
        "ts": "1702976072.309599",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "7pXoQ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U067RCH8NB0"
                            },
                            {
                                "type": "text",
                                "text": " I agree that most users don't want to tinker with their app, and that providing a set of features for them is valuable. I think what most people in this space want to do is create an environment where it's /possible/ to tinker with your app, without having to download the source, edit it, recompile it, submit a patch, etc. Just like a lot of people in e.g. accounting will re-use Excel sheets templates made by other people (or their past selves), I imagine that a sufficiently advanced tool would let you make a \"music notation\" template (kinda like a DSL in the end) that people can use out of the box, but still tinker with if the need arises. Whether this is possible in a user-friendly way remains an open question IMO."
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UMHG81CBH",
            "ts": "1702976132.000000"
        },
        "thread_ts": "1702896140.206779",
        "parent_user_id": "UE6EFEPTQ"
    },
    {
        "client_msg_id": "2772e488-73f6-4d3e-8cc1-c80746f7b88f",
        "type": "message",
        "text": "To be sure, I am in favor of increasing tinkering, scriptability, etc. To pick up the example from the app I use as an example there, one of Dorico\u2019s gaps compared to one of its competitors (Sibelius) is robust scriptability\u2014though it is a long-standing plan of theirs, because it makes it possible to extend the capabilities of the app so much. (Dorico _can_ be scripted, with Lua, but it isn\u2019t a public/stable API yet.)\n\nI think the question is whether this is actually viable:\n> I imagine that a sufficiently advanced tool would let you make a \u201cmusic notation\u201d template (kinda like a DSL in the end) that people can use out of the box, but still tinker with if the need arises.\nThe domain complexities in any area I have tackled personally _or_ have just followed closely are just _astonishingly_ deep. It took _four years_ for the team that built Dorico to get it to its 1.0 release with what was basically a blank check from the parent company, Steinberg\u2026 and it was probably the 3.0 release a couple years later before it was earnestly competitive with its major competitors. That\u2019s the thing that makes me very :thinking_face: about any proposed \u201cdocument-centric\u201d model I have seen (as well as skeptical of general app skepticism). I notice, for example, that even in the Excel example, \u201cmuch more extensible\u201d or even \u201cmuch more user-programmable\u201d application \u2260 \u201cinverted model where applications are not primary but documents are\u201d.\n\nTo me, then, the more interesting framing is not \u201cdocument-centric\u201d but rather \u201cwhat would be the affordances of a host-environment that would make it easier for applications to surface embeddable components/elements/script hooks/etc.?\u201d",
        "user": "U067RCH8NB0",
        "ts": "1703005465.728349",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "4PYQN",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "To be sure, I am in favor of increasing tinkering, scriptability, etc. To pick up the example from the app I use as an example there, one of Dorico\u2019s gaps compared to one of its competitors (Sibelius) is robust scriptability\u2014though it is a long-standing plan of theirs, because it makes it possible to extend the capabilities of the app so much. (Dorico "
                            },
                            {
                                "type": "text",
                                "text": "can",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " be scripted, with Lua, but it isn\u2019t a public/stable API yet.)\n\nI think the question is whether this is actually viable:\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I imagine that a sufficiently advanced tool would let you make a \u201cmusic notation\u201d template (kinda like a DSL in the end) that people can use out of the box, but still tinker with if the need arises."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nThe domain complexities in any area I have tackled personally "
                            },
                            {
                                "type": "text",
                                "text": "or",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " have just followed closely are just "
                            },
                            {
                                "type": "text",
                                "text": "astonishingly",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " deep. It took "
                            },
                            {
                                "type": "text",
                                "text": "four years",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " for the team that built Dorico to get it to its 1.0 release with what was basically a blank check from the parent company, Steinberg\u2026 and it was probably the 3.0 release a couple years later before it was earnestly competitive with its major competitors. That\u2019s the thing that makes me very "
                            },
                            {
                                "type": "emoji",
                                "name": "thinking_face",
                                "unicode": "1f914"
                            },
                            {
                                "type": "text",
                                "text": " about any proposed \u201cdocument-centric\u201d model I have seen (as well as skeptical of general app skepticism). I notice, for example, that even in the Excel example, \u201cmuch more extensible\u201d or even \u201cmuch more user-programmable\u201d application \u2260 \u201cinverted model where applications are not primary but documents are\u201d.\n\nTo me, then, the more interesting framing is not \u201cdocument-centric\u201d but rather \u201cwhat would be the affordances of a host-environment that would make it easier for applications to surface embeddable components/elements/script hooks/etc.?\u201d"
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "edited": {
            "user": "U067RCH8NB0",
            "ts": "1703005662.000000"
        },
        "thread_ts": "1702896140.206779",
        "parent_user_id": "UE6EFEPTQ",
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UCUSW7WVD"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "9c168344-1dcd-402d-83bb-dcdfb48167db",
        "type": "message",
        "text": "&gt;  It took _four years_ for the team that built Dorico to get it to its 1.0 release with what was basically a blank check from the parent company, Steinberg\u2026 and it was probably the 3.0 release a couple years later before it was earnestly competitive with its major competitors.\n...and an important detail that's elided here: the Dorico team wasn't starting from scratch building domain expertise. They had built the industry-leading notation package and were fired en masse. They started the blank page redesign as the leading experts in the field already. The workflow and mental model they developed with an opportunity to start over are different enough that it's difficult to interoperate either as a user or from a document/file format POV that it's hard to imagine it working in a document-centric world without a huge loss of fidelity (and it's interesting to me that Raskin specifically calls out music notation as a great use case for that vision)",
        "user": "U04717WKH5K",
        "ts": "1703006826.002879",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Fv2Ui",
                "elements": [
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": " It took "
                            },
                            {
                                "type": "text",
                                "text": "four years",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " for the team that built Dorico to get it to its 1.0 release with what was basically a blank check from the parent company, Steinberg\u2026 and it was probably the 3.0 release a couple years later before it was earnestly competitive with its major competitors."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "...and an important detail that's elided here: the Dorico team wasn't starting from scratch building domain expertise. They had built the industry-leading notation package and were fired en masse. They started the blank page redesign as the leading experts in the field already. The workflow and mental model they developed with an opportunity to start over are different enough that it's difficult to interoperate either as a user or from a document/file format POV that it's hard to imagine it working in a document-centric world without a huge loss of fidelity (and it's interesting to me that Raskin specifically calls out music notation as a great use case for that vision)"
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1702896140.206779",
        "parent_user_id": "UE6EFEPTQ",
        "reactions": [
            {
                "name": "heavy_plus_sign",
                "users": [
                    "U067RCH8NB0"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "7b01ef53-bee5-4fc8-8c68-8323b23c6aa7",
        "type": "message",
        "text": "<@UCUSW7WVD> makes some very good points that feel familiar, as I am also working in the \"anti-app\" space, though not at the extremist (OS) level.\n\nI think it is important to pursue a positively formulated goal. \"No apps\" is a motivation, not a goal. You cannot move towards it.\n\nI have settled on \"computational media\" as my goal. I see that as a space of directly manipulable data to which computations are attached - a bit like a spreadsheet or a word processor, but for more diverse types of data and computation. I have no generalist intentions in this endeavor: my domain is computational science.\n\nOnce you take the \"computational media\" perspective, all the points that <@UCUSW7WVD> became very real issues. Namespacing is the easiest one, because it's just a matter of conventions, possibly enforced by a very transparent framework. It's less obvious how you can let people add behavior to a computational document while maintaining the good features of apps.\n\nFinally, a note on why I didn't choose the extremist perspective on \"no apps\": I actually like them for some purposes. There's a tensions between agency and convenience: the more agency you have over your computations, the more you need to engage with the technology, and that has a cost (in terms of effort). For many use cases, the convenience of apps is just fine with me. Weather apps? Great! E-mail apps? Horrible! For other people, it may be just the opposite of course.",
        "user": "UJBAJNFLK",
        "ts": "1703144172.513509",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "zThjO",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UCUSW7WVD"
                            },
                            {
                                "type": "text",
                                "text": " makes some very good points that feel familiar, as I am also working in the \"anti-app\" space, though not at the extremist (OS) level.\n\nI think it is important to pursue a positively formulated goal. \"No apps\" is a motivation, not a goal. You cannot move towards it.\n\nI have settled on \"computational media\" as my goal. I see that as a space of directly manipulable data to which computations are attached - a bit like a spreadsheet or a word processor, but for more diverse types of data and computation. I have no generalist intentions in this endeavor: my domain is computational science.\n\nOnce you take the \"computational media\" perspective, all the points that "
                            },
                            {
                                "type": "user",
                                "user_id": "UCUSW7WVD"
                            },
                            {
                                "type": "text",
                                "text": " became very real issues. Namespacing is the easiest one, because it's just a matter of conventions, possibly enforced by a very transparent framework. It's less obvious how you can let people add behavior to a computational document while maintaining the good features of apps.\n\nFinally, a note on why I didn't choose the extremist perspective on \"no apps\": I actually like them for some purposes. There's a tensions between agency and convenience: the more agency you have over your computations, the more you need to engage with the technology, and that has a cost (in terms of effort). For many use cases, the convenience of apps is just fine with me. Weather apps? Great! E-mail apps? Horrible! For other people, it may be just the opposite of course."
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1702896140.206779",
        "parent_user_id": "UE6EFEPTQ",
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "U5STGTB3J",
                    "UCUSW7WVD",
                    "UML4ZEKDK"
                ],
                "count": 3
            },
            {
                "name": "blue_heart",
                "users": [
                    "U067RCH8NB0"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "cb3500bd-0cf5-4bae-a46e-d59589850881",
        "type": "message",
        "text": "re namespacing in documents:\n\u2022 Boxer had a very inspiring take on this, distilling wide range of functionality to single structure \u2014 nesting (spatial \u21d4 functional) of boxes.  With lookup working inside-&gt;out, again ranging from variables and kinda-closures to \"apps\" by way of localized UI customizations, e.g. what do `mouse-click` or `key-F1` do is scoped to nearest box defining those names.  I'd say their <https://boxer-project.github.io/boxer-literature/papers/A%20Principled%20Design%20for%20an%20Integrated%20Computational%20Environment%20-%20ACM%20HCI%20(diSessa,%201985).pdf|Principled Design> paper remains the best entry point.\n&gt;  Use of the spatial metaphor is dependent on the fact that spatial structure\n&gt; can be extremely compatible with essential computational structures. In par-\n&gt; ticular, it will become apparent how two-dimensional configurations with\n&gt; containment representing hierarchy can subsume an important core structure\n&gt; to things like program and calling structure, hierarchical data, and file\n&gt; systems.\n\u2022 I found it interesting that Embark picked similar scoping model, only instead of nested boxes they present a more traditional outline.  (Specifically in their demo, icons were assigned to particular waypoints, but colors were only assigned at higher level of the outline, to days.  The map view looked for icons &amp; colors starting from each waypoint/route and going up the outline, thus adding a \"color: ...\" child to a day affected all points &amp; routes nested under it.)",
        "user": "U02QC0PPER3",
        "ts": "1703415117.474439",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Iy69q",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "re namespacing in documents:\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Boxer had a very inspiring take on this, distilling wide range of functionality to single structure \u2014 nesting (spatial \u21d4 functional) of boxes.  With lookup working inside->out, again ranging from variables and kinda-closures to \"apps\" by way of localized UI customizations, e.g. what do "
                                    },
                                    {
                                        "type": "text",
                                        "text": "mouse-click",
                                        "style": {
                                            "code": true
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "text": " or "
                                    },
                                    {
                                        "type": "text",
                                        "text": "key-F1",
                                        "style": {
                                            "code": true
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "text": " do is scoped to nearest box defining those names.  I'd say their "
                                    },
                                    {
                                        "type": "link",
                                        "url": "https://boxer-project.github.io/boxer-literature/papers/A%20Principled%20Design%20for%20an%20Integrated%20Computational%20Environment%20-%20ACM%20HCI%20(diSessa,%201985).pdf",
                                        "text": "Principled Design"
                                    },
                                    {
                                        "type": "text",
                                        "text": " paper remains the best entry point."
                                    }
                                ]
                            }
                        ],
                        "style": "bullet",
                        "indent": 0,
                        "border": 0
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": " Use of the spatial metaphor is dependent on the fact that spatial structure\ncan be extremely compatible with essential computational structures. In par-\nticular, it will become apparent how two-dimensional configurations with\ncontainment representing hierarchy can subsume an important core structure\nto things like program and calling structure, hierarchical data, and file\nsystems."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "I found it interesting that Embark picked similar scoping model, only instead of nested boxes they present a more traditional outline.  (Specifically in their demo, icons were assigned to particular waypoints, but colors were only assigned at higher level of the outline, to days.  The map view looked for icons & colors starting from each waypoint/route and going up the outline, thus adding a \"color: ...\" child to a day affected all points & routes nested under it.)"
                                    }
                                ]
                            }
                        ],
                        "style": "bullet",
                        "indent": 0,
                        "border": 0
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1702896140.206779",
        "parent_user_id": "UE6EFEPTQ"
    },
    {
        "client_msg_id": "52a82cc9-5d33-48d7-badf-190750635ca6",
        "type": "message",
        "text": "Apparently Alexander Obenauer was involved and seemed happy to try a less structured approach to data than his \"items\". I don't know what AO has to say about namespacing or structure. Perhaps others do? It seems transclusion of item inside item would be a key aspect in the UI anyway. CSS is an interesting model to plumb for this as well.",
        "user": "UE6EFEPTQ",
        "ts": "1703426022.465939",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "0DTl5",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Apparently Alexander Obenauer was involved and seemed happy to try a less structured approach to data than his \"items\". I don't know what AO has to say about namespacing or structure. Perhaps others do? It seems transclusion of item inside item would be a key aspect in the UI anyway. CSS is an interesting model to plumb for this as well."
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1702896140.206779",
        "parent_user_id": "UE6EFEPTQ"
    }
]