[
    {
        "client_msg_id": "35933a8a-b034-4af7-928a-80efc9c23457",
        "type": "message",
        "text": "One thing I've noticed working with Realtalk is that the natural language style tends to have a trade-off in making things easy to read, but a bit harder to write.. You can read them like English sentences but if you try to write them that way you probably will get a connective wrong or some other subtle thing and it won't parse or won't communicate with something else.\nMore generally I think it's easy to conflate readability and writeability, they're obviously related but still quite different properties.\nActually for a lot of things writeability is far more important than readability. E.g. when live-coding music you don't necessarily have to read/understand exactly what code is doing because you can understand the code by experiencing the results while writing, rather than reading the code.",
        "user": "U05SU27S1M2",
        "ts": "1695371739.666619",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "VtQa8",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "One thing I've noticed working with Realtalk is that the natural language style tends to have a trade-off in making things easy to read, but a bit harder to write.. You can read them like English sentences but if you try to write them that way you probably will get a connective wrong or some other subtle thing and it won't parse or won't communicate with something else.\nMore generally I think it's easy to conflate readability and writeability, they're obviously related but still quite different properties.\nActually for a lot of things writeability is far more important than readability. E.g. when live-coding music you don't necessarily have to read/understand exactly what code is doing because you can understand the code by experiencing the results while writing, rather than reading the code."
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "edited": {
            "user": "U05SU27S1M2",
            "ts": "1695371782.000000"
        },
        "thread_ts": "1695371739.666619",
        "reply_count": 7,
        "reply_users_count": 4,
        "latest_reply": "1695497339.284899",
        "reply_users": [
            "U04E5QAD6DD",
            "U05SU27S1M2",
            "UA14TGLTC",
            "U02U0AS3J49"
        ],
        "is_locked": false,
        "subscribed": false,
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UJBAJNFLK"
                ],
                "count": 1
            },
            {
                "name": "+1::skin-tone-3",
                "users": [
                    "UCUSW7WVD"
                ],
                "count": 1
            },
            {
                "name": "100",
                "users": [
                    "U02U0AS3J49"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "9cd9bc39-a822-4c35-9961-8c9736149add",
        "type": "message",
        "text": "That's interesting \u2014 that sounds kind of like an uncanny valley of prose &amp; programming?\n\n(I wonder how Inform manages to escape that trap\u2026or doesn't it?)",
        "user": "U04E5QAD6DD",
        "ts": "1695386854.354549",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "CpGq",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "That's interesting \u2014 that sounds kind of like an uncanny valley of prose & programming?\n\n(I wonder how Inform manages to escape that trap\u2026or doesn't it?)"
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1695371739.666619",
        "parent_user_id": "U05SU27S1M2"
    },
    {
        "client_msg_id": "44187fe8-f871-4422-b117-a261ee1cd395",
        "type": "message",
        "text": "I wouldn't say it's a trap, just a tradeoff.. and something you quickly get used to.",
        "user": "U05SU27S1M2",
        "ts": "1695387050.922189",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "EtX",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I wouldn't say it's a trap, just a tradeoff.. and something you quickly get used to."
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1695371739.666619",
        "parent_user_id": "U05SU27S1M2",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U04E5QAD6DD"
                ],
                "count": 1
            },
            {
                "name": "+1::skin-tone-3",
                "users": [
                    "UCUSW7WVD"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "40ec2336-0939-4169-abc9-216c14df2e53",
        "type": "message",
        "text": "Tool support.  Consider that beyond concerns of getting the syntax right, you want to \"experiencing the results\" to know whether it does the right thing.  For example, whether whatever assumptions or mental model you had when writing the rule play well with the rest of the environment.",
        "user": "UA14TGLTC",
        "ts": "1695391688.501619",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Hwovh",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Tool support.  Consider that beyond concerns of getting the syntax right, you want to \"experiencing the results\" to know whether it does the right thing.  For example, whether whatever assumptions or mental model you had when writing the rule play well with the rest of the environment."
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1695371739.666619",
        "parent_user_id": "U05SU27S1M2"
    },
    {
        "client_msg_id": "537e23f4-8c37-4587-8dbc-f8a32284670d",
        "type": "message",
        "text": "<@UA14TGLTC> That seems to suggest a hylomorphic way of working where you know what the results should be before you make it. I'd say that's generally not how people make things, i.e. that experiencing the results is more about understanding what you wrote for the first time, rather than seeing whether you got what you originally wanted.",
        "user": "U05SU27S1M2",
        "ts": "1695392003.407949",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ZagXX",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UA14TGLTC"
                            },
                            {
                                "type": "text",
                                "text": " That seems to suggest a hylomorphic way of working where you know what the results should be before you make it. I'd say that's generally not how people make things, i.e. that experiencing the results is more about understanding what you wrote for the first time, rather than seeing whether you got what you originally wanted."
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1695371739.666619",
        "parent_user_id": "U05SU27S1M2"
    },
    {
        "client_msg_id": "801F8CC3-08BD-4879-9F79-F3FA20C0F1A0",
        "type": "message",
        "text": "More I was thinking of the system working with you to disambiguate, refine, so you don\u2019t exactly know what you want in advance but when presented with options with differences clearly indicated, you might be better at refining your idea.",
        "user": "UA14TGLTC",
        "ts": "1695393566.206979",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "EqC+Z",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "More I was thinking of the system working with you to disambiguate, refine, so you don\u2019t exactly know what you want in advance but when presented with options with differences clearly indicated"
                            },
                            {
                                "type": "text",
                                "text": ","
                            },
                            {
                                "type": "text",
                                "text": " you might be better at refining your idea"
                            },
                            {
                                "type": "text",
                                "text": "."
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1695371739.666619",
        "parent_user_id": "U05SU27S1M2",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U05SU27S1M2"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "e559d9f2-6a9b-4a55-9d04-6d8fddfc0c35",
        "type": "message",
        "text": "I opted for Blockly's structured editor instead of controlled natural language in text for exactly this reason. Easy to read and easy to write are orthagonal. I think a lot of controlled natural languages actually end up as a worse user experience as a result of the false expectation they set up that writing it will be easy, and how violently that high expectation is violated. A regular code language at least looks hard to write, so when it is you don't feel like you've been lied to.",
        "user": "U02U0AS3J49",
        "ts": "1695406987.187959",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "f2IYE",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I opted for Blockly's structured editor instead of controlled natural language in text for exactly this reason. Easy to read and easy to write are orthagonal. I think a lot of controlled natural languages actually end up as a worse user experience as a result of the false expectation they set up that writing it will be easy, and how violently that high expectation is violated. A regular code language at least looks hard to write, so when it is you don't feel like you've been lied to."
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1695371739.666619",
        "parent_user_id": "U05SU27S1M2"
    },
    {
        "client_msg_id": "31e91bb3-b637-41dc-98ae-e696f3ae35fa",
        "type": "message",
        "text": "(It turns out they're going to solve this with autocomplete-style features)",
        "user": "U05SU27S1M2",
        "ts": "1695497339.284899",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "xU1OT",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "(It turns out they're going to solve this with autocomplete-style features)"
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1695371739.666619",
        "parent_user_id": "U05SU27S1M2"
    }
]