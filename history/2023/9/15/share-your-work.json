[
    {
        "client_msg_id": "49d21c37-14a9-4e6e-98f1-388ea0d96411",
        "type": "message",
        "text": ":dna: UI Combinators: express complex UIs by composing a small set of combinators and terminals\n\n:deciduous_tree: Combinators: Option, Alternatives, List &amp; Record\n\n:maple_leaf: Terminals:  Int, Float, Bool, ConstantSet (select), Text, Color, Date, Time etc\n\n<https://www.youtube.com/watch?v=5VMiwcWHzEs>",
        "user": "UBN9AFS0N",
        "ts": "1694792007.072769",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "IV/0",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "emoji",
                                "name": "dna",
                                "unicode": "1f9ec"
                            },
                            {
                                "type": "text",
                                "text": " UI Combinators: express complex UIs by composing a small set of combinators and terminals\n\n"
                            },
                            {
                                "type": "emoji",
                                "name": "deciduous_tree",
                                "unicode": "1f333"
                            },
                            {
                                "type": "text",
                                "text": " Combinators: Option, Alternatives, List & Record\n\n"
                            },
                            {
                                "type": "emoji",
                                "name": "maple_leaf",
                                "unicode": "1f341"
                            },
                            {
                                "type": "text",
                                "text": " Terminals:  Int, Float, Bool, ConstantSet (select), Text, Color, Date, Time etc\n\n"
                            },
                            {
                                "type": "link",
                                "url": "https://www.youtube.com/watch?v=5VMiwcWHzEs"
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "edited": {
            "user": "UBN9AFS0N",
            "ts": "1694804861.000000"
        },
        "attachments": [
            {
                "from_url": "https://www.youtube.com/watch?v=5VMiwcWHzEs",
                "service_icon": "https://a.slack-edge.com/80588/img/unfurl_icons/youtube.png",
                "thumb_url": "https://i.ytimg.com/vi/5VMiwcWHzEs/hqdefault.jpg",
                "thumb_width": 480,
                "thumb_height": 360,
                "video_html": "<iframe width=\"400\" height=\"300\" src=\"https://www.youtube.com/embed/5VMiwcWHzEs?feature=oembed&autoplay=1&iv_load_policy=3\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" allowfullscreen title=\"UI Combinators / Regular UI Expressions\"></iframe>",
                "video_html_width": 400,
                "video_html_height": 300,
                "id": 1,
                "original_url": "https://www.youtube.com/watch?v=5VMiwcWHzEs",
                "fallback": "YouTube Video: UI Combinators / Regular UI Expressions",
                "title": "UI Combinators / Regular UI Expressions",
                "title_link": "https://www.youtube.com/watch?v=5VMiwcWHzEs",
                "author_name": "Mariano Guerra",
                "author_link": "https://www.youtube.com/@marianoguerra7015",
                "service_name": "YouTube",
                "service_url": "https://www.youtube.com/"
            }
        ],
        "thread_ts": "1694792007.072769",
        "reply_count": 6,
        "reply_users_count": 3,
        "latest_reply": "1694854966.739719",
        "reply_users": [
            "U03LJBR6THT",
            "UBN9AFS0N",
            "UC21F8Q48"
        ],
        "is_locked": false,
        "subscribed": true,
        "last_read": "1694854966.739719",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U03C0DRJB8B"
                ],
                "count": 1
            },
            {
                "name": "boom",
                "users": [
                    "UCUSW7WVD"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "95ed26b4-39fc-4fce-9515-e290975ed929",
        "type": "message",
        "text": "I'd like to see this in combination of your foldable UIs to switch between the nested combinator UI &amp; a condensed (maybe text) syntax.\n\nBonus would be able to click on parts of the dense UI &amp; expand &amp; focus to the combinator which controls that part.",
        "user": "U03LJBR6THT",
        "ts": "1694795185.567329",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "75yD",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I'd like to see this in combination of your foldable UIs to switch between the nested combinator UI & a condensed (maybe text) syntax.\n\nBonus would be able to click on parts of the dense UI & expand & focus to the combinator which controls that part."
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "edited": {
            "user": "U03LJBR6THT",
            "ts": "1694795200.000000"
        },
        "thread_ts": "1694792007.072769",
        "parent_user_id": "UBN9AFS0N"
    },
    {
        "client_msg_id": "f39a1a9c-9a20-41ca-9d7b-1298393ad235",
        "type": "message",
        "text": "yep, I will add back the fold in a generic way, when you switch between alternatives the new one will get the last one as argument, if it knows how to create an instance from it, it will, if not it will return the default instance. This way the previous demo will work as is in case you have an Alt of UrlText and UrlRecord",
        "user": "UBN9AFS0N",
        "ts": "1694804950.878759",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "GPsK",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "yep, I will add back the fold in a generic way, when you switch between alternatives the new one will get the last one as argument, if it knows how to create an instance from it, it will, if not it will return the default instance. This way the previous demo will work as is in case you have an Alt of UrlText and UrlRecord"
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1694792007.072769",
        "parent_user_id": "UBN9AFS0N",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U03LJBR6THT"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "492368F9-4047-459A-A56D-CF9EF88428A4",
        "type": "message",
        "text": "Type based UIs!!!",
        "user": "UC21F8Q48",
        "ts": "1694821887.007759",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "evcz",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Type based UIs!!!"
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1694792007.072769",
        "parent_user_id": "UBN9AFS0N",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UEZQXJK9V"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "188ae348-a03f-439e-89ae-d811fd7abb1e",
        "type": "message",
        "text": "in a sense yes, but also I noticed those \"combinators\" in other places like peg parsers and regular expressions, it seems they are some sort of fundamental combinators we keep coming up with and naming differently :stuck_out_tongue:",
        "user": "UBN9AFS0N",
        "ts": "1694854790.766259",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ocQ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "in a sense yes, but also I noticed those \"combinators\" in other places like peg parsers and regular expressions, it seems they are some sort of fundamental combinators we keep coming up with and naming differently "
                            },
                            {
                                "type": "emoji",
                                "name": "stuck_out_tongue",
                                "unicode": "1f61b"
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1694792007.072769",
        "parent_user_id": "UBN9AFS0N"
    },
    {
        "client_msg_id": "cd5be133-4a8e-40ef-a254-43cbfe06a29b",
        "type": "message",
        "text": "from ohmjs docs: Rules (record), Sequence (List), Alternation (Alternatives), Terminal, Terminal Range (Enum)",
        "user": "UBN9AFS0N",
        "ts": "1694854876.529209",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "HHaH",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "from ohmjs docs: Rules (record), Sequence (List), Alternation (Alternatives), Terminal, Terminal Range (Enum)"
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1694792007.072769",
        "parent_user_id": "UBN9AFS0N"
    },
    {
        "client_msg_id": "8bd3bb6b-3ffe-44da-a794-39dcce2ae6d1",
        "type": "message",
        "text": "inb4 category theory, homotopy type theory or something like that :smile:",
        "user": "UBN9AFS0N",
        "ts": "1694854966.739719",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "eiFhD",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "inb4 category theory, homotopy type theory or something like that "
                            },
                            {
                                "type": "emoji",
                                "name": "smile",
                                "unicode": "1f604"
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1694792007.072769",
        "parent_user_id": "UBN9AFS0N"
    }
]