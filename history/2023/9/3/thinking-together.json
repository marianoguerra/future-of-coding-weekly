[
    {
        "client_msg_id": "F52E785E-E9FC-48A1-A178-5711E077AECB",
        "type": "message",
        "text": "Thoughts? <https://twitter.com/cis_female/status/1697763571751674297?s=20|https://twitter.com/cis_female/status/1697763571751674297?s=20>",
        "user": "ULM3U6275",
        "ts": "1693699892.398749",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Ot1",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Thoughts? "
                            },
                            {
                                "type": "link",
                                "url": "https://twitter.com/cis_female/status/1697763571751674297?s=20",
                                "text": "https://twitter.com/cis_female/status/1697763571751674297?s=20"
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "from_url": "https://twitter.com/cis_female/status/1697763571751674297?s=20",
                "service_icon": "http://abs.twimg.com/favicons/twitter.3.ico",
                "thumb_url": "https://pbs.twimg.com/profile_images/1493424101624483844/xj-OS5rH_200x200.jpg",
                "thumb_width": 200,
                "thumb_height": 200,
                "id": 1,
                "original_url": "https://twitter.com/cis_female/status/1697763571751674297?s=20",
                "fallback": "X (formerly Twitter): sophia :chart: (8723/30000 days alive) on X",
                "text": "I feel like it\u2019s not obvious to consumers how monumental and expensive regular software is. iOS cost about as much as the Manhattan project (~$20b). Google search cost about as much as the ISS (~$100b).",
                "title": "sophia :chart: (8723/30000 days alive) on X",
                "title_link": "https://twitter.com/cis_female/status/1697763571751674297?s=20",
                "service_name": "X (formerly Twitter)"
            }
        ],
        "thread_ts": "1693699892.398749",
        "reply_count": 8,
        "reply_users_count": 4,
        "latest_reply": "1693765247.800429",
        "reply_users": [
            "U03CEGR3HSL",
            "U05597GCDDK",
            "UCUSW7WVD",
            "U0245E9RB2B"
        ],
        "is_locked": false,
        "subscribed": false
    },
    {
        "client_msg_id": "c55379e7-c026-46c0-9eb2-af8a5e3fb2ba",
        "type": "message",
        "text": "It seems like more evidence that the software crisis never actually ended. We kind of just gave up on solving it.\n\n<https://en.m.wikipedia.org/wiki/Software_crisis|https://en.m.wikipedia.org/wiki/Software_crisis>",
        "user": "U03CEGR3HSL",
        "ts": "1693700123.285479",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "sD03s",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "It seems like more evidence that the software crisis never actually ended. We kind of just gave up on solving it.\n\n"
                            },
                            {
                                "type": "link",
                                "url": "https://en.m.wikipedia.org/wiki/Software_crisis",
                                "text": "https://en.m.wikipedia.org/wiki/Software_crisis"
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "from_url": "https://en.m.wikipedia.org/wiki/Software_crisis",
                "service_icon": "https://a.slack-edge.com/80588/img/unfurl_icons/wikipedia.png",
                "id": 1,
                "original_url": "https://en.m.wikipedia.org/wiki/Software_crisis",
                "fallback": "wikipedia: Software crisis",
                "text": "Software crisis is a term used in the early days of computing science for the difficulty of writing useful and efficient computer programs in the required time. The software crisis was due to the rapid increases in computer power and the complexity of the problems that could not be tackled. With the increase in the complexity of the software, many software problems arose because existing methods were inadequate.",
                "title": "Software crisis",
                "title_link": "https://en.m.wikipedia.org/wiki/Software_crisis",
                "author_name": "Wikipedia",
                "author_link": "https://en.wikipedia.org/"
            }
        ],
        "thread_ts": "1693699892.398749",
        "parent_user_id": "ULM3U6275",
        "reactions": [
            {
                "name": "100",
                "users": [
                    "UGWUJUZHT",
                    "U05597GCDDK",
                    "ULM3U6275",
                    "U0245E9RB2B",
                    "U04QB9V2RNG",
                    "UCUSW7WVD"
                ],
                "count": 6
            }
        ]
    },
    {
        "client_msg_id": "3532cc69-b550-4c86-81f6-24295076ea70",
        "type": "message",
        "text": "I take issue with the term \"regular\" for iOS and Google! They might be extremely widespread, but they don't seem to me in any way typical...",
        "user": "U05597GCDDK",
        "ts": "1693706256.727569",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "DMlQ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I take issue with the term \"regular\" for iOS and Google! They might be extremely widespread, but they don't seem to me in any way typical..."
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1693699892.398749",
        "parent_user_id": "ULM3U6275",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UC2A2ARPT",
                    "U0245E9RB2B"
                ],
                "count": 2
            },
            {
                "name": "+1::skin-tone-3",
                "users": [
                    "UCUSW7WVD"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "db9e16be-1808-48b9-84d5-ba2f3e1e5771",
        "type": "message",
        "text": "Things naturally cost more if they bring in more revenue. If you help to gradually bring in $100M/yr in revenue, $20M/yr will almost naturally stick to your palms. But that doesn't necessarily compare with efficiencies from an existential war 80 years ago (did the calculation account for inflation?!). In my experience revenues are justification for _reduced_ efficiency. And none of this accounts for the value to society, which is a fraction of the cost if you could somehow (naive, I know) stop trying to think up new ways to juice revenues in user hostile ways.\n\nOf course, how do you build just the valuable parts without the hostile parts? You got me..\n\n(This comment partly inspired by the sprawling thread spawned by <https://wandering.shop/@cstross/110989030686287315|https://wandering.shop/@cstross/110989030686287315>)",
        "user": "UCUSW7WVD",
        "ts": "1693711277.958419",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "SLeh",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Things naturally cost more if they bring in more revenue. If you help to gradually bring in $100M/yr in revenue, $20M/yr will almost naturally stick to your palms. But that doesn't necessarily compare with efficiencies from an existential war 80 years ago (did the calculation account for inflation?!). In my experience revenues are justification for "
                            },
                            {
                                "type": "text",
                                "text": "reduced",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " efficiency. And none of this accounts for the value to society, which is a fraction of the cost if you could somehow (naive, I know) stop trying to think up new ways to juice revenues in user hostile ways.\n\nOf course, how do you build just the valuable parts without the hostile parts? You got me..\n\n(This comment partly inspired by the sprawling thread spawned by "
                            },
                            {
                                "type": "link",
                                "url": "https://wandering.shop/@cstross/110989030686287315",
                                "text": "https://wandering.shop/@cstross/110989030686287315"
                            },
                            {
                                "type": "text",
                                "text": ")"
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "from_url": "https://wandering.shop/@cstross/110989030686287315",
                "service_icon": "https://wandering.shop/favicon.ico",
                "ts": 1693558207,
                "id": 1,
                "original_url": "https://wandering.shop/@cstross/110989030686287315",
                "fallback": "The Wandering Shop: Charlie Stross (@cstross@wandering.shop)",
                "text": "@hywan@fosstodon.org @Keltounet@mastodon.social Question: \"can the state of shells be improved enough to overcome the inertia of sticking to what you know?\"\n\nThis is the wrong question. It presupposes zero cost of transition, while the cognitive workload of learning a new shell rises exponentially with age (hint: I'm nearly 60, shells are harder to adapt to than a new GUI). Stability and continuity are essential prerequisites to productivity!",
                "title": "Charlie Stross (@cstross@wandering.shop)",
                "title_link": "https://wandering.shop/@cstross/110989030686287315",
                "service_name": "The Wandering Shop"
            }
        ],
        "thread_ts": "1693699892.398749",
        "parent_user_id": "ULM3U6275"
    },
    {
        "client_msg_id": "83dc6c5b-e3d8-4031-993a-830928bb2af1",
        "type": "message",
        "text": "The whole idea that a project the size of Google search can be assigned a specific cost misunderstands how large software projects work.\n\nAny sufficiently large software project eventually reaches a tipping point where it's too complex to refactor without breaking it. And at that point the complexity and cost of the system spiral out of control.\n\nI work on a distributed database product that's built on SQL Server, which reached that point many years ago. Only a handful of people with decades of experience dare to touch the lower levels of the codebase - most of us just glue new pieces on top as best we can.\n\nBut if a project is lucrative enough, companies will keep shoveling in resources to keep it going. And the SQL org brings in billions, so Microsoft is fine with paying thousands of engineers to work there.\n\nAt that scale, it doesn't really make sense to talk about the cost of a software project, since it's bounded only by the revenue the product brings in.\n\nAnd that applies even to a project like SQL Server, which is built purely to provide a service and (as far as I know) doesn't include \"hostile\" features designed to extract additional revenue from users.",
        "user": "U0245E9RB2B",
        "ts": "1693713714.777999",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "uuX",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The whole idea that a project the size of Google search can be assigned a specific cost misunderstands how large software projects work.\n\nAny sufficiently large software project eventually reaches a tipping point where it's too complex to refactor without breaking it. And at that point the complexity and cost of the system spiral out of control.\n\nI work on a distributed database product that's built on SQL Server, which reached that point many years ago. Only a handful of people with decades of experience dare to touch the lower levels of the codebase - most of us just glue new pieces on top as best we can.\n\nBut if a project is lucrative enough, companies will keep shoveling in resources to keep it going. And the SQL org brings in billions, so Microsoft is fine with paying thousands of engineers to work there.\n\nAt that scale, it doesn't really make sense to talk about the cost of a software project, since it's bounded only by the revenue the product brings in.\n\nAnd that applies even to a project like SQL Server, which is built purely to provide a service and (as far as I know) doesn't include \"hostile\" features designed to extract additional revenue from users."
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1693699892.398749",
        "parent_user_id": "ULM3U6275",
        "reactions": [
            {
                "name": "100",
                "users": [
                    "UCUSW7WVD"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "f4b9d688-947f-40d3-9d04-4db9cd5af04d",
        "type": "message",
        "text": "<@U03CEGR3HSL> Now that I've read the link, I suppose this spiraling of complexity is what you're referring to as the \"software crisis\"? Do you think that's a problem that actually can be solved?",
        "user": "U0245E9RB2B",
        "ts": "1693713825.902589",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "BYf4",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U03CEGR3HSL"
                            },
                            {
                                "type": "text",
                                "text": " Now that I've read the link, I suppose this spiraling of complexity is what you're referring to as the \"software crisis\"? Do you think that's a problem that actually can be solved?"
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1693699892.398749",
        "parent_user_id": "ULM3U6275"
    },
    {
        "client_msg_id": "29f761f9-6907-4119-afa0-68be11bcb8aa",
        "type": "message",
        "text": "<@U0245E9RB2B>  I think spiraling complexity is a main part of it, but I don't claim to fully understand it.\n\nI believe it can be solved by using smaller teams and technologies that increase individual productivity instead of technologies that try to protect hundreds of programmers from stepping on each other, like Java. I can't prove it, though.\n\nI'm very fond of Seymour Cray's response to Thomas Watson Jr. From <https://en.m.wikipedia.org/wiki/CDC_6600|https://en.m.wikipedia.org/wiki/CDC_6600>\n\n`The 6600 was three times faster than the previous record-holder, the IBM 7030 Stretch; this alarmed IBM. Then-CEO Thomas Watson Jr. wrote a memo to his employees on August 28, 1963: \"Last week, Control Data ... announced the 6600 system. I understand that in the laboratory developing the system there are only 34 people including the janitor. Of these, 14 are engineers and 4 are programmers ... Contrasting this modest effort with our vast development activities, I fail to understand why we have lost our industry leadership position by letting someone else offer the world's most powerful computer.\" Cray's reply was sardonic: \"It seems like Mr. Watson has answered his own question.\"`",
        "user": "U03CEGR3HSL",
        "ts": "1693758882.913779",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "o1AB=",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U0245E9RB2B"
                            },
                            {
                                "type": "text",
                                "text": "  I think spiraling complexity is a main part of it, but I don't claim to fully understand it.\n\nI believe it can be solved by using smaller teams and technologies that increase individual productivity instead of technologies that try to protect hundreds of programmers from stepping on each other, like Java. I can't prove it, though.\n\nI'm very fond of Seymour Cray's response to Thomas Watson Jr. From "
                            },
                            {
                                "type": "link",
                                "url": "https://en.m.wikipedia.org/wiki/CDC_6600",
                                "text": "https://en.m.wikipedia.org/wiki/CDC_6600"
                            },
                            {
                                "type": "text",
                                "text": "\n\n"
                            },
                            {
                                "type": "text",
                                "text": "The 6600 was three times faster than the previous record-holder, the IBM 7030 Stretch; this alarmed IBM. Then-CEO Thomas Watson Jr. wrote a memo to his employees on August 28, 1963: \"Last week, Control Data ... announced the 6600 system. I understand that in the laboratory developing the system there are only 34 people including the janitor. Of these, 14 are engineers and 4 are programmers ... Contrasting this modest effort with our vast development activities, I fail to understand why we have lost our industry leadership position by letting someone else offer the world's most powerful computer.\" Cray's reply was sardonic: \"It seems like Mr. Watson has answered his own question.\"",
                                "style": {
                                    "code": true
                                }
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "image_url": "https://upload.wikimedia.org/wikipedia/commons/thumb/b/be/CDC_6600_Overview.png/1200px-CDC_6600_Overview.png",
                "image_width": 1200,
                "image_height": 680,
                "image_bytes": 191804,
                "from_url": "https://en.m.wikipedia.org/wiki/CDC_6600",
                "service_icon": "https://a.slack-edge.com/80588/img/unfurl_icons/wikipedia.png",
                "id": 1,
                "original_url": "https://en.m.wikipedia.org/wiki/CDC_6600",
                "fallback": "wikipedia: CDC 6600",
                "text": "The CDC 6600 was the flagship of the 6000 series of mainframe computer systems manufactured by Control Data Corporation. Generally considered to be the first successful supercomputer, it outperformed the industry's prior recordholder, the IBM 7030 Stretch, by a factor of three. With performance of up to three megaFLOPS, the CDC 6600 was the world's fastest computer from 1964 to 1969, when it relinquished that status to its successor, the CDC 7600.The first CDC 6600s were delivered in 1965 to Livermore and Los Alamos. They quickly became a must-have system in high-end scientific and mathematical computing, with systems being delivered to Courant Institute of Mathematical Sciences, CERN, the Lawrence Radiation Laboratory, and many others. At least 100 were delivered in total.A CDC 6600 is on display at the Computer History Museum in Mountain View, California. The only running CDC 6000 series machine has been restored by Living Computers: Museum + Labs.",
                "title": "CDC 6600",
                "title_link": "https://en.m.wikipedia.org/wiki/CDC_6600",
                "author_name": "Wikipedia",
                "author_link": "https://en.wikipedia.org/"
            }
        ],
        "thread_ts": "1693699892.398749",
        "parent_user_id": "ULM3U6275",
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UCUSW7WVD"
                ],
                "count": 1
            },
            {
                "name": "+1",
                "users": [
                    "U0245E9RB2B"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "8fc02fc9-1e7e-4052-b4a4-8bfe0ef79bf3",
        "type": "message",
        "text": "<@U03CEGR3HSL> Yes, there are large coordination costs when too many people are involved in a project. And that applies on the political side at least as much as the technical side - I haven't ever seen an effective decision get made if more than three people are actively involved.\n\nBut large companies are also wary of trusting any single individual with too much responsibility. They have to be prepared for anyone to jump to a different company at any moment. So just like the software, the organization itself is a distributed system with a high level of redundancy.\n\nStartups usually can't afford to have that redundancy, at least in the early stages. I think they just accept a high risk of failure instead. And most of them do fall, but the handful that succeed are more productive by orders of magnitude.",
        "user": "U0245E9RB2B",
        "ts": "1693765084.149269",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "afvG",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U03CEGR3HSL"
                            },
                            {
                                "type": "text",
                                "text": " Yes, there are large coordination costs when too many people are involved in a project. And that applies on the political side at least as much as the technical side - I haven't ever seen an effective decision get made if more than three people are actively involved.\n\nBut large companies are also wary of trusting any single individual with too much responsibility. They have to be prepared for anyone to jump to a different company at any moment. So just like the software, the organization itself is a distributed system with a high level of redundancy.\n\nStartups usually can't afford to have that redundancy, at least in the early stages. I think they just accept a high risk of failure instead. And most of them do fall, but the handful that succeed are more productive by orders of magnitude."
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1693699892.398749",
        "parent_user_id": "ULM3U6275"
    },
    {
        "client_msg_id": "b9c202f4-ca6a-4f15-8710-072a22626d51",
        "type": "message",
        "text": "<@U0245E9RB2B>  I think the secret there is to take Peter Naur seriously and make sure that at least three people in your organization always have the theory of the program. Once you get down to two or, God forbid, one, you put another person on the team and you make that person do the next five projects, with oversight and advice from the person who has the theory.",
        "user": "U03CEGR3HSL",
        "ts": "1693765247.800429",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "yfG",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U0245E9RB2B"
                            },
                            {
                                "type": "text",
                                "text": "  I think the secret there is to take Peter Naur seriously and make sure that at least three people in your organization always have the theory of the program. Once you get down to two or, God forbid, one, you put another person on the team and you make that person do the next five projects, with oversight and advice from the person who has the theory."
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1693699892.398749",
        "parent_user_id": "ULM3U6275",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U0245E9RB2B"
                ],
                "count": 1
            }
        ]
    }
]