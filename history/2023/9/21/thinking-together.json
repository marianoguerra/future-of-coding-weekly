[
    {
        "client_msg_id": "df4d4d6c-a3c5-483a-985f-c596ef443153",
        "type": "message",
        "text": "&gt; Where do you think a language like Inform fall on the \u2018formal\u2019 vs \u2018informal\u2019 spectrum?\nPreliminary question; what exactly changes from one end to the other of that spectrum? My current answer is: how much of the total information conveyed is formal. I'd love to hear from others who have thought about this question, or know about work on this topic in the literature.\n\nTo illustrate my definition, a few examples:\n\u2022 Machine code is near 100% formal.\n\u2022 Standard programming languages are mostly formal, the informal part being the variable names, which convey context-dependent information to humans but nothing to the compiler/interpreter.\n\u2022 Markup languages (HTML, Markdown, ...) are mostly informal, because the formalized information is not the most relevant part. You could strip it away and the rest would still fulfill its purpose.\nThere are lots of subtleties I am glossing over. Example: A Python program saying `print(\"...\")` with a 100 KB string is basically just decorated informal prose. My definition applies to typical or intended use, not possible extremes.\n\nBack to Inform: I cannot judge from the example which information is extracted from the code by formal processing. Is this a controlled natural language, like <http://attempto.ifi.uzh.ch/site/|Attempto> ? Or plain English from which some engine extracts isolated keywords?",
        "user": "UJBAJNFLK",
        "ts": "1695279976.600129",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "/+KlS",
                "elements": [
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Where do you think a language like Inform fall on the \u2018formal\u2019 vs \u2018informal\u2019 spectrum?"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nPreliminary question; what exactly changes from one end to the other of that spectrum? My current answer is: how much of the total information conveyed is formal. I'd love to hear from others who have thought about this question, or know about work on this topic in the literature.\n\nTo illustrate my definition, a few examples:\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Machine code is near 100% formal."
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Standard programming languages are mostly formal, the informal part being the variable names, which convey context-dependent information to humans but nothing to the compiler/interpreter."
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Markup languages (HTML, Markdown, ...) are mostly informal, because the formalized information is not the most relevant part. You could strip it away and the rest would still fulfill its purpose."
                                    }
                                ]
                            }
                        ],
                        "style": "bullet",
                        "indent": 0,
                        "border": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nThere are lots of subtleties I am glossing over. Example: A Python program saying "
                            },
                            {
                                "type": "text",
                                "text": "print(\"...\")",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " with a 100 KB string is basically just decorated informal prose. My definition applies to typical or intended use, not possible extremes.\n\nBack to Inform: I cannot judge from the example which information is extracted from the code by formal processing. Is this a controlled natural language, like "
                            },
                            {
                                "type": "link",
                                "url": "http://attempto.ifi.uzh.ch/site/",
                                "text": "Attempto"
                            },
                            {
                                "type": "text",
                                "text": " ? Or plain English from which some engine extracts isolated keywords?"
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1695279976.600129",
        "reply_count": 10,
        "reply_users_count": 3,
        "latest_reply": "1695391759.846499",
        "reply_users": [
            "U05SU27S1M2",
            "UGWUJUZHT",
            "UJBAJNFLK"
        ],
        "is_locked": false,
        "subscribed": false
    },
    {
        "client_msg_id": "81fdaed0-f95f-40b9-8bc0-ae97bb13c7c1",
        "type": "message",
        "text": "Informal aspects of notation are generally known as 'secondary notation' in the psychology of programming literature <https://en.wikipedia.org/wiki/Secondary_notation>",
        "user": "U05SU27S1M2",
        "ts": "1695283654.166929",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "NvWC",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Informal aspects of notation are generally known as 'secondary notation' in the psychology of programming literature "
                            },
                            {
                                "type": "link",
                                "url": "https://en.wikipedia.org/wiki/Secondary_notation"
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1695279976.600129",
        "parent_user_id": "UJBAJNFLK"
    },
    {
        "client_msg_id": "6dad0266-c67f-4759-b34b-a32c1d748f4b",
        "type": "message",
        "text": "as part of the cognitive dimensions of notation <https://en.wikipedia.org/wiki/Cognitive_dimensions_of_notations>",
        "user": "U05SU27S1M2",
        "ts": "1695283930.205149",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "2Fbad",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "as part of the cognitive dimensions of notation "
                            },
                            {
                                "type": "link",
                                "url": "https://en.wikipedia.org/wiki/Cognitive_dimensions_of_notations"
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1695279976.600129",
        "parent_user_id": "UJBAJNFLK"
    },
    {
        "client_msg_id": "d83e8ea9-744b-44c6-b675-8ea1d81e77d6",
        "type": "message",
        "text": "On another inform tip, I really enjoyed this talk from Graham Nelson, with lots of take-home ideas for making a learnable language that's engaging and open to change <https://www.youtube.com/watch?v=ZL7HjuFyKeE>",
        "user": "U05SU27S1M2",
        "ts": "1695284535.714269",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "hdP2Y",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "On another inform tip, I really enjoyed this talk from Graham Nelson, with lots of take-home ideas for making a learnable language that's engaging and open to change "
                            },
                            {
                                "type": "link",
                                "url": "https://www.youtube.com/watch?v=ZL7HjuFyKeE"
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "from_url": "https://www.youtube.com/watch?v=ZL7HjuFyKeE",
                "service_icon": "https://a.slack-edge.com/80588/img/unfurl_icons/youtube.png",
                "thumb_url": "https://i.ytimg.com/vi/ZL7HjuFyKeE/hqdefault.jpg",
                "thumb_width": 480,
                "thumb_height": 360,
                "video_html": "<iframe width=\"400\" height=\"225\" src=\"https://www.youtube.com/embed/ZL7HjuFyKeE?feature=oembed&autoplay=1&iv_load_policy=3\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" allowfullscreen title=\"NarraScope 2020: Inform 7 Update\"></iframe>",
                "video_html_width": 400,
                "video_html_height": 225,
                "id": 1,
                "original_url": "https://www.youtube.com/watch?v=ZL7HjuFyKeE",
                "fallback": "YouTube Video: NarraScope 2020: Inform 7 Update",
                "title": "NarraScope 2020: Inform 7 Update",
                "title_link": "https://www.youtube.com/watch?v=ZL7HjuFyKeE",
                "author_name": "Interactive Fiction Technology Foundation",
                "author_link": "https://www.youtube.com/@interactivefictiontechnolo311",
                "service_name": "YouTube",
                "service_url": "https://www.youtube.com/"
            }
        ],
        "reactions": [
            {
                "name": "eyes",
                "users": [
                    "UGWUJUZHT",
                    "UJBAJNFLK",
                    "U04717WKH5K"
                ],
                "count": 3
            }
        ]
    },
    {
        "client_msg_id": "d37e8f6d-3547-4a12-a2ce-d8a9aeda1b0b",
        "type": "message",
        "text": "I like to cleave \u201cprogramming languages\u201d into 2 categories (1) human readable and (2) machine readable.\n\nThe task of developing programming languages boils down to figuring out how to map (1) to (2).\n\nI think that the best language for (2) machine readability is Lisp syntax (not necessarily Lisp semantics, which is a different issue).  I think that the best language for (1) human readability is a hybrid of box-and-arrow diagrams mixed with text.  Currently, I am writing programs in `<http://draw.io|draw.io>` and compiling them to executable Odin code (thanks to Zac Nowicki).  I am using this, also, as a visual shell (VSH) to plumb together Ohm-JS and \u2018.RWR\u2019 (\u201crewrite\u201d nano-DSL) specifications to form transpilers (e.g. Scheme-&gt;JS).\n\nI firmly believe in what I learned in Physics - invent multiple notations suited to expressing the task(s) using \u201csimplifying assumptions\u201d and bolt them all together to form solutions using divide-and-conquer mentality.",
        "user": "UGWUJUZHT",
        "ts": "1695294988.991779",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "wp5p",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I like to cleave \u201cprogramming languages\u201d into 2 categories (1) human readable and (2) machine readable.\n\nThe task of developing programming languages boils down to figuring out how to map (1) to (2).\n\nI think that the best language for (2) machine readability is Lisp syntax (not necessarily Lisp semantics, which is a different issue).  I think that the best language for (1) human readability is a hybrid of box-and-arrow diagrams mixed with text.  Currently, I am writing programs in "
                            },
                            {
                                "type": "link",
                                "url": "http://draw.io",
                                "text": "draw.io",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " and compiling them to executable Odin code (thanks to Zac Nowicki).  I am using this, also, as a visual shell (VSH) to plumb together Ohm-JS and \u2018.RWR\u2019 (\u201crewrite\u201d nano-DSL) specifications to form transpilers (e.g. Scheme->JS).\n\nI firmly believe in what I learned in Physics - invent multiple notations suited to expressing the task(s) using \u201csimplifying assumptions\u201d and bolt them all together to form solutions using divide-and-conquer mentality."
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1695279976.600129",
        "parent_user_id": "UJBAJNFLK"
    },
    {
        "client_msg_id": "089e6127-3eb8-467c-8d9e-a2d993bee078",
        "type": "message",
        "text": "<@U05SU27S1M2> Thanks for those pointers! This area looks a bit messy: the article on cognitive dimensions says that secondary notation is independent of syntax, and the article on secondary notation quotes syntax highlighting as its first example.\n\nMore to the point, I don't see any of these dimensions as being about degree of formalization of the basic notation. It seems to be tacitly assumed that it's a highly formal programming language.",
        "user": "UJBAJNFLK",
        "ts": "1695303631.213629",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "NL5yY",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U05SU27S1M2"
                            },
                            {
                                "type": "text",
                                "text": " Thanks for those pointers! This area looks a bit messy: the article on cognitive dimensions says that secondary notation is independent of syntax, and the article on secondary notation quotes syntax highlighting as its first example.\n\nMore to the point, I don't see any of these dimensions as being about degree of formalization of the basic notation. It seems to be tacitly assumed that it's a highly formal programming language."
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1695279976.600129",
        "parent_user_id": "UJBAJNFLK"
    },
    {
        "client_msg_id": "fcbdf6af-0c4f-4199-8f84-67414d4278ec",
        "type": "message",
        "text": "I suppose syntax colouring is still independent of syntax in a sense.",
        "user": "U05SU27S1M2",
        "ts": "1695303698.923779",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Tzx/",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I suppose syntax colouring is still independent of syntax in a sense."
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1695279976.600129",
        "parent_user_id": "UJBAJNFLK"
    },
    {
        "client_msg_id": "b7ad8c5b-67ab-40ed-8171-bbbdb2fcf4fc",
        "type": "message",
        "text": "With the exception of e.g. Piet.",
        "user": "U05SU27S1M2",
        "ts": "1695303731.927419",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "oE/",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "With the exception of e.g. Piet."
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1695279976.600129",
        "parent_user_id": "UJBAJNFLK"
    },
    {
        "client_msg_id": "56c8aeb7-8632-4cc1-8643-fa6e588d3297",
        "type": "message",
        "text": "Are computer programming languages highly formal by definition?",
        "user": "U05SU27S1M2",
        "ts": "1695303795.033719",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "UhdYr",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Are computer programming languages highly formal by definition?"
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1695279976.600129",
        "parent_user_id": "UJBAJNFLK"
    },
    {
        "client_msg_id": "fdf52e79-7db4-4435-a2d5-b3d1724ab349",
        "type": "message",
        "text": "The only definition I am aware of is \"formal language\", which is defined as a set of symbols plus a set of syntax rules for valid expressions made from these symbols. That definition covers numbers written as Arabic numerals (or Roman numerals if you prefer). It also covers HTML, no matter the contents of the page. And it covers programming languages, which are formal languages with execution or evaluation semantics.\n\nBut that definition covers only the formal aspects of formal languages, not the informal aspects that remain outside of the definition. Like, for example, the information conveyed by the variable names of a program.",
        "user": "UJBAJNFLK",
        "ts": "1695308155.915399",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Fbw",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The only definition I am aware of is \"formal language\", which is defined as a set of symbols plus a set of syntax rules for valid expressions made from these symbols. That definition covers numbers written as Arabic numerals (or Roman numerals if you prefer). It also covers HTML, no matter the contents of the page. And it covers programming languages, which are formal languages with execution or evaluation semantics.\n\nBut that definition covers only the formal aspects of formal languages, not the informal aspects that remain outside of the definition. Like, for example, the information conveyed by the variable names of a program."
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1695279976.600129",
        "parent_user_id": "UJBAJNFLK"
    },
    {
        "client_msg_id": "8211f420-9ba2-4357-b835-71980cf6558d",
        "type": "message",
        "text": "So for HTML would you say that the data is informal language, but the metadata/semantic markup around it is formal language?",
        "user": "U05SU27S1M2",
        "ts": "1695371915.253569",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ZNd=n",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "So for HTML would you say that the data is informal language, but the metadata/semantic markup around it is formal language?"
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1695279976.600129",
        "parent_user_id": "UJBAJNFLK"
    },
    {
        "client_msg_id": "1289df64-6836-49d9-a660-64d93fbdb974",
        "type": "message",
        "text": "Yes. XML is a more difficult case, because it is used both as a markup language for textual documents (i.e. Docbook) and as a file format for storing tree-structured data.",
        "user": "UJBAJNFLK",
        "ts": "1695391759.846499",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "=oX0",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yes. XML is a more difficult case, because it is used both as a markup language for textual documents (i.e. Docbook) and as a file format for storing tree-structured data."
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1695279976.600129",
        "parent_user_id": "UJBAJNFLK"
    }
]