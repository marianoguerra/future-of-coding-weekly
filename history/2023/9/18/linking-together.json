[
    {
        "client_msg_id": "3f4d7107-5dcc-4180-88de-90a23ffb47ec",
        "type": "message",
        "text": "This podcast may be of interest to this group: \"The Future of Programming\" by Bruce Eckel and James Ward. What does the future of programming look like? In their opinion:\n\u2022 static typing over dynamic typing\n\u2022 IDE support is a must\n\u2022 the happy path is the resource efficient path\n\u2022 transparent concurrency\n\u2022 transparently distributed systems\n\u2022 embedded DSLs\n<https://podcasts.apple.com/us/podcast/82-the-future-of-programming/id1531666706?i=1000619939421>",
        "user": "U04JY2BF24E",
        "ts": "1695044389.092989",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "mULc",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "This podcast may be of interest to this group: \"The Future of Programming\" by Bruce Eckel and James Ward. What does the future of programming look like? In their opinion:\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "static typing over dynamic typing"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "IDE support is a must"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "the happy path is the resource efficient path"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "transparent concurrency"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "transparently distributed systems"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "embedded DSLs"
                                    }
                                ]
                            }
                        ],
                        "style": "bullet",
                        "indent": 0,
                        "border": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "link",
                                "url": "https://podcasts.apple.com/us/podcast/82-the-future-of-programming/id1531666706?i=1000619939421"
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "image_url": "https://is1-ssl.mzstatic.com/image/thumb/Podcasts124/v4/9b/e2/50/9be25082-6dfb-03d7-0251-c52ea98d0bed/mza_12609357682349939355.jpg/1200x630wp.png",
                "image_width": 1200,
                "image_height": 630,
                "image_bytes": 302460,
                "from_url": "https://podcasts.apple.com/us/podcast/82-the-future-of-programming/id1531666706?i=1000619939421",
                "service_icon": "https://podcasts.apple.com/favicon.ico",
                "id": 1,
                "original_url": "https://podcasts.apple.com/us/podcast/82-the-future-of-programming/id1531666706?i=1000619939421",
                "fallback": "Apple Podcasts: \u200eHappy Path Programming: #82 The Future of Programming on Apple Podcasts",
                "text": "\u200eShow Happy Path Programming, Ep #82 The Future of Programming - Jul 7, 2023",
                "title": "\u200eHappy Path Programming: #82 The Future of Programming on Apple Podcasts",
                "title_link": "https://podcasts.apple.com/us/podcast/82-the-future-of-programming/id1531666706?i=1000619939421",
                "service_name": "Apple Podcasts"
            }
        ],
        "thread_ts": "1695044389.092989",
        "reply_count": 2,
        "reply_users_count": 1,
        "latest_reply": "1695075852.911879",
        "reply_users": [
            "UA14TGLTC"
        ],
        "is_locked": false,
        "subscribed": false
    },
    {
        "client_msg_id": "1b382f82-a8fa-4ccb-b0b8-232d042fc33d",
        "type": "message",
        "text": "Strikes me as a better present: as in what we do now but less sucky, though to really get transparent concurrency and distribution \u2014 that certainly feels like future tech.  I'm going to have to listen.",
        "user": "UA14TGLTC",
        "ts": "1695055873.052389",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "mki",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Strikes me as a better present: as in what we do now but less sucky, though to really get transparent concurrency and distribution \u2014 that certainly feels like future tech.  I'm going to have to listen."
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "thread_ts": "1695044389.092989",
        "parent_user_id": "U04JY2BF24E",
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UCUSW7WVD",
                    "U05M5A8E0NT"
                ],
                "count": 2
            },
            {
                "name": "point_up::skin-tone-4",
                "users": [
                    "U8A5MS6R1"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "cd14e54e-c77d-47dc-b67b-d2add65a40dd",
        "type": "message",
        "text": "They didn't really get into the details, but I heard monads and other lifting constructs as a common theme.  For example, ZIO Test <https://zio.dev/reference/test/assertions/smart-assertions> does something to rewrite assertions \"smartly\" so that you don't have to use a bunch of \"assert*\" variants.  The also mention the Verse programming language, which seems to be playing with very flexible concurrency and non-determinacy constructs.  For example, instead of carefully deciding whether to enable/disable buttons in a UI as state changes, you could say, \"disable a button if pressing it would fail for any reason.\"",
        "user": "UA14TGLTC",
        "ts": "1695075852.911879",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "RGMYV",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "They didn't really get into the details, but I heard monads and other lifting constructs as a common theme.  For example, ZIO Test "
                            },
                            {
                                "type": "link",
                                "url": "https://zio.dev/reference/test/assertions/smart-assertions"
                            },
                            {
                                "type": "text",
                                "text": " does something to rewrite assertions \"smartly\" so that you don't have to use a bunch of \"assert*\" variants.  The also mention the Verse programming language, which seems to be playing with very flexible concurrency and non-determinacy constructs.  For example, instead of carefully deciding whether to enable/disable buttons in a UI as state changes, you could say, \"disable a button if pressing it would fail for any reason.\""
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "attachments": [
            {
                "image_url": "https://zio.dev/img/zio.png",
                "image_width": 2757,
                "image_height": 1123,
                "image_bytes": 204917,
                "from_url": "https://zio.dev/reference/test/assertions/smart-assertions",
                "service_icon": "https://zio.dev/img/favicon.png",
                "id": 1,
                "original_url": "https://zio.dev/reference/test/assertions/smart-assertions",
                "fallback": "Smart Assertions | ZIO",
                "text": "The smart assertion is a simple way to assert both ordinary values and ZIO effects. It uses the assertTrue function, which uses macro under the hood.",
                "title": "Smart Assertions | ZIO",
                "title_link": "https://zio.dev/reference/test/assertions/smart-assertions",
                "service_name": "zio.dev"
            }
        ],
        "thread_ts": "1695044389.092989",
        "parent_user_id": "U04JY2BF24E",
        "reactions": [
            {
                "name": "thinking_face",
                "users": [
                    "UEQ7QL15F"
                ],
                "count": 1
            }
        ]
    }
]