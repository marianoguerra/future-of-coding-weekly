[
    {
        "client_msg_id": "717ed74e-be9b-40d1-a052-f1c7c5005519",
        "type": "message",
        "text": "Hello all,\n\nVery proud to introduce :zap:\ufe0fHyperlayer - Debug Rails apps 10x faster:\n<https://github.com/geoffw8/hyperlayer>\n\n:point_up: Code and demo video in the repo.\n\nIt works by creating a visualisation layer which combines application flow, state and the code itself. It utilises Tracepoint and AST under the hood to build the visualisation. This visualisation means you can cut out a significant portion of the steps we have to go through to \"manually\" debug an issue, leading to the timesave.\n\nI would absolutely welcome any feedback. I think it could be a big deal!\n\nI'm really excited about being able to share this with the world.",
        "user": "U03G89L5Z62",
        "ts": "1696922632.060119",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "rwxUU",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Hello all,\n\nVery proud to introduce "
                            },
                            {
                                "type": "emoji",
                                "name": "zap",
                                "unicode": "26a1"
                            },
                            {
                                "type": "text",
                                "text": "\ufe0fHyperlayer - Debug Rails apps 10x faster:\n"
                            },
                            {
                                "type": "link",
                                "url": "https://github.com/geoffw8/hyperlayer"
                            },
                            {
                                "type": "text",
                                "text": "\n\n"
                            },
                            {
                                "type": "emoji",
                                "name": "point_up",
                                "unicode": "261d-fe0f"
                            },
                            {
                                "type": "text",
                                "text": " Code and demo video in the repo.\n\nIt works by creating a visualisation layer which combines application flow, state and the code itself. It utilises Tracepoint and AST under the hood to build the visualisation. This visualisation means you can cut out a significant portion of the steps we have to go through to \"manually\" debug an issue, leading to the timesave.\n\nI would absolutely welcome any feedback. I think it could be a big deal!\n\nI'm really excited about being able to share this with the world."
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "edited": {
            "user": "U03G89L5Z62",
            "ts": "1696922639.000000"
        }
    },
    {
        "type": "message",
        "text": "Started working on a prolog backend for coil.\n\nHere's an example of compiling a coil program to prolog & exploring the codebase via prolog repl.\n\nThis is early but the hope is to have an easily explorable codebase, to really treat the codebase as a database.\n\nAmbition for this is\n\u2022 Allow users of coil to write their own rules in prolog to ensure things about the program\n\u2022 Make writing a type checker easier for me\n\u2022 Make writing tooling for coil easier",
        "files": [
            {
                "id": "F061613D62C",
                "created": 1696946393,
                "timestamp": 1696946393,
                "name": "Screen Recording 2023-10-10 at 9.57.31 AM.mov",
                "title": "Screen Recording 2023-10-10 at 9.57.31 AM.mov",
                "mimetype": "video/quicktime",
                "filetype": "mov",
                "pretty_type": "QuickTime Movie",
                "user": "U03LJBR6THT",
                "user_team": "T5TCAFTA9",
                "editable": false,
                "size": 2860584,
                "mode": "hosted",
                "is_external": false,
                "external_type": "",
                "is_public": true,
                "public_url_shared": false,
                "display_as_bot": false,
                "username": "",
                "transcription": {
                    "status": "none"
                },
                "mp4": "https://files.slack.com/files-tmb/T5TCAFTA9-F061613D62C-ebe65e3450/screen_recording_2023-10-10_at_9.57.31_am.mp4",
                "url_private": "https://files.slack.com/files-tmb/T5TCAFTA9-F061613D62C-ebe65e3450/screen_recording_2023-10-10_at_9.57.31_am.mp4",
                "url_private_download": "https://files.slack.com/files-pri/T5TCAFTA9-F061613D62C/download/screen_recording_2023-10-10_at_9.57.31_am.mov",
                "hls": "https://files.slack.com/files-tmb/T5TCAFTA9-F061613D62C-ebe65e3450/file.m3u8?_xcb=1b1cb",
                "hls_embed": "data:application/vnd.apple.mpegurl;base64,I0VYVE0zVQojRVhULVgtVkVSU0lPTjozCiNFWFQtWC1JTkRFUEVOREVOVC1TRUdNRU5UUwojRVhULVgtU1RSRUFNLUlORjpCQU5EV0lEVEg9MzM1ODA4LEFWRVJBR0UtQkFORFdJRFRIPTI2ODYyNSxDT0RFQ1M9ImF2YzEuNjQwMDIwLG1wNGEuNDAuNSIsUkVTT0xVVElPTj05MTR4MTA4MCxGUkFNRS1SQVRFPTI5Ljk3MApkYXRhOmFwcGxpY2F0aW9uL3ZuZC5hcHBsZS5tcGVndXJsO2Jhc2U2NCxJMFZZVkUwelZRb2pSVmhVTFZndFZrVlNVMGxQVGpvekNpTkZXRlF0V0MxVVFWSkhSVlJFVlZKQlZFbFBUam8zQ2lORldGUXRXQzFOUlVSSlFTMVRSVkZWUlU1RFJUb3hDaU5GV0ZRdFdDMVFURUZaVEVsVFZDMVVXVkJGT2xaUFJBb2pSVmhVU1U1R09qWXVNREEyTEFwb2RIUndjem92TDJacGJHVnpMbk5zWVdOckxtTnZiUzltYVd4bGN5MTBiV0l2VkRWVVEwRkdWRUU1TFVZd05qRTJNVE5FTmpKRExXVmlaVFkxWlRNME5UQXZabWxzWlY5SVh6STJORjh4T1RJd2VERXdPREJmTmpVd01FdENVRk5mTjFGV1FsSmZNREF3TURFdWRITUtJMFZZVkVsT1JqbzJMakF3Tml3S2FIUjBjSE02THk5bWFXeGxjeTV6YkdGamF5NWpiMjB2Wm1sc1pYTXRkRzFpTDFRMVZFTkJSbFJCT1MxR01EWXhOakV6UkRZeVF5MWxZbVUyTldVek5EVXdMMlpwYkdWZlNGOHlOalJmTVRreU1IZ3hNRGd3WHpZMU1EQkxRbEJUWHpkUlZrSlNYekF3TURBeUxuUnpDaU5GV0ZSSlRrWTZOaTR3TURZc0NtaDBkSEJ6T2k4dlptbHNaWE11YzJ4aFkyc3VZMjl0TDJacGJHVnpMWFJ0WWk5VU5WUkRRVVpVUVRrdFJqQTJNVFl4TTBRMk1rTXRaV0psTmpWbE16UTFNQzltYVd4bFgwaGZNalkwWHpFNU1qQjRNVEE0TUY4Mk5UQXdTMEpRVTE4M1VWWkNVbDh3TURBd015NTBjd29qUlZoVVNVNUdPall1TURBMkxBcG9kSFJ3Y3pvdkwyWnBiR1Z6TG5Oc1lXTnJMbU52YlM5bWFXeGxjeTEwYldJdlZEVlVRMEZHVkVFNUxVWXdOakUyTVRORU5qSkRMV1ZpWlRZMVpUTTBOVEF2Wm1sc1pWOUlYekkyTkY4eE9USXdlREV3T0RCZk5qVXdNRXRDVUZOZk4xRldRbEpmTURBd01EUXVkSE1LSTBWWVZFbE9Sam8yTGpBd05pd0thSFIwY0hNNkx5OW1hV3hsY3k1emJHRmpheTVqYjIwdlptbHNaWE10ZEcxaUwxUTFWRU5CUmxSQk9TMUdNRFl4TmpFelJEWXlReTFsWW1VMk5XVXpORFV3TDJacGJHVmZTRjh5TmpSZk1Ua3lNSGd4TURnd1h6WTFNREJMUWxCVFh6ZFJWa0pTWHpBd01EQTFMblJ6Q2lORldGUkpUa1k2Tmk0d01EWXNDbWgwZEhCek9pOHZabWxzWlhNdWMyeGhZMnN1WTI5dEwyWnBiR1Z6TFhSdFlpOVVOVlJEUVVaVVFUa3RSakEyTVRZeE0wUTJNa010WldKbE5qVmxNelExTUM5bWFXeGxYMGhmTWpZMFh6RTVNakI0TVRBNE1GODJOVEF3UzBKUVUxODNVVlpDVWw4d01EQXdOaTUwY3dvalJWaFVTVTVHT2pZdU1EQTJMQXBvZEhSd2N6b3ZMMlpwYkdWekxuTnNZV05yTG1OdmJTOW1hV3hsY3kxMGJXSXZWRFZVUTBGR1ZFRTVMVVl3TmpFMk1UTkVOakpETFdWaVpUWTFaVE0wTlRBdlptbHNaVjlJWHpJMk5GOHhPVEl3ZURFd09EQmZOalV3TUV0Q1VGTmZOMUZXUWxKZk1EQXdNRGN1ZEhNS0kwVllWRWxPUmpveExqVXdNaXdLYUhSMGNITTZMeTltYVd4bGN5NXpiR0ZqYXk1amIyMHZabWxzWlhNdGRHMWlMMVExVkVOQlJsUkJPUzFHTURZeE5qRXpSRFl5UXkxbFltVTJOV1V6TkRVd0wyWnBiR1ZmU0Y4eU5qUmZNVGt5TUhneE1EZ3dYelkxTURCTFFsQlRYemRSVmtKU1h6QXdNREE0TG5SekNpTkZXRlF0V0MxRlRrUk1TVk5VQ2c9PQojRVhULVgtU1RSRUFNLUlORjpCQU5EV0lEVEg9MjU4NDI5LEFWRVJBR0UtQkFORFdJRFRIPTIyNjczNCxDT0RFQ1M9ImF2YzEuNjQwMDFmLG1wNGEuNDAuNSIsUkVTT0xVVElPTj02MTB4NzIwLEZSQU1FLVJBVEU9MjkuOTcwCmh0dHBzOi8vZmlsZXMuc2xhY2suY29tL2ZpbGVzLXRtYi9UNVRDQUZUQTktRjA2MTYxM0Q2MkMtZWJlNjVlMzQ1MC9maWxlX0hfMjY0XzEyODB4NzIwXzM1MDBLQlBTXzdRVkJSLm0zdTgK",
                "mp4_low": "https://files.slack.com/files-tmb/T5TCAFTA9-F061613D62C-ebe65e3450/screen_recording_2023-10-10_at_9.57.31_am_trans.mp4",
                "duration_ms": 43543,
                "media_display_type": "video",
                "thumb_video": "https://files.slack.com/files-tmb/T5TCAFTA9-F061613D62C-ebe65e3450/screen_recording_2023-10-10_at_9.57.31_am_thumb_video.jpeg",
                "thumb_video_w": 1160,
                "thumb_video_h": 1372,
                "permalink": "https://futureofcoding.slack.com/files/U03LJBR6THT/F061613D62C/screen_recording_2023-10-10_at_9.57.31_am.mov",
                "permalink_public": "https://slack-files.com/T5TCAFTA9-F061613D62C-aca6837bc4",
                "is_starred": false,
                "has_rich_preview": false,
                "file_access": "visible"
            }
        ],
        "upload": false,
        "user": "U03LJBR6THT",
        "display_as_bot": false,
        "ts": "1696946448.505859",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "bgqAu",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Started working on a prolog backend for coil.\n\nHere's an example of compiling a coil program to prolog & exploring the codebase via prolog repl.\n\nThis is early but the hope is to have an easily explorable codebase, to really treat the codebase as a database.\n\nAmbition for this is\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Allow users of coil to write their own rules in prolog to ensure things about the program"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Make writing a type checker easier for me"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Make writing tooling for coil easier"
                                    }
                                ]
                            }
                        ],
                        "style": "bullet",
                        "indent": 0,
                        "border": 0
                    }
                ]
            }
        ],
        "edited": {
            "user": "U03LJBR6THT",
            "ts": "1696951454.000000"
        },
        "client_msg_id": "94ebbb94-5df1-4603-abc2-bdb8baba7591",
        "thread_ts": "1696946448.505859",
        "reply_count": 1,
        "reply_users_count": 1,
        "latest_reply": "1697034066.781369",
        "reply_users": [
            "U03LJBR6THT"
        ],
        "is_locked": false,
        "subscribed": false,
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UK3LH8CF5"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "8883e6f2-81bf-4a37-a5f6-011d0c98387e",
        "type": "message",
        "text": "Talking to others I realized I'm giving the wrong idea by talking about types here.\n\nI'm not very interested in building a full fledged type system, but a very powerful constraint/linter system that end users can easily extend.",
        "user": "U03LJBR6THT",
        "ts": "1697034066.781369",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "+DZ3n",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Talking to others I realized I'm giving the wrong idea by talking about types here.\n\nI'm not very interested in building a full fledged type system, but a very powerful constraint/linter system that end users can easily extend."
                            }
                        ]
                    }
                ]
            }
        ],
        "team": "T5TCAFTA9",
        "edited": {
            "user": "U03LJBR6THT",
            "ts": "1697034084.000000"
        },
        "thread_ts": "1696946448.505859",
        "parent_user_id": "U03LJBR6THT"
    }
]